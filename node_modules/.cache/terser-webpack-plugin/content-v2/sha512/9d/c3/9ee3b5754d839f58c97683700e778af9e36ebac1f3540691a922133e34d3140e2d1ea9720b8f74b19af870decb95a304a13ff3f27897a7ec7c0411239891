{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{1808:function(t,r,n){\"use strict\";var e=n(27),o=n(216).trim;e({target:\"String\",proto:!0,forced:n(1922)(\"trim\")},{trim:function(){return o(this)}})},1915:function(t,r,n){var e=n(38),o=n(18),c=n(111),i=n(209),u=n(42).f,a=n(98).f,f=n(208),s=n(179),l=n(191),p=n(46),_=n(24),y=n(64).enforce,d=n(192),h=n(20)(\"match\"),b=o.RegExp,v=b.prototype,m=/a/g,g=/a/g,w=new b(m)!==m,z=l.UNSUPPORTED_Y;if(e&&c(\"RegExp\",!w||z||_((function(){return g[h]=!1,b(m)!=m||b(g)==g||\"/a/i\"!=b(m,\"i\")})))){for(var j=function(t,r){var n,e=this instanceof j,o=f(t),c=void 0===r;if(!e&&o&&t.constructor===j&&c)return t;w?o&&!c&&(t=t.source):t instanceof j&&(c&&(r=s.call(t)),t=t.source),z&&(n=!!r&&r.indexOf(\"y\")>-1)&&(r=r.replace(/y/g,\"\"));var u=i(w?new b(t,r):b(t,r),e?this:v,j);z&&n&&(y(u).sticky=!0);return u},x=function(t){t in j||u(j,t,{configurable:!0,get:function(){return b[t]},set:function(r){b[t]=r}})},k=a(b),O=0;k.length>O;)x(k[O++]);v.constructor=j,j.prototype=v,p(o,\"RegExp\",j)}d(\"RegExp\")},1918:function(t,r,n){\"use strict\";function e(t,r){r=r?Array.isArray(r)?r:[r]:[],Object.freeze(r);var n=t.renderer.rules.link_open||this.defaultRender;t.renderer.rules.link_open=function(t,e,o,c,i){var u=function(t,r){var n,e,o=t.attrs[t.attrIndex(\"href\")][1];for(n=0;n<r.length;++n){if(\"function\"!==typeof(e=r[n]).matcher)return e;if(e.matcher(o,e))return e}}(t[e],r),a=u&&u.attrs;return a&&function(t,r,n){Object.keys(n).forEach((function(e){var o,c=n[e];\"className\"===e&&(e=\"class\"),(o=r[t].attrIndex(e))<0?r[t].attrPush([e,c]):r[t].attrs[o][1]=c}))}(e,t,a),n(t,e,o,c,i)}}e.defaultRender=function(t,r,n,e,o){return o.renderToken(t,r,n)},t.exports=e},1922:function(t,r,n){var e=n(24),o=n(243);t.exports=function(t){return e((function(){return!!o[t]()||\"\\u200b\\x85\\u180e\"!=\"\\u200b\\x85\\u180e\"[t]()||o[t].name!==t}))}},215:function(t,r){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,\"loaded\",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,\"id\",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},263:function(t,r,n){\"use strict\";function e(t){return e=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"===typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},e(t)}function o(t,r){return function(t){if(Array.isArray(t))return t}(t)||function(t,r){var n=t&&(\"undefined\"!==typeof Symbol&&t[Symbol.iterator]||t[\"@@iterator\"]);if(null==n)return;var e,o,c=[],i=!0,u=!1;try{for(n=n.call(t);!(i=(e=n.next()).done)&&(c.push(e.value),!r||c.length!==r);i=!0);}catch(a){u=!0,o=a}finally{try{i||null==n.return||n.return()}finally{if(u)throw o}}return c}(t,r)||i(t,r)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function c(t){return function(t){if(Array.isArray(t))return u(t)}(t)||function(t){if(\"undefined\"!==typeof Symbol&&null!=t[Symbol.iterator]||null!=t[\"@@iterator\"])return Array.from(t)}(t)||i(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")}()}function i(t,r){if(t){if(\"string\"===typeof t)return u(t,r);var n=Object.prototype.toString.call(t).slice(8,-1);return\"Object\"===n&&t.constructor&&(n=t.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(t):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(t,r):void 0}}function u(t,r){(null==r||r>t.length)&&(r=t.length);for(var n=0,e=new Array(r);n<r;n++)e[n]=t[n];return e}function a(t,r){return!r||\"object\"!==e(r)&&\"function\"!==typeof r?function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t):r}function f(t){var r=\"function\"===typeof Map?new Map:void 0;return f=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf(\"[native code]\")))return t;var n;if(\"function\"!==typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(\"undefined\"!==typeof r){if(r.has(t))return r.get(t);r.set(t,e)}function e(){return s(t,arguments,_(this).constructor)}return e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),p(e,t)},f(t)}function s(t,r,n){return s=l()?Reflect.construct:function(t,r,n){var e=[null];e.push.apply(e,r);var o=new(Function.bind.apply(t,e));return n&&p(o,n.prototype),o},s.apply(null,arguments)}function l(){if(\"undefined\"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"===typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function p(t,r){return p=Object.setPrototypeOf||function(t,r){return t.__proto__=r,t},p(t,r)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}function y(t,r,n){return Math.min(Math.max(t,n),r)}n.d(r,\"a\",(function(){return A})),n.d(r,\"b\",(function(){return q})),n.d(r,\"c\",(function(){return E})),n.d(r,\"d\",(function(){return I}));var d=function(t){!function(t,r){if(\"function\"!==typeof r&&null!==r)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),r&&p(t,r)}(o,t);var r,n,e=(r=o,n=l(),function(){var t,e=_(r);if(n){var o=_(this).constructor;t=Reflect.construct(e,arguments,o)}else t=e.apply(this,arguments);return a(this,t)});function o(t){return function(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,o),e.call(this,'Failed to parse color: \"'.concat(t,'\"'))}return o}(f(Error)),h=d;function b(t){if(\"string\"!==typeof t)throw new h(t);if(\"transparent\"===t.trim().toLowerCase())return[0,0,0,0];var r=t.trim();r=k.test(t)?function(t){var r=t.toLowerCase().trim(),n=m[function(t){var r=5381,n=t.length;for(;n;)r=33*r^t.charCodeAt(--n);return(r>>>0)%2341}(r)];if(!n)throw new h(t);return\"#\".concat(n)}(t):t;var n=w.exec(r);if(n){var e=Array.from(n).slice(1);return[].concat(c(e.slice(0,3).map((function(t){return parseInt(g(t,2),16)}))),[parseInt(g(e[3]||\"f\",2),16)/255])}var i=z.exec(r);if(i){var u=Array.from(i).slice(1);return[].concat(c(u.slice(0,3).map((function(t){return parseInt(t,16)}))),[parseInt(u[3]||\"ff\",16)/255])}var a=j.exec(r);if(a){var f=Array.from(a).slice(1);return[].concat(c(f.slice(0,3).map((function(t){return parseInt(t,10)}))),[parseFloat(f[3]||\"1\")])}var s=x.exec(r);if(s){var l=o(Array.from(s).slice(1).map(parseFloat),4),p=l[0],_=l[1],d=l[2],b=l[3];if(y(0,100,_)!==_)throw new h(t);if(y(0,100,d)!==d)throw new h(t);return[].concat(c(S(p,_,d)),[Number.isNaN(b)?1:b])}throw new h(t)}var v=function(t){return parseInt(t.replace(/_/g,\"\"),36)},m=\"1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm\".split(\" \").reduce((function(t,r){for(var n=v(r.substring(0,3)),e=v(r.substring(3)).toString(16),o=\"\",c=0;c<6-e.length;c++)o+=\"0\";return t[n]=\"\".concat(o).concat(e),t}),{});var g=function(t,r){return Array.from(Array(r)).map((function(){return t})).join(\"\")},w=new RegExp(\"^#\".concat(g(\"([a-f0-9])\",3),\"([a-f0-9])?$\"),\"i\"),z=new RegExp(\"^#\".concat(g(\"([a-f0-9]{2})\",3),\"([a-f0-9]{2})?$\"),\"i\"),j=new RegExp(\"^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*\".concat(g(\",\\\\s*(\\\\d+)\\\\s*\",2),\"(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$\"),\"i\"),x=/^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i,k=/^[a-z]+$/i,O=function(t){return Math.round(255*t)},S=function(t,r,n){var e=n/100;if(0===r)return[e,e,e].map(O);var o=(t%360+360)%360/60,c=(1-Math.abs(2*e-1))*(r/100),i=c*(1-Math.abs(o%2-1)),u=0,a=0,f=0;o>=0&&o<1?(u=c,a=i):o>=1&&o<2?(u=i,a=c):o>=2&&o<3?(a=c,f=i):o>=3&&o<4?(a=i,f=c):o>=4&&o<5?(u=i,f=c):o>=5&&o<6&&(u=c,f=i);var s=e-c/2;return[u+s,a+s,f+s].map(O)};function q(t){if(\"transparent\"===t)return 0;function r(t){var r=t/255;return r<=.04045?r/12.92:Math.pow((r+.055)/1.055,2.4)}var n=o(b(t),3),e=n[0],c=n[1],i=n[2];return.2126*r(e)+.7152*r(c)+.0722*r(i)}function A(t,r){var n=q(t),e=q(r);return n>e?(n+.05)/(e+.05):(e+.05)/(n+.05)}function R(t,r,n,e){return\"rgba(\".concat(y(0,255,t).toFixed(),\", \").concat(y(0,255,r).toFixed(),\", \").concat(y(0,255,n).toFixed(),\", \").concat(parseFloat(y(0,1,e).toFixed(3)),\")\")}function E(t,r,n){var e=function(t,r){return 3===r?t:t/255},c=o(b(t).map(e),4),i=c[0],u=c[1],a=c[2],f=c[3],s=o(b(r).map(e),4),l=s[0],p=s[1],_=s[2],y=s[3],d=y-f,h=2*n-1,v=((h*d===-1?h:h+d/(1+h*d))+1)/2,m=1-v;return R(255*(i*m+l*v),255*(u*m+p*v),255*(a*m+_*v),y*n+f*(1-n))}function I(t){var r=o(b(t),4),n=r[0],e=r[1],c=r[2],i=r[3],u=function(t){var r=y(0,255,t).toString(16);return 1===r.length?\"0\".concat(r):r};return\"#\".concat(u(n)).concat(u(e)).concat(u(c)).concat(i<1?u(Math.round(255*i)):\"\")}}}]);","name":"js/17-d0cb8434329212d422e0.chunk.js","map":{"version":3,"names":["window","push","module","exports","__webpack_require__","$","$trim","trim","target","proto","forced","forcedStringTrimMethod","this","DESCRIPTORS","global","isForced","inheritIfRequired","defineProperty","f","getOwnPropertyNames","isRegExp","getFlags","stickyHelpers","redefine","fails","enforceInternalState","enforce","setSpecies","MATCH","wellKnownSymbol","NativeRegExp","RegExp","RegExpPrototype","prototype","re1","re2","CORRECT_NEW","UNSUPPORTED_Y","RegExpWrapper","pattern","flags","sticky","thisIsRegExp","patternIsRegExp","flagsAreUndefined","undefined","constructor","source","call","indexOf","replace","result","proxy","key","configurable","get","set","it","keys","index","length","markdownitLinkAttributes","md","configs","Array","isArray","Object","freeze","defaultRender","renderer","rules","link_open","tokens","idx","options","env","self","config","link","i","href","attrs","attrIndex","matcher","findFirstMatchingConfig","attributes","forEach","attr","value","attrPush","applyAttributes","renderToken","whitespaces","METHOD_NAME","name","webpackPolyfill","deprecate","paths","children","enumerable","l","__webpack_exports__","_typeof","obj","Symbol","iterator","_slicedToArray","arr","_arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","_unsupportedIterableToArray","TypeError","_nonIterableRest","_toConsumableArray","_arrayLikeToArray","_arrayWithoutHoles","iter","from","_iterableToArray","_nonIterableSpread","o","minLen","n","toString","slice","test","len","arr2","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_wrapNativeSuper","Class","_cache","Map","fn","Function","has","Wrapper","_construct","arguments","_getPrototypeOf","create","writable","_setPrototypeOf","Parent","args","_isNativeReflectConstruct","Reflect","construct","a","apply","instance","bind","sham","Proxy","Boolean","valueOf","e","p","setPrototypeOf","__proto__","getPrototypeOf","guard","low","high","Math","min","max","d","getContrast","getLuminance","mix","toHex","ColorError","_Error","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","_super","Super","NewTarget","color","Constructor","_classCallCheck","concat","Error","ColorError$1","parseToRgba","toLowerCase","normalizedColor","namedColorRegex","normalizedColorName","compressedColorMap","str","hash","charCodeAt","nameToHex","reducedHexMatch","reducedHexRegex","exec","map","x","parseInt","r","hexMatch","hexRegex","rgbaMatch","rgbaRegex","_arr2","parseFloat","hslaMatch","hslaRegex","_Array$from$slice$map2","h","s","hslToRgb","Number","isNaN","colorToInt","split","reduce","acc","substring","hex","prefix","amount","join","roundColor","round","hue","saturation","lightness","huePrime","chroma","abs","secondComponent","red","green","blue","lightnessModification","channel","pow","_parseToRgba2","g","b","color1","color2","luminance1","luminance2","rgba","alpha","toFixed","weight","normalize","_parseToRgba$map4","r1","g1","b1","a1","_parseToRgba$map6","r2","g2","b2","a2","alphaDelta","normalizedWeight","weight2","weight1","_parseToRgba6"],"sources":["js/17-d0cb8434329212d422e0.chunk.js"],"mappings":"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"},"input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[17],{\n\n/***/ 1808:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar $ = __webpack_require__(27);\nvar $trim = __webpack_require__(216).trim;\nvar forcedStringTrimMethod = __webpack_require__(1922);\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n\n\n/***/ }),\n\n/***/ 1915:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar DESCRIPTORS = __webpack_require__(38);\nvar global = __webpack_require__(18);\nvar isForced = __webpack_require__(111);\nvar inheritIfRequired = __webpack_require__(209);\nvar defineProperty = __webpack_require__(42).f;\nvar getOwnPropertyNames = __webpack_require__(98).f;\nvar isRegExp = __webpack_require__(208);\nvar getFlags = __webpack_require__(179);\nvar stickyHelpers = __webpack_require__(191);\nvar redefine = __webpack_require__(46);\nvar fails = __webpack_require__(24);\nvar enforceInternalState = __webpack_require__(64).enforce;\nvar setSpecies = __webpack_require__(192);\nvar wellKnownSymbol = __webpack_require__(20);\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) {\n      var state = enforceInternalState(result);\n      state.sticky = true;\n    }\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n\n\n/***/ }),\n\n/***/ 1918:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n // Adapted from https://github.com/markdown-it/markdown-it/blob/fbc6b0fed563ba7c00557ab638fd19752f8e759d/docs/architecture.md\n\nfunction findFirstMatchingConfig(link, configs) {\n  var i, config;\n  var href = link.attrs[link.attrIndex(\"href\")][1];\n\n  for (i = 0; i < configs.length; ++i) {\n    config = configs[i]; // If there is a matcher function defined then call it\n    // Matcher Function should return a boolean indicating\n    // whether or not it matched. If it matched, use that\n    // configuration, otherwise, try the next one.\n\n    if (typeof config.matcher === \"function\") {\n      if (config.matcher(href, config)) {\n        return config;\n      } else {\n        continue;\n      }\n    }\n\n    return config;\n  }\n}\n\nfunction applyAttributes(idx, tokens, attributes) {\n  Object.keys(attributes).forEach(function (attr) {\n    var attrIndex;\n    var value = attributes[attr];\n\n    if (attr === \"className\") {\n      // when dealing with applying classes\n      // programatically, some programmers\n      // may prefer to use the className syntax\n      attr = \"class\";\n    }\n\n    attrIndex = tokens[idx].attrIndex(attr);\n\n    if (attrIndex < 0) {\n      // attr doesn't exist, add new attribute\n      tokens[idx].attrPush([attr, value]);\n    } else {\n      // attr already exists, overwrite it\n      tokens[idx].attrs[attrIndex][1] = value; // replace value of existing attr\n    }\n  });\n}\n\nfunction markdownitLinkAttributes(md, configs) {\n  if (!configs) {\n    configs = [];\n  } else {\n    configs = Array.isArray(configs) ? configs : [configs];\n  }\n\n  Object.freeze(configs);\n  var defaultRender = md.renderer.rules.link_open || this.defaultRender;\n\n  md.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n    var config = findFirstMatchingConfig(tokens[idx], configs);\n    var attributes = config && config.attrs;\n\n    if (attributes) {\n      applyAttributes(idx, tokens, attributes);\n    } // pass token to default renderer.\n\n\n    return defaultRender(tokens, idx, options, env, self);\n  };\n}\n\nmarkdownitLinkAttributes.defaultRender = function (tokens, idx, options, env, self) {\n  return self.renderToken(tokens, idx, options);\n};\n\nmodule.exports = markdownitLinkAttributes;\n\n/***/ }),\n\n/***/ 1922:\n/***/ (function(module, exports, __webpack_require__) {\n\nvar fails = __webpack_require__(24);\nvar whitespaces = __webpack_require__(243);\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n\n\n/***/ }),\n\n/***/ 215:\n/***/ (function(module, exports) {\n\nmodule.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};\n\n/***/ }),\n\n/***/ 263:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export ColorError */\n/* unused harmony export adjustHue */\n/* unused harmony export darken */\n/* unused harmony export desaturate */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return getContrast; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return getLuminance; });\n/* unused harmony export getScale */\n/* unused harmony export guard */\n/* unused harmony export hasBadContrast */\n/* unused harmony export hsla */\n/* unused harmony export lighten */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return mix; });\n/* unused harmony export opacify */\n/* unused harmony export parseToHsla */\n/* unused harmony export parseToRgba */\n/* unused harmony export readableColor */\n/* unused harmony export readableColorIsBlack */\n/* unused harmony export rgba */\n/* unused harmony export saturate */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return toHex; });\n/* unused harmony export toHsla */\n/* unused harmony export toRgba */\n/* unused harmony export transparentize */\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low, high, value) {\n  return Math.min(Math.max(low, value), high);\n}\n\nvar ColorError = /*#__PURE__*/function (_Error) {\n  _inherits(ColorError, _Error);\n\n  var _super = _createSuper(ColorError);\n\n  function ColorError(color) {\n    _classCallCheck(this, ColorError);\n\n    return _super.call(this, \"Failed to parse color: \\\"\".concat(color, \"\\\"\"));\n  }\n\n  return ColorError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ColorError$1 = ColorError;\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\n\nfunction parseToRgba(color) {\n  if (typeof color !== 'string') throw new ColorError$1(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n  var normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n  var reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n\n  if (reducedHexMatch) {\n    var arr = Array.from(reducedHexMatch).slice(1);\n    return [].concat(_toConsumableArray(arr.slice(0, 3).map(function (x) {\n      return parseInt(r(x, 2), 16);\n    })), [parseInt(r(arr[3] || 'f', 2), 16) / 255]);\n  }\n\n  var hexMatch = hexRegex.exec(normalizedColor);\n\n  if (hexMatch) {\n    var _arr = Array.from(hexMatch).slice(1);\n\n    return [].concat(_toConsumableArray(_arr.slice(0, 3).map(function (x) {\n      return parseInt(x, 16);\n    })), [parseInt(_arr[3] || 'ff', 16) / 255]);\n  }\n\n  var rgbaMatch = rgbaRegex.exec(normalizedColor);\n\n  if (rgbaMatch) {\n    var _arr2 = Array.from(rgbaMatch).slice(1);\n\n    return [].concat(_toConsumableArray(_arr2.slice(0, 3).map(function (x) {\n      return parseInt(x, 10);\n    })), [parseFloat(_arr2[3] || '1')]);\n  }\n\n  var hslaMatch = hslaRegex.exec(normalizedColor);\n\n  if (hslaMatch) {\n    var _Array$from$slice$map = Array.from(hslaMatch).slice(1).map(parseFloat),\n        _Array$from$slice$map2 = _slicedToArray(_Array$from$slice$map, 4),\n        h = _Array$from$slice$map2[0],\n        s = _Array$from$slice$map2[1],\n        l = _Array$from$slice$map2[2],\n        a = _Array$from$slice$map2[3];\n\n    if (guard(0, 100, s) !== s) throw new ColorError$1(color);\n    if (guard(0, 100, l) !== l) throw new ColorError$1(color);\n    return [].concat(_toConsumableArray(hslToRgb(h, s, l)), [Number.isNaN(a) ? 1 : a]);\n  }\n\n  throw new ColorError$1(color);\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n\n\n  return (hash >>> 0) % 2341;\n}\n\nvar colorToInt = function colorToInt(x) {\n  return parseInt(x.replace(/_/g, ''), 36);\n};\n\nvar compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'.split(' ').reduce(function (acc, next) {\n  var key = colorToInt(next.substring(0, 3));\n  var hex = colorToInt(next.substring(3)).toString(16); // NOTE: padStart could be used here but it breaks Node 6 compat\n  // https://github.com/ricokahler/color2k/issues/351\n\n  var prefix = '';\n\n  for (var i = 0; i < 6 - hex.length; i++) {\n    prefix += '0';\n  }\n\n  acc[key] = \"\".concat(prefix).concat(hex);\n  return acc;\n}, {});\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\n\nfunction nameToHex(color) {\n  var normalizedColorName = color.toLowerCase().trim();\n  var result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError$1(color);\n  return \"#\".concat(result);\n}\n\nvar r = function r(str, amount) {\n  return Array.from(Array(amount)).map(function () {\n    return str;\n  }).join('');\n};\n\nvar reducedHexRegex = new RegExp(\"^#\".concat(r('([a-f0-9])', 3), \"([a-f0-9])?$\"), 'i');\nvar hexRegex = new RegExp(\"^#\".concat(r('([a-f0-9]{2})', 3), \"([a-f0-9]{2})?$\"), 'i');\nvar rgbaRegex = new RegExp(\"^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*\".concat(r(',\\\\s*(\\\\d+)\\\\s*', 2), \"(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$\"), 'i');\nvar hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nvar namedColorRegex = /^[a-z]+$/i;\n\nvar roundColor = function roundColor(color) {\n  return Math.round(color * 255);\n};\n\nvar hslToRgb = function hslToRgb(hue, saturation, lightness) {\n  var l = lightness / 100;\n\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor);\n  } // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n\n\n  var huePrime = (hue % 360 + 360) % 360 / 60;\n  var chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  var lightnessModification = l - chroma / 2;\n  var finalRed = red + lightnessModification;\n  var finalGreen = green + lightnessModification;\n  var finalBlue = blue + lightnessModification;\n  return [finalRed, finalGreen, finalBlue].map(roundColor);\n}; // taken from:\n// https://github.com/styled-components/polished/blob/a23a6a2bb26802b3d922d9c3b67bac3f3a54a310/src/internalHelpers/_rgbToHsl.js\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\n\n\nfunction parseToHsla(color) {\n  var _parseToRgba$map = parseToRgba(color).map(function (value, index) {\n    return (// 3rd index is alpha channel which is already normalized\n      index === 3 ? value : value / 255\n    );\n  }),\n      _parseToRgba$map2 = _slicedToArray(_parseToRgba$map, 4),\n      red = _parseToRgba$map2[0],\n      green = _parseToRgba$map2[1],\n      blue = _parseToRgba$map2[2],\n      alpha = _parseToRgba$map2[3];\n\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2; // achromatic\n\n  if (max === min) return [0, 0, lightness, alpha];\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  var hue = 60 * (red === max ? (green - blue) / delta + (green < blue ? 6 : 0) : green === max ? (blue - red) / delta + 2 : (red - green) / delta + 4);\n  return [hue, saturation, lightness, alpha];\n}\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\n\n\nfunction hsla(hue, saturation, lightness, alpha) {\n  return \"hsla(\".concat((hue % 360).toFixed(), \", \").concat(guard(0, 100, saturation * 100).toFixed(), \"%, \").concat(guard(0, 100, lightness * 100).toFixed(), \"%, \").concat(parseFloat(guard(0, 1, alpha).toFixed(3)), \")\");\n}\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\n\n\nfunction adjustHue(color, degrees) {\n  var _parseToHsla = parseToHsla(color),\n      _parseToHsla2 = _slicedToArray(_parseToHsla, 4),\n      h = _parseToHsla2[0],\n      s = _parseToHsla2[1],\n      l = _parseToHsla2[2],\n      a = _parseToHsla2[3];\n\n  return hsla(h + degrees, s, l, a);\n}\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\n\n\nfunction darken(color, amount) {\n  var _parseToHsla3 = parseToHsla(color),\n      _parseToHsla4 = _slicedToArray(_parseToHsla3, 4),\n      hue = _parseToHsla4[0],\n      saturation = _parseToHsla4[1],\n      lightness = _parseToHsla4[2],\n      alpha = _parseToHsla4[3];\n\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\n\n\nfunction desaturate(color, amount) {\n  var _parseToHsla5 = parseToHsla(color),\n      _parseToHsla6 = _slicedToArray(_parseToHsla5, 4),\n      h = _parseToHsla6[0],\n      s = _parseToHsla6[1],\n      l = _parseToHsla6[2],\n      a = _parseToHsla6[3];\n\n  return hsla(h, s - amount, l, a);\n} // taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\n\n\nfunction getLuminance(color) {\n  if (color === 'transparent') return 0;\n\n  function f(x) {\n    var channel = x / 255;\n    return channel <= 0.04045 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }\n\n  var _parseToRgba = parseToRgba(color),\n      _parseToRgba2 = _slicedToArray(_parseToRgba, 3),\n      r = _parseToRgba2[0],\n      g = _parseToRgba2[1],\n      b = _parseToRgba2[2];\n\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n} // taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getContrast.js\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\n\n\nfunction getContrast(color1, color2) {\n  var luminance1 = getLuminance(color1);\n  var luminance2 = getLuminance(color2);\n  return luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\n\n\nfunction rgba(red, green, blue, alpha) {\n  return \"rgba(\".concat(guard(0, 255, red).toFixed(), \", \").concat(guard(0, 255, green).toFixed(), \", \").concat(guard(0, 255, blue).toFixed(), \", \").concat(parseFloat(guard(0, 1, alpha).toFixed(3)), \")\");\n}\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\n\n\nfunction mix(color1, color2, weight) {\n  var normalize = function normalize(n, index) {\n    return (// 3rd index is alpha channel which is already normalized\n      index === 3 ? n : n / 255\n    );\n  };\n\n  var _parseToRgba$map3 = parseToRgba(color1).map(normalize),\n      _parseToRgba$map4 = _slicedToArray(_parseToRgba$map3, 4),\n      r1 = _parseToRgba$map4[0],\n      g1 = _parseToRgba$map4[1],\n      b1 = _parseToRgba$map4[2],\n      a1 = _parseToRgba$map4[3];\n\n  var _parseToRgba$map5 = parseToRgba(color2).map(normalize),\n      _parseToRgba$map6 = _slicedToArray(_parseToRgba$map5, 4),\n      r2 = _parseToRgba$map6[0],\n      g2 = _parseToRgba$map6[1],\n      b2 = _parseToRgba$map6[2],\n      a2 = _parseToRgba$map6[3]; // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n\n\n  var alphaDelta = a2 - a1;\n  var normalizedWeight = weight * 2 - 1;\n  var combinedWeight = normalizedWeight * alphaDelta === -1 ? normalizedWeight : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  var weight2 = (combinedWeight + 1) / 2;\n  var weight1 = 1 - weight2;\n  var r = (r1 * weight1 + r2 * weight2) * 255;\n  var g = (g1 * weight1 + g2 * weight2) * 255;\n  var b = (b1 * weight1 + b2 * weight2) * 255;\n  var a = a2 * weight + a1 * (1 - weight);\n  return rgba(r, g, b, a);\n}\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\n\n\nfunction getScale() {\n  for (var _len = arguments.length, colors = new Array(_len), _key = 0; _key < _len; _key++) {\n    colors[_key] = arguments[_key];\n  }\n\n  return function (n) {\n    var lastIndex = colors.length - 1;\n    var lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    var highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n    var color1 = colors[lowIndex];\n    var color2 = colors[highIndex];\n    var unit = 1 / lastIndex;\n    var weight = (n - unit * lowIndex) / unit;\n    return mix(color1, color2, weight);\n  };\n}\n\nvar guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7\n};\n/**\n * Returns whether or not a color has bad contrast against a background\n * according to a given standard.\n */\n\nfunction hasBadContrast(color) {\n  var standard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'aa';\n  var background = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '#fff';\n  return getContrast(color, background) < guidelines[standard];\n}\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\n\n\nfunction lighten(color, amount) {\n  return darken(color, -amount);\n}\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\n\n\nfunction transparentize(color, amount) {\n  var _parseToRgba3 = parseToRgba(color),\n      _parseToRgba4 = _slicedToArray(_parseToRgba3, 4),\n      r = _parseToRgba4[0],\n      g = _parseToRgba4[1],\n      b = _parseToRgba4[2],\n      a = _parseToRgba4[3];\n\n  return rgba(r, g, b, a - amount);\n}\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\n\n\nfunction opacify(color, amount) {\n  return transparentize(color, -amount);\n}\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\n\n\nfunction readableColorIsBlack(color) {\n  return getLuminance(color) > 0.179;\n}\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\n\n\nfunction readableColor(color) {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\n\n\nfunction saturate(color, amount) {\n  return desaturate(color, -amount);\n}\n/**\n * Takes in any color and returns it as a hex code.\n */\n\n\nfunction toHex(color) {\n  var _parseToRgba5 = parseToRgba(color),\n      _parseToRgba6 = _slicedToArray(_parseToRgba5, 4),\n      r = _parseToRgba6[0],\n      g = _parseToRgba6[1],\n      b = _parseToRgba6[2],\n      a = _parseToRgba6[3];\n\n  var hex = function hex(x) {\n    var h = guard(0, 255, x).toString(16); // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n\n    return h.length === 1 ? \"0\".concat(h) : h;\n  };\n\n  return \"#\".concat(hex(r)).concat(hex(g)).concat(hex(b)).concat(a < 1 ? hex(Math.round(a * 255)) : '');\n}\n/**\n * Takes in any color and returns it as an rgba string.\n */\n\n\nfunction toRgba(color) {\n  return rgba.apply(void 0, _toConsumableArray(parseToRgba(color)));\n}\n/**\n * Takes in any color and returns it as an hsla string.\n */\n\n\nfunction toHsla(color) {\n  return hsla.apply(void 0, _toConsumableArray(parseToHsla(color)));\n}\n\n\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/chatwoot/chatwoot/node_modules/core-js/modules/es.string.trim.js","/home/chatwoot/chatwoot/node_modules/core-js/modules/es.regexp.constructor.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it-link-attributes/index.js","/home/chatwoot/chatwoot/node_modules/core-js/internals/string-trim-forced.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/webpack/buildin/module.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/color2k/dist/index.module.es.js"],"names":[],"mappings":"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A;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,2BAA2B;AAC3B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,0BAA0B;AAC1B,2BAA2B;AAC3B;AACA;;;AAGA;AACA,uEAAuE,aAAa;AACpF;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA","file":"x","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.es/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","var DESCRIPTORS = require('../internals/descriptors');\nvar global = require('../internals/global');\nvar isForced = require('../internals/is-forced');\nvar inheritIfRequired = require('../internals/inherit-if-required');\nvar defineProperty = require('../internals/object-define-property').f;\nvar getOwnPropertyNames = require('../internals/object-get-own-property-names').f;\nvar isRegExp = require('../internals/is-regexp');\nvar getFlags = require('../internals/regexp-flags');\nvar stickyHelpers = require('../internals/regexp-sticky-helpers');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar enforceInternalState = require('../internals/internal-state').enforce;\nvar setSpecies = require('../internals/set-species');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\nvar NativeRegExp = global.RegExp;\nvar RegExpPrototype = NativeRegExp.prototype;\nvar re1 = /a/g;\nvar re2 = /a/g;\n\n// \"new\" should create a new object, old webkit bug\nvar CORRECT_NEW = new NativeRegExp(re1) !== re1;\n\nvar UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;\n\nvar FORCED = DESCRIPTORS && isForced('RegExp', (!CORRECT_NEW || UNSUPPORTED_Y || fails(function () {\n  re2[MATCH] = false;\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\n  return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';\n})));\n\n// `RegExp` constructor\n// https://tc39.es/ecma262/#sec-regexp-constructor\nif (FORCED) {\n  var RegExpWrapper = function RegExp(pattern, flags) {\n    var thisIsRegExp = this instanceof RegExpWrapper;\n    var patternIsRegExp = isRegExp(pattern);\n    var flagsAreUndefined = flags === undefined;\n    var sticky;\n\n    if (!thisIsRegExp && patternIsRegExp && pattern.constructor === RegExpWrapper && flagsAreUndefined) {\n      return pattern;\n    }\n\n    if (CORRECT_NEW) {\n      if (patternIsRegExp && !flagsAreUndefined) pattern = pattern.source;\n    } else if (pattern instanceof RegExpWrapper) {\n      if (flagsAreUndefined) flags = getFlags.call(pattern);\n      pattern = pattern.source;\n    }\n\n    if (UNSUPPORTED_Y) {\n      sticky = !!flags && flags.indexOf('y') > -1;\n      if (sticky) flags = flags.replace(/y/g, '');\n    }\n\n    var result = inheritIfRequired(\n      CORRECT_NEW ? new NativeRegExp(pattern, flags) : NativeRegExp(pattern, flags),\n      thisIsRegExp ? this : RegExpPrototype,\n      RegExpWrapper\n    );\n\n    if (UNSUPPORTED_Y && sticky) {\n      var state = enforceInternalState(result);\n      state.sticky = true;\n    }\n\n    return result;\n  };\n  var proxy = function (key) {\n    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {\n      configurable: true,\n      get: function () { return NativeRegExp[key]; },\n      set: function (it) { NativeRegExp[key] = it; }\n    });\n  };\n  var keys = getOwnPropertyNames(NativeRegExp);\n  var index = 0;\n  while (keys.length > index) proxy(keys[index++]);\n  RegExpPrototype.constructor = RegExpWrapper;\n  RegExpWrapper.prototype = RegExpPrototype;\n  redefine(global, 'RegExp', RegExpWrapper);\n}\n\n// https://tc39.es/ecma262/#sec-get-regexp-@@species\nsetSpecies('RegExp');\n","\"use strict\"; // Adapted from https://github.com/markdown-it/markdown-it/blob/fbc6b0fed563ba7c00557ab638fd19752f8e759d/docs/architecture.md\n\nfunction findFirstMatchingConfig(link, configs) {\n  var i, config;\n  var href = link.attrs[link.attrIndex(\"href\")][1];\n\n  for (i = 0; i < configs.length; ++i) {\n    config = configs[i]; // If there is a matcher function defined then call it\n    // Matcher Function should return a boolean indicating\n    // whether or not it matched. If it matched, use that\n    // configuration, otherwise, try the next one.\n\n    if (typeof config.matcher === \"function\") {\n      if (config.matcher(href, config)) {\n        return config;\n      } else {\n        continue;\n      }\n    }\n\n    return config;\n  }\n}\n\nfunction applyAttributes(idx, tokens, attributes) {\n  Object.keys(attributes).forEach(function (attr) {\n    var attrIndex;\n    var value = attributes[attr];\n\n    if (attr === \"className\") {\n      // when dealing with applying classes\n      // programatically, some programmers\n      // may prefer to use the className syntax\n      attr = \"class\";\n    }\n\n    attrIndex = tokens[idx].attrIndex(attr);\n\n    if (attrIndex < 0) {\n      // attr doesn't exist, add new attribute\n      tokens[idx].attrPush([attr, value]);\n    } else {\n      // attr already exists, overwrite it\n      tokens[idx].attrs[attrIndex][1] = value; // replace value of existing attr\n    }\n  });\n}\n\nfunction markdownitLinkAttributes(md, configs) {\n  if (!configs) {\n    configs = [];\n  } else {\n    configs = Array.isArray(configs) ? configs : [configs];\n  }\n\n  Object.freeze(configs);\n  var defaultRender = md.renderer.rules.link_open || this.defaultRender;\n\n  md.renderer.rules.link_open = function (tokens, idx, options, env, self) {\n    var config = findFirstMatchingConfig(tokens[idx], configs);\n    var attributes = config && config.attrs;\n\n    if (attributes) {\n      applyAttributes(idx, tokens, attributes);\n    } // pass token to default renderer.\n\n\n    return defaultRender(tokens, idx, options, env, self);\n  };\n}\n\nmarkdownitLinkAttributes.defaultRender = function (tokens, idx, options, env, self) {\n  return self.renderToken(tokens, idx, options);\n};\n\nmodule.exports = markdownitLinkAttributes;","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low, high, value) {\n  return Math.min(Math.max(low, value), high);\n}\n\nvar ColorError = /*#__PURE__*/function (_Error) {\n  _inherits(ColorError, _Error);\n\n  var _super = _createSuper(ColorError);\n\n  function ColorError(color) {\n    _classCallCheck(this, ColorError);\n\n    return _super.call(this, \"Failed to parse color: \\\"\".concat(color, \"\\\"\"));\n  }\n\n  return ColorError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nvar ColorError$1 = ColorError;\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\n\nfunction parseToRgba(color) {\n  if (typeof color !== 'string') throw new ColorError$1(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n  var normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n  var reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n\n  if (reducedHexMatch) {\n    var arr = Array.from(reducedHexMatch).slice(1);\n    return [].concat(_toConsumableArray(arr.slice(0, 3).map(function (x) {\n      return parseInt(r(x, 2), 16);\n    })), [parseInt(r(arr[3] || 'f', 2), 16) / 255]);\n  }\n\n  var hexMatch = hexRegex.exec(normalizedColor);\n\n  if (hexMatch) {\n    var _arr = Array.from(hexMatch).slice(1);\n\n    return [].concat(_toConsumableArray(_arr.slice(0, 3).map(function (x) {\n      return parseInt(x, 16);\n    })), [parseInt(_arr[3] || 'ff', 16) / 255]);\n  }\n\n  var rgbaMatch = rgbaRegex.exec(normalizedColor);\n\n  if (rgbaMatch) {\n    var _arr2 = Array.from(rgbaMatch).slice(1);\n\n    return [].concat(_toConsumableArray(_arr2.slice(0, 3).map(function (x) {\n      return parseInt(x, 10);\n    })), [parseFloat(_arr2[3] || '1')]);\n  }\n\n  var hslaMatch = hslaRegex.exec(normalizedColor);\n\n  if (hslaMatch) {\n    var _Array$from$slice$map = Array.from(hslaMatch).slice(1).map(parseFloat),\n        _Array$from$slice$map2 = _slicedToArray(_Array$from$slice$map, 4),\n        h = _Array$from$slice$map2[0],\n        s = _Array$from$slice$map2[1],\n        l = _Array$from$slice$map2[2],\n        a = _Array$from$slice$map2[3];\n\n    if (guard(0, 100, s) !== s) throw new ColorError$1(color);\n    if (guard(0, 100, l) !== l) throw new ColorError$1(color);\n    return [].concat(_toConsumableArray(hslToRgb(h, s, l)), [Number.isNaN(a) ? 1 : a]);\n  }\n\n  throw new ColorError$1(color);\n}\n\nfunction hash(str) {\n  var hash = 5381;\n  var i = str.length;\n\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n\n\n  return (hash >>> 0) % 2341;\n}\n\nvar colorToInt = function colorToInt(x) {\n  return parseInt(x.replace(/_/g, ''), 36);\n};\n\nvar compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'.split(' ').reduce(function (acc, next) {\n  var key = colorToInt(next.substring(0, 3));\n  var hex = colorToInt(next.substring(3)).toString(16); // NOTE: padStart could be used here but it breaks Node 6 compat\n  // https://github.com/ricokahler/color2k/issues/351\n\n  var prefix = '';\n\n  for (var i = 0; i < 6 - hex.length; i++) {\n    prefix += '0';\n  }\n\n  acc[key] = \"\".concat(prefix).concat(hex);\n  return acc;\n}, {});\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\n\nfunction nameToHex(color) {\n  var normalizedColorName = color.toLowerCase().trim();\n  var result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError$1(color);\n  return \"#\".concat(result);\n}\n\nvar r = function r(str, amount) {\n  return Array.from(Array(amount)).map(function () {\n    return str;\n  }).join('');\n};\n\nvar reducedHexRegex = new RegExp(\"^#\".concat(r('([a-f0-9])', 3), \"([a-f0-9])?$\"), 'i');\nvar hexRegex = new RegExp(\"^#\".concat(r('([a-f0-9]{2})', 3), \"([a-f0-9]{2})?$\"), 'i');\nvar rgbaRegex = new RegExp(\"^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*\".concat(r(',\\\\s*(\\\\d+)\\\\s*', 2), \"(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$\"), 'i');\nvar hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nvar namedColorRegex = /^[a-z]+$/i;\n\nvar roundColor = function roundColor(color) {\n  return Math.round(color * 255);\n};\n\nvar hslToRgb = function hslToRgb(hue, saturation, lightness) {\n  var l = lightness / 100;\n\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor);\n  } // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n\n\n  var huePrime = (hue % 360 + 360) % 360 / 60;\n  var chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  var secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  var red = 0;\n  var green = 0;\n  var blue = 0;\n\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n\n  var lightnessModification = l - chroma / 2;\n  var finalRed = red + lightnessModification;\n  var finalGreen = green + lightnessModification;\n  var finalBlue = blue + lightnessModification;\n  return [finalRed, finalGreen, finalBlue].map(roundColor);\n}; // taken from:\n// https://github.com/styled-components/polished/blob/a23a6a2bb26802b3d922d9c3b67bac3f3a54a310/src/internalHelpers/_rgbToHsl.js\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\n\n\nfunction parseToHsla(color) {\n  var _parseToRgba$map = parseToRgba(color).map(function (value, index) {\n    return (// 3rd index is alpha channel which is already normalized\n      index === 3 ? value : value / 255\n    );\n  }),\n      _parseToRgba$map2 = _slicedToArray(_parseToRgba$map, 4),\n      red = _parseToRgba$map2[0],\n      green = _parseToRgba$map2[1],\n      blue = _parseToRgba$map2[2],\n      alpha = _parseToRgba$map2[3];\n\n  var max = Math.max(red, green, blue);\n  var min = Math.min(red, green, blue);\n  var lightness = (max + min) / 2; // achromatic\n\n  if (max === min) return [0, 0, lightness, alpha];\n  var delta = max - min;\n  var saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  var hue = 60 * (red === max ? (green - blue) / delta + (green < blue ? 6 : 0) : green === max ? (blue - red) / delta + 2 : (red - green) / delta + 4);\n  return [hue, saturation, lightness, alpha];\n}\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\n\n\nfunction hsla(hue, saturation, lightness, alpha) {\n  return \"hsla(\".concat((hue % 360).toFixed(), \", \").concat(guard(0, 100, saturation * 100).toFixed(), \"%, \").concat(guard(0, 100, lightness * 100).toFixed(), \"%, \").concat(parseFloat(guard(0, 1, alpha).toFixed(3)), \")\");\n}\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\n\n\nfunction adjustHue(color, degrees) {\n  var _parseToHsla = parseToHsla(color),\n      _parseToHsla2 = _slicedToArray(_parseToHsla, 4),\n      h = _parseToHsla2[0],\n      s = _parseToHsla2[1],\n      l = _parseToHsla2[2],\n      a = _parseToHsla2[3];\n\n  return hsla(h + degrees, s, l, a);\n}\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\n\n\nfunction darken(color, amount) {\n  var _parseToHsla3 = parseToHsla(color),\n      _parseToHsla4 = _slicedToArray(_parseToHsla3, 4),\n      hue = _parseToHsla4[0],\n      saturation = _parseToHsla4[1],\n      lightness = _parseToHsla4[2],\n      alpha = _parseToHsla4[3];\n\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\n\n\nfunction desaturate(color, amount) {\n  var _parseToHsla5 = parseToHsla(color),\n      _parseToHsla6 = _slicedToArray(_parseToHsla5, 4),\n      h = _parseToHsla6[0],\n      s = _parseToHsla6[1],\n      l = _parseToHsla6[2],\n      a = _parseToHsla6[3];\n\n  return hsla(h, s - amount, l, a);\n} // taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\n\n\nfunction getLuminance(color) {\n  if (color === 'transparent') return 0;\n\n  function f(x) {\n    var channel = x / 255;\n    return channel <= 0.04045 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }\n\n  var _parseToRgba = parseToRgba(color),\n      _parseToRgba2 = _slicedToArray(_parseToRgba, 3),\n      r = _parseToRgba2[0],\n      g = _parseToRgba2[1],\n      b = _parseToRgba2[2];\n\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n} // taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getContrast.js\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\n\n\nfunction getContrast(color1, color2) {\n  var luminance1 = getLuminance(color1);\n  var luminance2 = getLuminance(color2);\n  return luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\n\n\nfunction rgba(red, green, blue, alpha) {\n  return \"rgba(\".concat(guard(0, 255, red).toFixed(), \", \").concat(guard(0, 255, green).toFixed(), \", \").concat(guard(0, 255, blue).toFixed(), \", \").concat(parseFloat(guard(0, 1, alpha).toFixed(3)), \")\");\n}\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\n\n\nfunction mix(color1, color2, weight) {\n  var normalize = function normalize(n, index) {\n    return (// 3rd index is alpha channel which is already normalized\n      index === 3 ? n : n / 255\n    );\n  };\n\n  var _parseToRgba$map3 = parseToRgba(color1).map(normalize),\n      _parseToRgba$map4 = _slicedToArray(_parseToRgba$map3, 4),\n      r1 = _parseToRgba$map4[0],\n      g1 = _parseToRgba$map4[1],\n      b1 = _parseToRgba$map4[2],\n      a1 = _parseToRgba$map4[3];\n\n  var _parseToRgba$map5 = parseToRgba(color2).map(normalize),\n      _parseToRgba$map6 = _slicedToArray(_parseToRgba$map5, 4),\n      r2 = _parseToRgba$map6[0],\n      g2 = _parseToRgba$map6[1],\n      b2 = _parseToRgba$map6[2],\n      a2 = _parseToRgba$map6[3]; // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n\n\n  var alphaDelta = a2 - a1;\n  var normalizedWeight = weight * 2 - 1;\n  var combinedWeight = normalizedWeight * alphaDelta === -1 ? normalizedWeight : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  var weight2 = (combinedWeight + 1) / 2;\n  var weight1 = 1 - weight2;\n  var r = (r1 * weight1 + r2 * weight2) * 255;\n  var g = (g1 * weight1 + g2 * weight2) * 255;\n  var b = (b1 * weight1 + b2 * weight2) * 255;\n  var a = a2 * weight + a1 * (1 - weight);\n  return rgba(r, g, b, a);\n}\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\n\n\nfunction getScale() {\n  for (var _len = arguments.length, colors = new Array(_len), _key = 0; _key < _len; _key++) {\n    colors[_key] = arguments[_key];\n  }\n\n  return function (n) {\n    var lastIndex = colors.length - 1;\n    var lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    var highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n    var color1 = colors[lowIndex];\n    var color2 = colors[highIndex];\n    var unit = 1 / lastIndex;\n    var weight = (n - unit * lowIndex) / unit;\n    return mix(color1, color2, weight);\n  };\n}\n\nvar guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7\n};\n/**\n * Returns whether or not a color has bad contrast against a background\n * according to a given standard.\n */\n\nfunction hasBadContrast(color) {\n  var standard = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'aa';\n  var background = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '#fff';\n  return getContrast(color, background) < guidelines[standard];\n}\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\n\n\nfunction lighten(color, amount) {\n  return darken(color, -amount);\n}\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\n\n\nfunction transparentize(color, amount) {\n  var _parseToRgba3 = parseToRgba(color),\n      _parseToRgba4 = _slicedToArray(_parseToRgba3, 4),\n      r = _parseToRgba4[0],\n      g = _parseToRgba4[1],\n      b = _parseToRgba4[2],\n      a = _parseToRgba4[3];\n\n  return rgba(r, g, b, a - amount);\n}\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\n\n\nfunction opacify(color, amount) {\n  return transparentize(color, -amount);\n}\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\n\n\nfunction readableColorIsBlack(color) {\n  return getLuminance(color) > 0.179;\n}\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\n\n\nfunction readableColor(color) {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\n\n\nfunction saturate(color, amount) {\n  return desaturate(color, -amount);\n}\n/**\n * Takes in any color and returns it as a hex code.\n */\n\n\nfunction toHex(color) {\n  var _parseToRgba5 = parseToRgba(color),\n      _parseToRgba6 = _slicedToArray(_parseToRgba5, 4),\n      r = _parseToRgba6[0],\n      g = _parseToRgba6[1],\n      b = _parseToRgba6[2],\n      a = _parseToRgba6[3];\n\n  var hex = function hex(x) {\n    var h = guard(0, 255, x).toString(16); // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n\n    return h.length === 1 ? \"0\".concat(h) : h;\n  };\n\n  return \"#\".concat(hex(r)).concat(hex(g)).concat(hex(b)).concat(a < 1 ? hex(Math.round(a * 255)) : '');\n}\n/**\n * Takes in any color and returns it as an rgba string.\n */\n\n\nfunction toRgba(color) {\n  return rgba.apply(void 0, _toConsumableArray(parseToRgba(color)));\n}\n/**\n * Takes in any color and returns it as an hsla string.\n */\n\n\nfunction toHsla(color) {\n  return hsla.apply(void 0, _toConsumableArray(parseToHsla(color)));\n}\n\nexport { ColorError$1 as ColorError, adjustHue, darken, desaturate, getContrast, getLuminance, getScale, guard, hasBadContrast, hsla, lighten, mix, opacify, parseToHsla, parseToRgba, readableColor, readableColorIsBlack, rgba, saturate, toHex, toHsla, toRgba, transparentize };"]}}