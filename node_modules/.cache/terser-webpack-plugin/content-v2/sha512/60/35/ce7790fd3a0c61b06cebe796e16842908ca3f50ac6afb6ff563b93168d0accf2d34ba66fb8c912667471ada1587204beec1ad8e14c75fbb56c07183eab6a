{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{3333:function(t,n,e){\"use strict\";e.r(n),e.d(n,\"link\",(function(){return o})),e.d(n,\"form\",(function(){return i}));var r=e(546);function o(t,n,e,o){var i=this;return t?((t instanceof Element?[t]:\"toArray\"in t?t.toArray():t).forEach((function(t){t.addEventListener(\"click\",(function(u){var c,a,s=n instanceof Function?n(t):n,f=e instanceof Function?e(t):e,l=t.getAttribute(\"href\")||t.getAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\")||t.getAttribute(\"xlink:href\")||(null===(c=t.getElementsByTagName(\"a\")[0])||void 0===c?void 0:c.getAttribute(\"href\")),h=Object(r.b)(i.track(s,f,null!==o&&void 0!==o?o:{}),null!==(a=i.settings.timeout)&&void 0!==a?a:500);(function(t,n){return!(\"_blank\"!==t.target||!n)})(t,l)||function(t){var n=t;return!!(n.ctrlKey||n.shiftKey||n.metaKey||n.button&&1==n.button)}(u)||l&&(u.preventDefault?u.preventDefault():u.returnValue=!1,h.catch(console.error).then((function(){window.location.href=l})).catch(console.error))}),!1)})),this):this}function i(t,n,e,o){var i=this;return t?(t instanceof HTMLFormElement&&(t=[t]),t.forEach((function(t){if(!(t instanceof Element))throw new TypeError(\"Must pass HTMLElement to trackForm/trackSubmit.\");var u=function(u){var c;u.preventDefault?u.preventDefault():u.returnValue=!1;var a=n instanceof Function?n(t):n,s=e instanceof Function?e(t):e;Object(r.b)(i.track(a,s,null!==o&&void 0!==o?o:{}),null!==(c=i.settings.timeout)&&void 0!==c?c:500).catch(console.error).then((function(){t.submit()})).catch(console.error)},c=window.jQuery||window.Zepto;c?c(t).submit(u):t.addEventListener(\"submit\",u,!1)})),this):this}}}]);","name":"js/auto-track-de220e76baee26a0273a.chunk.js","map":{"version":3,"names":["window","push","module","__webpack_exports__","__webpack_require__","r","d","link","form","_callback__WEBPACK_IMPORTED_MODULE_0__","links","event","properties","options","_this","this","Element","toArray","forEach","el","addEventListener","elementEvent","_a","_b","ev","Function","props","href","getAttribute","getAttributeNS","getElementsByTagName","trackEvent","Object","track","settings","timeout","element","target","linkNewTab","typedEvent","ctrlKey","shiftKey","metaKey","button","userNewTab","preventDefault","returnValue","catch","console","error","then","location","forms","HTMLFormElement","TypeError","handler","submit","$","jQuery","Zepto"],"sources":["js/auto-track-de220e76baee26a0273a.chunk.js"],"mappings":"CAACA,OAAqB,aAAIA,OAAqB,cAAK,IAAIC,KAAK,CAAC,CAAC,IAAI,CAE7D,KACA,SAAUC,EAAQC,EAAqBC,GAE7C,aACAA,EAAoBC,EAAEF,GACSC,EAAoBE,EAAEH,EAAqB,QAAQ,WAAa,OAAOI,KACvEH,EAAoBE,EAAEH,EAAqB,QAAQ,WAAa,OAAOK,KACjF,IAAIC,EAAyCL,EAAoB,KAsBtF,SAASG,EAAKG,EAAOC,EAAOC,EAAYC,GACtC,IAAIC,EAAQC,KAIZ,OAAKL,IAIDA,aAAiBM,QACR,CAACN,GACH,YAAaA,EACXA,EAAMO,UAENP,GAGJQ,SAAQ,SAAUC,GACzBA,EAAGC,iBAAiB,SAAS,SAAUC,GACrC,IAAIC,EAAIC,EAEJC,EAAKb,aAAiBc,SAAWd,EAAMQ,GAAMR,EAC7Ce,EAAQd,aAAsBa,SAAWb,EAAWO,GAAMP,EAC1De,EAAOR,EAAGS,aAAa,SAAWT,EAAGU,eAAe,+BAAgC,SAAWV,EAAGS,aAAa,gBAA6D,QAA1CN,EAAKH,EAAGW,qBAAqB,KAAK,UAAuB,IAAPR,OAAgB,EAASA,EAAGM,aAAa,SAC7NG,EAAaC,OAAOvB,EAAyD,EAAhEuB,CAAmElB,EAAMmB,MAAMT,EAAIE,EAAmB,OAAZb,QAAgC,IAAZA,EAAqBA,EAAU,IAAuC,QAAjCU,EAAKT,EAAMoB,SAASC,eAA4B,IAAPZ,EAAgBA,EAAK,MAhCxO,SAAoBa,EAAST,GAC3B,QAAuB,WAAnBS,EAAQC,SAAuBV,IAiC1BW,CAAWnB,EAAIQ,IA7C1B,SAAoBhB,GAClB,IAAI4B,EAAa5B,EAEjB,SAAI4B,EAAWC,SAAWD,EAAWE,UAAYF,EAAWG,SAAWH,EAAWI,QAA+B,GAArBJ,EAAWI,QA0CrEC,CAAWvB,IACnCM,IACFN,EAAawB,eAAiBxB,EAAawB,iBAAmBxB,EAAayB,aAAc,EACzFf,EAAWgB,MAAMC,QAAQC,OAAOC,MAAK,WACnClD,OAAOmD,SAASxB,KAAOA,KACtBoB,MAAMC,QAAQC,WAGpB,MAEElC,MA9BEA,KAgCX,SAASP,EAAK4C,EAAOzC,EAAOC,EAAYC,GACtC,IAAIC,EAAQC,KAGZ,OAAKqC,GACDA,aAAiBC,kBAAiBD,EAAQ,CAACA,IAChCA,EACNlC,SAAQ,SAAUC,GACzB,KAAMA,aAAcH,SAAU,MAAM,IAAIsC,UAAU,mDAElD,IAAIC,EAAU,SAAiBlC,GAC7B,IAAIC,EAEJD,EAAawB,eAAiBxB,EAAawB,iBAAmBxB,EAAayB,aAAc,EACzF,IAAItB,EAAKb,aAAiBc,SAAWd,EAAMQ,GAAMR,EAC7Ce,EAAQd,aAAsBa,SAAWb,EAAWO,GAAMP,EAC7CoB,OAAOvB,EAAyD,EAAhEuB,CAAmElB,EAAMmB,MAAMT,EAAIE,EAAmB,OAAZb,QAAgC,IAAZA,EAAqBA,EAAU,IAAuC,QAAjCS,EAAKR,EAAMoB,SAASC,eAA4B,IAAPb,EAAgBA,EAAK,KACvNyB,MAAMC,QAAQC,OAAOC,MAAK,WACnC/B,EAAGqC,YACFT,MAAMC,QAAQC,QAKfQ,EAAIzD,OAAO0D,QAAU1D,OAAO2D,MAE5BF,EACFA,EAAEtC,GAAIqC,OAAOD,GAGbpC,EAAGC,iBAAiB,SAAUmC,GAAS,MAGpCxC,MA7BYA"},"input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[22],{\n\n/***/ 3333:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"link\", function() { return link; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"form\", function() { return form; });\n/* harmony import */ var _callback__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(546);\n // Check if a user is opening the link in a new tab\n\nfunction userNewTab(event) {\n  var typedEvent = event;\n\n  if (typedEvent.ctrlKey || typedEvent.shiftKey || typedEvent.metaKey || typedEvent.button && typedEvent.button == 1) {\n    return true;\n  }\n\n  return false;\n} // Check if the link opens in new tab\n\n\nfunction linkNewTab(element, href) {\n  if (element.target === '_blank' && href) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction link(links, event, properties, options) {\n  var _this = this;\n\n  var elements = []; // always arrays, handles jquery\n\n  if (!links) {\n    return this;\n  }\n\n  if (links instanceof Element) {\n    elements = [links];\n  } else if ('toArray' in links) {\n    elements = links.toArray();\n  } else {\n    elements = links;\n  }\n\n  elements.forEach(function (el) {\n    el.addEventListener('click', function (elementEvent) {\n      var _a, _b;\n\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var href = el.getAttribute('href') || el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') || el.getAttribute('xlink:href') || ((_a = el.getElementsByTagName('a')[0]) === null || _a === void 0 ? void 0 : _a.getAttribute('href'));\n      var trackEvent = Object(_callback__WEBPACK_IMPORTED_MODULE_0__[/* pTimeout */ \"b\"])(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_b = _this.settings.timeout) !== null && _b !== void 0 ? _b : 500);\n\n      if (!linkNewTab(el, href) && !userNewTab(elementEvent)) {\n        if (href) {\n          elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n          trackEvent.catch(console.error).then(function () {\n            window.location.href = href;\n          }).catch(console.error);\n        }\n      }\n    }, false);\n  });\n  return this;\n}\nfunction form(forms, event, properties, options) {\n  var _this = this; // always arrays, handles jquery\n\n\n  if (!forms) return this;\n  if (forms instanceof HTMLFormElement) forms = [forms];\n  var elements = forms;\n  elements.forEach(function (el) {\n    if (!(el instanceof Element)) throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.');\n\n    var handler = function handler(elementEvent) {\n      var _a;\n\n      elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var trackEvent = Object(_callback__WEBPACK_IMPORTED_MODULE_0__[/* pTimeout */ \"b\"])(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 500);\n      trackEvent.catch(console.error).then(function () {\n        el.submit();\n      }).catch(console.error);\n    }; // Support the events happening through jQuery or Zepto instead of through\n    // the normal DOM API, because `el.submit` doesn't bubble up events...\n\n\n    var $ = window.jQuery || window.Zepto;\n\n    if ($) {\n      $(el).submit(handler);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      el.addEventListener('submit', handler, false);\n    }\n  });\n  return this;\n}\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/@june-so/analytics-next/dist/pkg/core/auto-track.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAA;AAAsC;;AAEtC;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;;AAEO;AACP;;AAEA,oBAAoB;;AAEpB;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,kEAAQ,6EAA6E;;AAE5G;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACO;AACP,mBAAmB;;;AAGnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,kEAAQ,6EAA6E;AAC5G;AACA;AACA,OAAO;AACP,MAAM;AACN;;;AAGA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA,C","file":"x","sourcesContent":["import { pTimeout } from './callback'; // Check if a user is opening the link in a new tab\n\nfunction userNewTab(event) {\n  var typedEvent = event;\n\n  if (typedEvent.ctrlKey || typedEvent.shiftKey || typedEvent.metaKey || typedEvent.button && typedEvent.button == 1) {\n    return true;\n  }\n\n  return false;\n} // Check if the link opens in new tab\n\n\nfunction linkNewTab(element, href) {\n  if (element.target === '_blank' && href) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function link(links, event, properties, options) {\n  var _this = this;\n\n  var elements = []; // always arrays, handles jquery\n\n  if (!links) {\n    return this;\n  }\n\n  if (links instanceof Element) {\n    elements = [links];\n  } else if ('toArray' in links) {\n    elements = links.toArray();\n  } else {\n    elements = links;\n  }\n\n  elements.forEach(function (el) {\n    el.addEventListener('click', function (elementEvent) {\n      var _a, _b;\n\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var href = el.getAttribute('href') || el.getAttributeNS('http://www.w3.org/1999/xlink', 'href') || el.getAttribute('xlink:href') || ((_a = el.getElementsByTagName('a')[0]) === null || _a === void 0 ? void 0 : _a.getAttribute('href'));\n      var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_b = _this.settings.timeout) !== null && _b !== void 0 ? _b : 500);\n\n      if (!linkNewTab(el, href) && !userNewTab(elementEvent)) {\n        if (href) {\n          elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n          trackEvent.catch(console.error).then(function () {\n            window.location.href = href;\n          }).catch(console.error);\n        }\n      }\n    }, false);\n  });\n  return this;\n}\nexport function form(forms, event, properties, options) {\n  var _this = this; // always arrays, handles jquery\n\n\n  if (!forms) return this;\n  if (forms instanceof HTMLFormElement) forms = [forms];\n  var elements = forms;\n  elements.forEach(function (el) {\n    if (!(el instanceof Element)) throw new TypeError('Must pass HTMLElement to trackForm/trackSubmit.');\n\n    var handler = function handler(elementEvent) {\n      var _a;\n\n      elementEvent.preventDefault ? elementEvent.preventDefault() : elementEvent.returnValue = false;\n      var ev = event instanceof Function ? event(el) : event;\n      var props = properties instanceof Function ? properties(el) : properties;\n      var trackEvent = pTimeout(_this.track(ev, props, options !== null && options !== void 0 ? options : {}), (_a = _this.settings.timeout) !== null && _a !== void 0 ? _a : 500);\n      trackEvent.catch(console.error).then(function () {\n        el.submit();\n      }).catch(console.error);\n    }; // Support the events happening through jQuery or Zepto instead of through\n    // the normal DOM API, because `el.submit` doesn't bubble up events...\n\n\n    var $ = window.jQuery || window.Zepto;\n\n    if ($) {\n      $(el).submit(handler);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      el.addEventListener('submit', handler, false);\n    }\n  });\n  return this;\n}"]}}