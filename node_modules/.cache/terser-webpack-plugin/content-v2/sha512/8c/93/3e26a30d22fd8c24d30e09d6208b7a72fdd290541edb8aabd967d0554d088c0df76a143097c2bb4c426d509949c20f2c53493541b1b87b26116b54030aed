{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{1781:function(e,t,r){\"use strict\";function n(e){var t=Array.prototype.slice.call(arguments,1);return t.forEach((function(t){t&&Object.keys(t).forEach((function(r){e[r]=t[r]}))})),e}function s(e){return Object.prototype.toString.call(e)}function o(e){return\"[object Function]\"===s(e)}function i(e){return e.replace(/[.?*+^$[\\]\\\\(){}|-]/g,\"\\\\$&\")}var a={fuzzyLink:!0,fuzzyEmail:!0,fuzzyIP:!1};var c={\"http:\":{validate:function(e,t,r){var n=e.slice(t);return r.re.http||(r.re.http=new RegExp(\"^\\\\/\\\\/\"+r.re.src_auth+r.re.src_host_port_strict+r.re.src_path,\"i\")),r.re.http.test(n)?n.match(r.re.http)[0].length:0}},\"https:\":\"http:\",\"ftp:\":\"http:\",\"//\":{validate:function(e,t,r){var n=e.slice(t);return r.re.no_http||(r.re.no_http=new RegExp(\"^\"+r.re.src_auth+\"(?:localhost|(?:(?:\"+r.re.src_domain+\")\\\\.)+\"+r.re.src_domain_root+\")\"+r.re.src_port+r.re.src_host_terminator+r.re.src_path,\"i\")),r.re.no_http.test(n)?t>=3&&\":\"===e[t-3]||t>=3&&\"/\"===e[t-3]?0:n.match(r.re.no_http)[0].length:0}},\"mailto:\":{validate:function(e,t,r){var n=e.slice(t);return r.re.mailto||(r.re.mailto=new RegExp(\"^\"+r.re.src_email_name+\"@\"+r.re.src_host_strict,\"i\")),r.re.mailto.test(n)?n.match(r.re.mailto)[0].length:0}}},u=\"biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|\\u0440\\u0444\".split(\"|\");function l(e){var t=e.re=r(1816)(e.__opts__),n=e.__tlds__.slice();function a(e){return e.replace(\"%TLDS%\",t.src_tlds)}e.onCompile(),e.__tlds_replaced__||n.push(\"a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]\"),n.push(t.src_xn),t.src_tlds=n.join(\"|\"),t.email_fuzzy=RegExp(a(t.tpl_email_fuzzy),\"i\"),t.link_fuzzy=RegExp(a(t.tpl_link_fuzzy),\"i\"),t.link_no_ip_fuzzy=RegExp(a(t.tpl_link_no_ip_fuzzy),\"i\"),t.host_fuzzy_test=RegExp(a(t.tpl_host_fuzzy_test),\"i\");var c=[];function u(e,t){throw new Error('(LinkifyIt) Invalid schema \"'+e+'\": '+t)}e.__compiled__={},Object.keys(e.__schemas__).forEach((function(t){var r=e.__schemas__[t];if(null!==r){var n={validate:null,link:null};if(e.__compiled__[t]=n,\"[object Object]\"===s(r))return!function(e){return\"[object RegExp]\"===s(e)}(r.validate)?o(r.validate)?n.validate=r.validate:u(t,r):n.validate=function(e){return function(t,r){var n=t.slice(r);return e.test(n)?n.match(e)[0].length:0}}(r.validate),void(o(r.normalize)?n.normalize=r.normalize:r.normalize?u(t,r):n.normalize=function(e,t){t.normalize(e)});!function(e){return\"[object String]\"===s(e)}(r)?u(t,r):c.push(t)}})),c.forEach((function(t){e.__compiled__[e.__schemas__[t]]&&(e.__compiled__[t].validate=e.__compiled__[e.__schemas__[t]].validate,e.__compiled__[t].normalize=e.__compiled__[e.__schemas__[t]].normalize)})),e.__compiled__[\"\"]={validate:null,normalize:function(e,t){t.normalize(e)}};var l=Object.keys(e.__compiled__).filter((function(t){return t.length>0&&e.__compiled__[t]})).map(i).join(\"|\");e.re.schema_test=RegExp(\"(^|(?!_)(?:[><\\uff5c]|\"+t.src_ZPCc+\"))(\"+l+\")\",\"i\"),e.re.schema_search=RegExp(\"(^|(?!_)(?:[><\\uff5c]|\"+t.src_ZPCc+\"))(\"+l+\")\",\"ig\"),e.re.schema_at_start=RegExp(\"^\"+e.re.schema_search.source,\"i\"),e.re.pretest=RegExp(\"(\"+e.re.schema_test.source+\")|(\"+e.re.host_fuzzy_test.source+\")|@\",\"i\"),function(e){e.__index__=-1,e.__text_cache__=\"\"}(e)}function p(e,t){var r=e.__index__,n=e.__last_index__,s=e.__text_cache__.slice(r,n);this.schema=e.__schema__.toLowerCase(),this.index=r+t,this.lastIndex=n+t,this.raw=s,this.text=s,this.url=s}function h(e,t){var r=new p(e,t);return e.__compiled__[r.schema].normalize(r,e),r}function f(e,t){if(!(this instanceof f))return new f(e,t);var r;t||(r=e,Object.keys(r||{}).reduce((function(e,t){return e||a.hasOwnProperty(t)}),!1)&&(t=e,e={})),this.__opts__=n({},a,t),this.__index__=-1,this.__last_index__=-1,this.__schema__=\"\",this.__text_cache__=\"\",this.__schemas__=n({},c,e),this.__compiled__={},this.__tlds__=u,this.__tlds_replaced__=!1,this.re={},l(this)}f.prototype.add=function(e,t){return this.__schemas__[e]=t,l(this),this},f.prototype.set=function(e){return this.__opts__=n(this.__opts__,e),this},f.prototype.test=function(e){if(this.__text_cache__=e,this.__index__=-1,!e.length)return!1;var t,r,n,s,o,i,a,c;if(this.re.schema_test.test(e))for((a=this.re.schema_search).lastIndex=0;null!==(t=a.exec(e));)if(s=this.testSchemaAt(e,t[2],a.lastIndex)){this.__schema__=t[2],this.__index__=t.index+t[1].length,this.__last_index__=t.index+t[0].length+s;break}return this.__opts__.fuzzyLink&&this.__compiled__[\"http:\"]&&(c=e.search(this.re.host_fuzzy_test))>=0&&(this.__index__<0||c<this.__index__)&&null!==(r=e.match(this.__opts__.fuzzyIP?this.re.link_fuzzy:this.re.link_no_ip_fuzzy))&&(o=r.index+r[1].length,(this.__index__<0||o<this.__index__)&&(this.__schema__=\"\",this.__index__=o,this.__last_index__=r.index+r[0].length)),this.__opts__.fuzzyEmail&&this.__compiled__[\"mailto:\"]&&e.indexOf(\"@\")>=0&&null!==(n=e.match(this.re.email_fuzzy))&&(o=n.index+n[1].length,i=n.index+n[0].length,(this.__index__<0||o<this.__index__||o===this.__index__&&i>this.__last_index__)&&(this.__schema__=\"mailto:\",this.__index__=o,this.__last_index__=i)),this.__index__>=0},f.prototype.pretest=function(e){return this.re.pretest.test(e)},f.prototype.testSchemaAt=function(e,t,r){return this.__compiled__[t.toLowerCase()]?this.__compiled__[t.toLowerCase()].validate(e,r,this):0},f.prototype.match=function(e){var t=0,r=[];this.__index__>=0&&this.__text_cache__===e&&(r.push(h(this,t)),t=this.__last_index__);for(var n=t?e.slice(t):e;this.test(n);)r.push(h(this,t)),n=n.slice(this.__last_index__),t+=this.__last_index__;return r.length?r:null},f.prototype.matchAtStart=function(e){if(this.__text_cache__=e,this.__index__=-1,!e.length)return null;var t=this.re.schema_at_start.exec(e);if(!t)return null;var r=this.testSchemaAt(e,t[2],t[0].length);return r?(this.__schema__=t[2],this.__index__=t.index+t[1].length,this.__last_index__=t.index+t[0].length+r,h(this,0)):null},f.prototype.tlds=function(e,t){return e=Array.isArray(e)?e:[e],t?(this.__tlds__=this.__tlds__.concat(e).sort().filter((function(e,t,r){return e!==r[t-1]})).reverse(),l(this),this):(this.__tlds__=e.slice(),this.__tlds_replaced__=!0,l(this),this)},f.prototype.normalize=function(e){e.schema||(e.url=\"http://\"+e.url),\"mailto:\"!==e.schema||/^mailto:/i.test(e.url)||(e.url=\"mailto:\"+e.url)},f.prototype.onCompile=function(){},e.exports=f},1782:function(e,t,r){\"use strict\";t.Any=r(354),t.Cc=r(355),t.Cf=r(1823),t.P=r(286),t.Z=r(356)},1783:function(e,t,r){(function(e,n){var s;function o(e){return o=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},o(e)}!function(i){var a=\"object\"==o(t)&&t&&!t.nodeType&&t,c=\"object\"==o(e)&&e&&!e.nodeType&&e,u=\"object\"==(\"undefined\"===typeof n?\"undefined\":o(n))&&n;u.global!==u&&u.window!==u&&u.self!==u||(i=u);var l,p,h=2147483647,f=36,d=/^xn--/,m=/[^\\x20-\\x7E]/,g=/[\\x2E\\u3002\\uFF0E\\uFF61]/g,_={overflow:\"Overflow: input needs wider integers to process\",\"not-basic\":\"Illegal input >= 0x80 (not a basic code point)\",\"invalid-input\":\"Invalid input\"},k=Math.floor,b=String.fromCharCode;function v(e){throw new RangeError(_[e])}function y(e,t){for(var r=e.length,n=[];r--;)n[r]=t(e[r]);return n}function C(e,t){var r=e.split(\"@\"),n=\"\";return r.length>1&&(n=r[0]+\"@\",e=r[1]),n+y((e=e.replace(g,\".\")).split(\".\"),t).join(\".\")}function x(e){for(var t,r,n=[],s=0,o=e.length;s<o;)(t=e.charCodeAt(s++))>=55296&&t<=56319&&s<o?56320==(64512&(r=e.charCodeAt(s++)))?n.push(((1023&t)<<10)+(1023&r)+65536):(n.push(t),s--):n.push(t);return n}function A(e){return y(e,(function(e){var t=\"\";return e>65535&&(t+=b((e-=65536)>>>10&1023|55296),e=56320|1023&e),t+=b(e)})).join(\"\")}function w(e,t){return e+22+75*(e<26)-((0!=t)<<5)}function D(e,t,r){var n=0;for(e=r?k(e/700):e>>1,e+=k(e/t);e>455;n+=f)e=k(e/35);return k(n+36*e/(e+38))}function E(e){var t,r,n,s,o,i,a,c,u,l,p,d=[],m=e.length,g=0,_=128,b=72;for((r=e.lastIndexOf(\"-\"))<0&&(r=0),n=0;n<r;++n)e.charCodeAt(n)>=128&&v(\"not-basic\"),d.push(e.charCodeAt(n));for(s=r>0?r+1:0;s<m;){for(o=g,i=1,a=f;s>=m&&v(\"invalid-input\"),((c=(p=e.charCodeAt(s++))-48<10?p-22:p-65<26?p-65:p-97<26?p-97:f)>=f||c>k((h-g)/i))&&v(\"overflow\"),g+=c*i,!(c<(u=a<=b?1:a>=b+26?26:a-b));a+=f)i>k(h/(l=f-u))&&v(\"overflow\"),i*=l;b=D(g-o,t=d.length+1,0==o),k(g/t)>h-_&&v(\"overflow\"),_+=k(g/t),g%=t,d.splice(g++,0,_)}return A(d)}function q(e){var t,r,n,s,o,i,a,c,u,l,p,d,m,g,_,y=[];for(d=(e=x(e)).length,t=128,r=0,o=72,i=0;i<d;++i)(p=e[i])<128&&y.push(b(p));for(n=s=y.length,s&&y.push(\"-\");n<d;){for(a=h,i=0;i<d;++i)(p=e[i])>=t&&p<a&&(a=p);for(a-t>k((h-r)/(m=n+1))&&v(\"overflow\"),r+=(a-t)*m,t=a,i=0;i<d;++i)if((p=e[i])<t&&++r>h&&v(\"overflow\"),p==t){for(c=r,u=f;!(c<(l=u<=o?1:u>=o+26?26:u-o));u+=f)_=c-l,g=f-l,y.push(b(w(l+_%g,0))),c=k(_/g);y.push(b(w(c,0))),o=D(r,m,n==s),r=0,++n}++r,++t}return y.join(\"\")}if(l={version:\"1.4.1\",ucs2:{decode:x,encode:A},decode:E,encode:q,toASCII:function(e){return C(e,(function(e){return m.test(e)?\"xn--\"+q(e):e}))},toUnicode:function(e){return C(e,(function(e){return d.test(e)?E(e.slice(4).toLowerCase()):e}))}},\"object\"==o(r(374))&&r(374))void 0===(s=function(){return l}.call(t,r,t,e))||(e.exports=s);else if(a&&c)if(e.exports==a)c.exports=l;else for(p in l)l.hasOwnProperty(p)&&(a[p]=l[p]);else i.punycode=l}(this)}).call(this,r(215)(e),r(61))},1809:function(e,t,r){\"use strict\";e.exports=r(1817)},1816:function(e,t,r){\"use strict\";e.exports=function(e){var t={};e=e||{},t.src_Any=r(354).source,t.src_Cc=r(355).source,t.src_Z=r(356).source,t.src_P=r(286).source,t.src_ZPCc=[t.src_Z,t.src_P,t.src_Cc].join(\"|\"),t.src_ZCc=[t.src_Z,t.src_Cc].join(\"|\");return t.src_pseudo_letter=\"(?:(?![><\\uff5c]|\"+t.src_ZPCc+\")\"+t.src_Any+\")\",t.src_ip4=\"(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\",t.src_auth=\"(?:(?:(?!\"+t.src_ZCc+\"|[@/\\\\[\\\\]()]).)+@)?\",t.src_port=\"(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?\",t.src_host_terminator=\"(?=$|[><\\uff5c]|\"+t.src_ZPCc+\")(?!\"+(e[\"---\"]?\"-(?!--)|\":\"-|\")+\"_|:\\\\d|\\\\.-|\\\\.(?!$|\"+t.src_ZPCc+\"))\",t.src_path=\"(?:[/?#](?:(?!\"+t.src_ZCc+\"|\"+\"[><\\uff5c]|[()[\\\\]{}.,\\\"'?!\\\\-;]).|\\\\[(?:(?!\"+t.src_ZCc+\"|\\\\]).)*\\\\]|\\\\((?:(?!\"+t.src_ZCc+\"|[)]).)*\\\\)|\\\\{(?:(?!\"+t.src_ZCc+'|[}]).)*\\\\}|\\\\\"(?:(?!'+t.src_ZCc+'|[\"]).)+\\\\\"|\\\\\\'(?:(?!'+t.src_ZCc+\"|[']).)+\\\\'|\\\\'(?=\"+t.src_pseudo_letter+\"|[-])|\\\\.{2,}[a-zA-Z0-9%/&]|\\\\.(?!\"+t.src_ZCc+\"|[.]|$)|\"+(e[\"---\"]?\"\\\\-(?!--(?:[^-]|$))(?:-*)|\":\"\\\\-+|\")+\",(?!\"+t.src_ZCc+\"|$)|;(?!\"+t.src_ZCc+\"|$)|\\\\!+(?!\"+t.src_ZCc+\"|[!]|$)|\\\\?(?!\"+t.src_ZCc+\"|[?]|$))+|\\\\/)?\",t.src_email_name='[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*',t.src_xn=\"xn--[a-z0-9\\\\-]{1,59}\",t.src_domain_root=\"(?:\"+t.src_xn+\"|\"+t.src_pseudo_letter+\"{1,63})\",t.src_domain=\"(?:\"+t.src_xn+\"|(?:\"+t.src_pseudo_letter+\")|(?:\"+t.src_pseudo_letter+\"(?:-|\"+t.src_pseudo_letter+\"){0,61}\"+t.src_pseudo_letter+\"))\",t.src_host=\"(?:(?:(?:(?:\"+t.src_domain+\")\\\\.)*\"+t.src_domain+\"))\",t.tpl_host_fuzzy=\"(?:\"+t.src_ip4+\"|(?:(?:(?:\"+t.src_domain+\")\\\\.)+(?:%TLDS%)))\",t.tpl_host_no_ip_fuzzy=\"(?:(?:(?:\"+t.src_domain+\")\\\\.)+(?:%TLDS%))\",t.src_host_strict=t.src_host+t.src_host_terminator,t.tpl_host_fuzzy_strict=t.tpl_host_fuzzy+t.src_host_terminator,t.src_host_port_strict=t.src_host+t.src_port+t.src_host_terminator,t.tpl_host_port_fuzzy_strict=t.tpl_host_fuzzy+t.src_port+t.src_host_terminator,t.tpl_host_port_no_ip_fuzzy_strict=t.tpl_host_no_ip_fuzzy+t.src_port+t.src_host_terminator,t.tpl_host_fuzzy_test=\"localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:\"+t.src_ZPCc+\"|>|$))\",t.tpl_email_fuzzy='(^|[><\\uff5c]|\"|\\\\(|'+t.src_ZCc+\")(\"+t.src_email_name+\"@\"+t.tpl_host_fuzzy_strict+\")\",t.tpl_link_fuzzy=\"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|\"+t.src_ZPCc+\"))((?![$+<=>^`|\\uff5c])\"+t.tpl_host_port_fuzzy_strict+t.src_path+\")\",t.tpl_link_no_ip_fuzzy=\"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|\"+t.src_ZPCc+\"))((?![$+<=>^`|\\uff5c])\"+t.tpl_host_port_no_ip_fuzzy_strict+t.src_path+\")\",t}},1817:function(e,t,r){\"use strict\";var n=r(57),s=r(1824),o=r(1828),i=r(1829),a=r(1838),c=r(1852),u=r(1781),l=r(324),p=r(1783),h={default:r(1866),zero:r(1867),commonmark:r(1868)},f=/^(vbscript|javascript|file|data):/,d=/^data:image\\/(gif|png|jpeg|webp);/;function m(e){var t=e.trim().toLowerCase();return!f.test(t)||!!d.test(t)}var g=[\"http:\",\"https:\",\"mailto:\"];function _(e){var t=l.parse(e,!0);if(t.hostname&&(!t.protocol||g.indexOf(t.protocol)>=0))try{t.hostname=p.toASCII(t.hostname)}catch(r){}return l.encode(l.format(t))}function k(e){var t=l.parse(e,!0);if(t.hostname&&(!t.protocol||g.indexOf(t.protocol)>=0))try{t.hostname=p.toUnicode(t.hostname)}catch(r){}return l.decode(l.format(t),l.decode.defaultChars+\"%\")}function b(e,t){if(!(this instanceof b))return new b(e,t);t||n.isString(e)||(t=e||{},e=\"default\"),this.inline=new c,this.block=new a,this.core=new i,this.renderer=new o,this.linkify=new u,this.validateLink=m,this.normalizeLink=_,this.normalizeLinkText=k,this.utils=n,this.helpers=n.assign({},s),this.options={},this.configure(e),t&&this.set(t)}b.prototype.set=function(e){return n.assign(this.options,e),this},b.prototype.configure=function(e){var t,r=this;if(n.isString(e)&&!(e=h[t=e]))throw new Error('Wrong `markdown-it` preset \"'+t+'\", check name');if(!e)throw new Error(\"Wrong `markdown-it` preset, can't be empty\");return e.options&&r.set(e.options),e.components&&Object.keys(e.components).forEach((function(t){e.components[t].rules&&r[t].ruler.enableOnly(e.components[t].rules),e.components[t].rules2&&r[t].ruler2.enableOnly(e.components[t].rules2)})),this},b.prototype.enable=function(e,t){var r=[];Array.isArray(e)||(e=[e]),[\"core\",\"block\",\"inline\"].forEach((function(t){r=r.concat(this[t].ruler.enable(e,!0))}),this),r=r.concat(this.inline.ruler2.enable(e,!0));var n=e.filter((function(e){return r.indexOf(e)<0}));if(n.length&&!t)throw new Error(\"MarkdownIt. Failed to enable unknown rule(s): \"+n);return this},b.prototype.disable=function(e,t){var r=[];Array.isArray(e)||(e=[e]),[\"core\",\"block\",\"inline\"].forEach((function(t){r=r.concat(this[t].ruler.disable(e,!0))}),this),r=r.concat(this.inline.ruler2.disable(e,!0));var n=e.filter((function(e){return r.indexOf(e)<0}));if(n.length&&!t)throw new Error(\"MarkdownIt. Failed to disable unknown rule(s): \"+n);return this},b.prototype.use=function(e){var t=[this].concat(Array.prototype.slice.call(arguments,1));return e.apply(e,t),this},b.prototype.parse=function(e,t){if(\"string\"!==typeof e)throw new Error(\"Input data should be a String\");var r=new this.core.State(e,this,t);return this.core.process(r),r.tokens},b.prototype.render=function(e,t){return t=t||{},this.renderer.render(this.parse(e,t),this.options,t)},b.prototype.parseInline=function(e,t){var r=new this.core.State(e,this,t);return r.inlineMode=!0,this.core.process(r),r.tokens},b.prototype.renderInline=function(e,t){return t=t||{},this.renderer.render(this.parseInline(e,t),this.options,t)},e.exports=b},1818:function(e){e.exports=JSON.parse('{\"Aacute\":\"\\xc1\",\"aacute\":\"\\xe1\",\"Abreve\":\"\\u0102\",\"abreve\":\"\\u0103\",\"ac\":\"\\u223e\",\"acd\":\"\\u223f\",\"acE\":\"\\u223e\\u0333\",\"Acirc\":\"\\xc2\",\"acirc\":\"\\xe2\",\"acute\":\"\\xb4\",\"Acy\":\"\\u0410\",\"acy\":\"\\u0430\",\"AElig\":\"\\xc6\",\"aelig\":\"\\xe6\",\"af\":\"\\u2061\",\"Afr\":\"\\ud835\\udd04\",\"afr\":\"\\ud835\\udd1e\",\"Agrave\":\"\\xc0\",\"agrave\":\"\\xe0\",\"alefsym\":\"\\u2135\",\"aleph\":\"\\u2135\",\"Alpha\":\"\\u0391\",\"alpha\":\"\\u03b1\",\"Amacr\":\"\\u0100\",\"amacr\":\"\\u0101\",\"amalg\":\"\\u2a3f\",\"amp\":\"&\",\"AMP\":\"&\",\"andand\":\"\\u2a55\",\"And\":\"\\u2a53\",\"and\":\"\\u2227\",\"andd\":\"\\u2a5c\",\"andslope\":\"\\u2a58\",\"andv\":\"\\u2a5a\",\"ang\":\"\\u2220\",\"ange\":\"\\u29a4\",\"angle\":\"\\u2220\",\"angmsdaa\":\"\\u29a8\",\"angmsdab\":\"\\u29a9\",\"angmsdac\":\"\\u29aa\",\"angmsdad\":\"\\u29ab\",\"angmsdae\":\"\\u29ac\",\"angmsdaf\":\"\\u29ad\",\"angmsdag\":\"\\u29ae\",\"angmsdah\":\"\\u29af\",\"angmsd\":\"\\u2221\",\"angrt\":\"\\u221f\",\"angrtvb\":\"\\u22be\",\"angrtvbd\":\"\\u299d\",\"angsph\":\"\\u2222\",\"angst\":\"\\xc5\",\"angzarr\":\"\\u237c\",\"Aogon\":\"\\u0104\",\"aogon\":\"\\u0105\",\"Aopf\":\"\\ud835\\udd38\",\"aopf\":\"\\ud835\\udd52\",\"apacir\":\"\\u2a6f\",\"ap\":\"\\u2248\",\"apE\":\"\\u2a70\",\"ape\":\"\\u224a\",\"apid\":\"\\u224b\",\"apos\":\"\\'\",\"ApplyFunction\":\"\\u2061\",\"approx\":\"\\u2248\",\"approxeq\":\"\\u224a\",\"Aring\":\"\\xc5\",\"aring\":\"\\xe5\",\"Ascr\":\"\\ud835\\udc9c\",\"ascr\":\"\\ud835\\udcb6\",\"Assign\":\"\\u2254\",\"ast\":\"*\",\"asymp\":\"\\u2248\",\"asympeq\":\"\\u224d\",\"Atilde\":\"\\xc3\",\"atilde\":\"\\xe3\",\"Auml\":\"\\xc4\",\"auml\":\"\\xe4\",\"awconint\":\"\\u2233\",\"awint\":\"\\u2a11\",\"backcong\":\"\\u224c\",\"backepsilon\":\"\\u03f6\",\"backprime\":\"\\u2035\",\"backsim\":\"\\u223d\",\"backsimeq\":\"\\u22cd\",\"Backslash\":\"\\u2216\",\"Barv\":\"\\u2ae7\",\"barvee\":\"\\u22bd\",\"barwed\":\"\\u2305\",\"Barwed\":\"\\u2306\",\"barwedge\":\"\\u2305\",\"bbrk\":\"\\u23b5\",\"bbrktbrk\":\"\\u23b6\",\"bcong\":\"\\u224c\",\"Bcy\":\"\\u0411\",\"bcy\":\"\\u0431\",\"bdquo\":\"\\u201e\",\"becaus\":\"\\u2235\",\"because\":\"\\u2235\",\"Because\":\"\\u2235\",\"bemptyv\":\"\\u29b0\",\"bepsi\":\"\\u03f6\",\"bernou\":\"\\u212c\",\"Bernoullis\":\"\\u212c\",\"Beta\":\"\\u0392\",\"beta\":\"\\u03b2\",\"beth\":\"\\u2136\",\"between\":\"\\u226c\",\"Bfr\":\"\\ud835\\udd05\",\"bfr\":\"\\ud835\\udd1f\",\"bigcap\":\"\\u22c2\",\"bigcirc\":\"\\u25ef\",\"bigcup\":\"\\u22c3\",\"bigodot\":\"\\u2a00\",\"bigoplus\":\"\\u2a01\",\"bigotimes\":\"\\u2a02\",\"bigsqcup\":\"\\u2a06\",\"bigstar\":\"\\u2605\",\"bigtriangledown\":\"\\u25bd\",\"bigtriangleup\":\"\\u25b3\",\"biguplus\":\"\\u2a04\",\"bigvee\":\"\\u22c1\",\"bigwedge\":\"\\u22c0\",\"bkarow\":\"\\u290d\",\"blacklozenge\":\"\\u29eb\",\"blacksquare\":\"\\u25aa\",\"blacktriangle\":\"\\u25b4\",\"blacktriangledown\":\"\\u25be\",\"blacktriangleleft\":\"\\u25c2\",\"blacktriangleright\":\"\\u25b8\",\"blank\":\"\\u2423\",\"blk12\":\"\\u2592\",\"blk14\":\"\\u2591\",\"blk34\":\"\\u2593\",\"block\":\"\\u2588\",\"bne\":\"=\\u20e5\",\"bnequiv\":\"\\u2261\\u20e5\",\"bNot\":\"\\u2aed\",\"bnot\":\"\\u2310\",\"Bopf\":\"\\ud835\\udd39\",\"bopf\":\"\\ud835\\udd53\",\"bot\":\"\\u22a5\",\"bottom\":\"\\u22a5\",\"bowtie\":\"\\u22c8\",\"boxbox\":\"\\u29c9\",\"boxdl\":\"\\u2510\",\"boxdL\":\"\\u2555\",\"boxDl\":\"\\u2556\",\"boxDL\":\"\\u2557\",\"boxdr\":\"\\u250c\",\"boxdR\":\"\\u2552\",\"boxDr\":\"\\u2553\",\"boxDR\":\"\\u2554\",\"boxh\":\"\\u2500\",\"boxH\":\"\\u2550\",\"boxhd\":\"\\u252c\",\"boxHd\":\"\\u2564\",\"boxhD\":\"\\u2565\",\"boxHD\":\"\\u2566\",\"boxhu\":\"\\u2534\",\"boxHu\":\"\\u2567\",\"boxhU\":\"\\u2568\",\"boxHU\":\"\\u2569\",\"boxminus\":\"\\u229f\",\"boxplus\":\"\\u229e\",\"boxtimes\":\"\\u22a0\",\"boxul\":\"\\u2518\",\"boxuL\":\"\\u255b\",\"boxUl\":\"\\u255c\",\"boxUL\":\"\\u255d\",\"boxur\":\"\\u2514\",\"boxuR\":\"\\u2558\",\"boxUr\":\"\\u2559\",\"boxUR\":\"\\u255a\",\"boxv\":\"\\u2502\",\"boxV\":\"\\u2551\",\"boxvh\":\"\\u253c\",\"boxvH\":\"\\u256a\",\"boxVh\":\"\\u256b\",\"boxVH\":\"\\u256c\",\"boxvl\":\"\\u2524\",\"boxvL\":\"\\u2561\",\"boxVl\":\"\\u2562\",\"boxVL\":\"\\u2563\",\"boxvr\":\"\\u251c\",\"boxvR\":\"\\u255e\",\"boxVr\":\"\\u255f\",\"boxVR\":\"\\u2560\",\"bprime\":\"\\u2035\",\"breve\":\"\\u02d8\",\"Breve\":\"\\u02d8\",\"brvbar\":\"\\xa6\",\"bscr\":\"\\ud835\\udcb7\",\"Bscr\":\"\\u212c\",\"bsemi\":\"\\u204f\",\"bsim\":\"\\u223d\",\"bsime\":\"\\u22cd\",\"bsolb\":\"\\u29c5\",\"bsol\":\"\\\\\\\\\",\"bsolhsub\":\"\\u27c8\",\"bull\":\"\\u2022\",\"bullet\":\"\\u2022\",\"bump\":\"\\u224e\",\"bumpE\":\"\\u2aae\",\"bumpe\":\"\\u224f\",\"Bumpeq\":\"\\u224e\",\"bumpeq\":\"\\u224f\",\"Cacute\":\"\\u0106\",\"cacute\":\"\\u0107\",\"capand\":\"\\u2a44\",\"capbrcup\":\"\\u2a49\",\"capcap\":\"\\u2a4b\",\"cap\":\"\\u2229\",\"Cap\":\"\\u22d2\",\"capcup\":\"\\u2a47\",\"capdot\":\"\\u2a40\",\"CapitalDifferentialD\":\"\\u2145\",\"caps\":\"\\u2229\\ufe00\",\"caret\":\"\\u2041\",\"caron\":\"\\u02c7\",\"Cayleys\":\"\\u212d\",\"ccaps\":\"\\u2a4d\",\"Ccaron\":\"\\u010c\",\"ccaron\":\"\\u010d\",\"Ccedil\":\"\\xc7\",\"ccedil\":\"\\xe7\",\"Ccirc\":\"\\u0108\",\"ccirc\":\"\\u0109\",\"Cconint\":\"\\u2230\",\"ccups\":\"\\u2a4c\",\"ccupssm\":\"\\u2a50\",\"Cdot\":\"\\u010a\",\"cdot\":\"\\u010b\",\"cedil\":\"\\xb8\",\"Cedilla\":\"\\xb8\",\"cemptyv\":\"\\u29b2\",\"cent\":\"\\xa2\",\"centerdot\":\"\\xb7\",\"CenterDot\":\"\\xb7\",\"cfr\":\"\\ud835\\udd20\",\"Cfr\":\"\\u212d\",\"CHcy\":\"\\u0427\",\"chcy\":\"\\u0447\",\"check\":\"\\u2713\",\"checkmark\":\"\\u2713\",\"Chi\":\"\\u03a7\",\"chi\":\"\\u03c7\",\"circ\":\"\\u02c6\",\"circeq\":\"\\u2257\",\"circlearrowleft\":\"\\u21ba\",\"circlearrowright\":\"\\u21bb\",\"circledast\":\"\\u229b\",\"circledcirc\":\"\\u229a\",\"circleddash\":\"\\u229d\",\"CircleDot\":\"\\u2299\",\"circledR\":\"\\xae\",\"circledS\":\"\\u24c8\",\"CircleMinus\":\"\\u2296\",\"CirclePlus\":\"\\u2295\",\"CircleTimes\":\"\\u2297\",\"cir\":\"\\u25cb\",\"cirE\":\"\\u29c3\",\"cire\":\"\\u2257\",\"cirfnint\":\"\\u2a10\",\"cirmid\":\"\\u2aef\",\"cirscir\":\"\\u29c2\",\"ClockwiseContourIntegral\":\"\\u2232\",\"CloseCurlyDoubleQuote\":\"\\u201d\",\"CloseCurlyQuote\":\"\\u2019\",\"clubs\":\"\\u2663\",\"clubsuit\":\"\\u2663\",\"colon\":\":\",\"Colon\":\"\\u2237\",\"Colone\":\"\\u2a74\",\"colone\":\"\\u2254\",\"coloneq\":\"\\u2254\",\"comma\":\",\",\"commat\":\"@\",\"comp\":\"\\u2201\",\"compfn\":\"\\u2218\",\"complement\":\"\\u2201\",\"complexes\":\"\\u2102\",\"cong\":\"\\u2245\",\"congdot\":\"\\u2a6d\",\"Congruent\":\"\\u2261\",\"conint\":\"\\u222e\",\"Conint\":\"\\u222f\",\"ContourIntegral\":\"\\u222e\",\"copf\":\"\\ud835\\udd54\",\"Copf\":\"\\u2102\",\"coprod\":\"\\u2210\",\"Coproduct\":\"\\u2210\",\"copy\":\"\\xa9\",\"COPY\":\"\\xa9\",\"copysr\":\"\\u2117\",\"CounterClockwiseContourIntegral\":\"\\u2233\",\"crarr\":\"\\u21b5\",\"cross\":\"\\u2717\",\"Cross\":\"\\u2a2f\",\"Cscr\":\"\\ud835\\udc9e\",\"cscr\":\"\\ud835\\udcb8\",\"csub\":\"\\u2acf\",\"csube\":\"\\u2ad1\",\"csup\":\"\\u2ad0\",\"csupe\":\"\\u2ad2\",\"ctdot\":\"\\u22ef\",\"cudarrl\":\"\\u2938\",\"cudarrr\":\"\\u2935\",\"cuepr\":\"\\u22de\",\"cuesc\":\"\\u22df\",\"cularr\":\"\\u21b6\",\"cularrp\":\"\\u293d\",\"cupbrcap\":\"\\u2a48\",\"cupcap\":\"\\u2a46\",\"CupCap\":\"\\u224d\",\"cup\":\"\\u222a\",\"Cup\":\"\\u22d3\",\"cupcup\":\"\\u2a4a\",\"cupdot\":\"\\u228d\",\"cupor\":\"\\u2a45\",\"cups\":\"\\u222a\\ufe00\",\"curarr\":\"\\u21b7\",\"curarrm\":\"\\u293c\",\"curlyeqprec\":\"\\u22de\",\"curlyeqsucc\":\"\\u22df\",\"curlyvee\":\"\\u22ce\",\"curlywedge\":\"\\u22cf\",\"curren\":\"\\xa4\",\"curvearrowleft\":\"\\u21b6\",\"curvearrowright\":\"\\u21b7\",\"cuvee\":\"\\u22ce\",\"cuwed\":\"\\u22cf\",\"cwconint\":\"\\u2232\",\"cwint\":\"\\u2231\",\"cylcty\":\"\\u232d\",\"dagger\":\"\\u2020\",\"Dagger\":\"\\u2021\",\"daleth\":\"\\u2138\",\"darr\":\"\\u2193\",\"Darr\":\"\\u21a1\",\"dArr\":\"\\u21d3\",\"dash\":\"\\u2010\",\"Dashv\":\"\\u2ae4\",\"dashv\":\"\\u22a3\",\"dbkarow\":\"\\u290f\",\"dblac\":\"\\u02dd\",\"Dcaron\":\"\\u010e\",\"dcaron\":\"\\u010f\",\"Dcy\":\"\\u0414\",\"dcy\":\"\\u0434\",\"ddagger\":\"\\u2021\",\"ddarr\":\"\\u21ca\",\"DD\":\"\\u2145\",\"dd\":\"\\u2146\",\"DDotrahd\":\"\\u2911\",\"ddotseq\":\"\\u2a77\",\"deg\":\"\\xb0\",\"Del\":\"\\u2207\",\"Delta\":\"\\u0394\",\"delta\":\"\\u03b4\",\"demptyv\":\"\\u29b1\",\"dfisht\":\"\\u297f\",\"Dfr\":\"\\ud835\\udd07\",\"dfr\":\"\\ud835\\udd21\",\"dHar\":\"\\u2965\",\"dharl\":\"\\u21c3\",\"dharr\":\"\\u21c2\",\"DiacriticalAcute\":\"\\xb4\",\"DiacriticalDot\":\"\\u02d9\",\"DiacriticalDoubleAcute\":\"\\u02dd\",\"DiacriticalGrave\":\"`\",\"DiacriticalTilde\":\"\\u02dc\",\"diam\":\"\\u22c4\",\"diamond\":\"\\u22c4\",\"Diamond\":\"\\u22c4\",\"diamondsuit\":\"\\u2666\",\"diams\":\"\\u2666\",\"die\":\"\\xa8\",\"DifferentialD\":\"\\u2146\",\"digamma\":\"\\u03dd\",\"disin\":\"\\u22f2\",\"div\":\"\\xf7\",\"divide\":\"\\xf7\",\"divideontimes\":\"\\u22c7\",\"divonx\":\"\\u22c7\",\"DJcy\":\"\\u0402\",\"djcy\":\"\\u0452\",\"dlcorn\":\"\\u231e\",\"dlcrop\":\"\\u230d\",\"dollar\":\"$\",\"Dopf\":\"\\ud835\\udd3b\",\"dopf\":\"\\ud835\\udd55\",\"Dot\":\"\\xa8\",\"dot\":\"\\u02d9\",\"DotDot\":\"\\u20dc\",\"doteq\":\"\\u2250\",\"doteqdot\":\"\\u2251\",\"DotEqual\":\"\\u2250\",\"dotminus\":\"\\u2238\",\"dotplus\":\"\\u2214\",\"dotsquare\":\"\\u22a1\",\"doublebarwedge\":\"\\u2306\",\"DoubleContourIntegral\":\"\\u222f\",\"DoubleDot\":\"\\xa8\",\"DoubleDownArrow\":\"\\u21d3\",\"DoubleLeftArrow\":\"\\u21d0\",\"DoubleLeftRightArrow\":\"\\u21d4\",\"DoubleLeftTee\":\"\\u2ae4\",\"DoubleLongLeftArrow\":\"\\u27f8\",\"DoubleLongLeftRightArrow\":\"\\u27fa\",\"DoubleLongRightArrow\":\"\\u27f9\",\"DoubleRightArrow\":\"\\u21d2\",\"DoubleRightTee\":\"\\u22a8\",\"DoubleUpArrow\":\"\\u21d1\",\"DoubleUpDownArrow\":\"\\u21d5\",\"DoubleVerticalBar\":\"\\u2225\",\"DownArrowBar\":\"\\u2913\",\"downarrow\":\"\\u2193\",\"DownArrow\":\"\\u2193\",\"Downarrow\":\"\\u21d3\",\"DownArrowUpArrow\":\"\\u21f5\",\"DownBreve\":\"\\u0311\",\"downdownarrows\":\"\\u21ca\",\"downharpoonleft\":\"\\u21c3\",\"downharpoonright\":\"\\u21c2\",\"DownLeftRightVector\":\"\\u2950\",\"DownLeftTeeVector\":\"\\u295e\",\"DownLeftVectorBar\":\"\\u2956\",\"DownLeftVector\":\"\\u21bd\",\"DownRightTeeVector\":\"\\u295f\",\"DownRightVectorBar\":\"\\u2957\",\"DownRightVector\":\"\\u21c1\",\"DownTeeArrow\":\"\\u21a7\",\"DownTee\":\"\\u22a4\",\"drbkarow\":\"\\u2910\",\"drcorn\":\"\\u231f\",\"drcrop\":\"\\u230c\",\"Dscr\":\"\\ud835\\udc9f\",\"dscr\":\"\\ud835\\udcb9\",\"DScy\":\"\\u0405\",\"dscy\":\"\\u0455\",\"dsol\":\"\\u29f6\",\"Dstrok\":\"\\u0110\",\"dstrok\":\"\\u0111\",\"dtdot\":\"\\u22f1\",\"dtri\":\"\\u25bf\",\"dtrif\":\"\\u25be\",\"duarr\":\"\\u21f5\",\"duhar\":\"\\u296f\",\"dwangle\":\"\\u29a6\",\"DZcy\":\"\\u040f\",\"dzcy\":\"\\u045f\",\"dzigrarr\":\"\\u27ff\",\"Eacute\":\"\\xc9\",\"eacute\":\"\\xe9\",\"easter\":\"\\u2a6e\",\"Ecaron\":\"\\u011a\",\"ecaron\":\"\\u011b\",\"Ecirc\":\"\\xca\",\"ecirc\":\"\\xea\",\"ecir\":\"\\u2256\",\"ecolon\":\"\\u2255\",\"Ecy\":\"\\u042d\",\"ecy\":\"\\u044d\",\"eDDot\":\"\\u2a77\",\"Edot\":\"\\u0116\",\"edot\":\"\\u0117\",\"eDot\":\"\\u2251\",\"ee\":\"\\u2147\",\"efDot\":\"\\u2252\",\"Efr\":\"\\ud835\\udd08\",\"efr\":\"\\ud835\\udd22\",\"eg\":\"\\u2a9a\",\"Egrave\":\"\\xc8\",\"egrave\":\"\\xe8\",\"egs\":\"\\u2a96\",\"egsdot\":\"\\u2a98\",\"el\":\"\\u2a99\",\"Element\":\"\\u2208\",\"elinters\":\"\\u23e7\",\"ell\":\"\\u2113\",\"els\":\"\\u2a95\",\"elsdot\":\"\\u2a97\",\"Emacr\":\"\\u0112\",\"emacr\":\"\\u0113\",\"empty\":\"\\u2205\",\"emptyset\":\"\\u2205\",\"EmptySmallSquare\":\"\\u25fb\",\"emptyv\":\"\\u2205\",\"EmptyVerySmallSquare\":\"\\u25ab\",\"emsp13\":\"\\u2004\",\"emsp14\":\"\\u2005\",\"emsp\":\"\\u2003\",\"ENG\":\"\\u014a\",\"eng\":\"\\u014b\",\"ensp\":\"\\u2002\",\"Eogon\":\"\\u0118\",\"eogon\":\"\\u0119\",\"Eopf\":\"\\ud835\\udd3c\",\"eopf\":\"\\ud835\\udd56\",\"epar\":\"\\u22d5\",\"eparsl\":\"\\u29e3\",\"eplus\":\"\\u2a71\",\"epsi\":\"\\u03b5\",\"Epsilon\":\"\\u0395\",\"epsilon\":\"\\u03b5\",\"epsiv\":\"\\u03f5\",\"eqcirc\":\"\\u2256\",\"eqcolon\":\"\\u2255\",\"eqsim\":\"\\u2242\",\"eqslantgtr\":\"\\u2a96\",\"eqslantless\":\"\\u2a95\",\"Equal\":\"\\u2a75\",\"equals\":\"=\",\"EqualTilde\":\"\\u2242\",\"equest\":\"\\u225f\",\"Equilibrium\":\"\\u21cc\",\"equiv\":\"\\u2261\",\"equivDD\":\"\\u2a78\",\"eqvparsl\":\"\\u29e5\",\"erarr\":\"\\u2971\",\"erDot\":\"\\u2253\",\"escr\":\"\\u212f\",\"Escr\":\"\\u2130\",\"esdot\":\"\\u2250\",\"Esim\":\"\\u2a73\",\"esim\":\"\\u2242\",\"Eta\":\"\\u0397\",\"eta\":\"\\u03b7\",\"ETH\":\"\\xd0\",\"eth\":\"\\xf0\",\"Euml\":\"\\xcb\",\"euml\":\"\\xeb\",\"euro\":\"\\u20ac\",\"excl\":\"!\",\"exist\":\"\\u2203\",\"Exists\":\"\\u2203\",\"expectation\":\"\\u2130\",\"exponentiale\":\"\\u2147\",\"ExponentialE\":\"\\u2147\",\"fallingdotseq\":\"\\u2252\",\"Fcy\":\"\\u0424\",\"fcy\":\"\\u0444\",\"female\":\"\\u2640\",\"ffilig\":\"\\ufb03\",\"fflig\":\"\\ufb00\",\"ffllig\":\"\\ufb04\",\"Ffr\":\"\\ud835\\udd09\",\"ffr\":\"\\ud835\\udd23\",\"filig\":\"\\ufb01\",\"FilledSmallSquare\":\"\\u25fc\",\"FilledVerySmallSquare\":\"\\u25aa\",\"fjlig\":\"fj\",\"flat\":\"\\u266d\",\"fllig\":\"\\ufb02\",\"fltns\":\"\\u25b1\",\"fnof\":\"\\u0192\",\"Fopf\":\"\\ud835\\udd3d\",\"fopf\":\"\\ud835\\udd57\",\"forall\":\"\\u2200\",\"ForAll\":\"\\u2200\",\"fork\":\"\\u22d4\",\"forkv\":\"\\u2ad9\",\"Fouriertrf\":\"\\u2131\",\"fpartint\":\"\\u2a0d\",\"frac12\":\"\\xbd\",\"frac13\":\"\\u2153\",\"frac14\":\"\\xbc\",\"frac15\":\"\\u2155\",\"frac16\":\"\\u2159\",\"frac18\":\"\\u215b\",\"frac23\":\"\\u2154\",\"frac25\":\"\\u2156\",\"frac34\":\"\\xbe\",\"frac35\":\"\\u2157\",\"frac38\":\"\\u215c\",\"frac45\":\"\\u2158\",\"frac56\":\"\\u215a\",\"frac58\":\"\\u215d\",\"frac78\":\"\\u215e\",\"frasl\":\"\\u2044\",\"frown\":\"\\u2322\",\"fscr\":\"\\ud835\\udcbb\",\"Fscr\":\"\\u2131\",\"gacute\":\"\\u01f5\",\"Gamma\":\"\\u0393\",\"gamma\":\"\\u03b3\",\"Gammad\":\"\\u03dc\",\"gammad\":\"\\u03dd\",\"gap\":\"\\u2a86\",\"Gbreve\":\"\\u011e\",\"gbreve\":\"\\u011f\",\"Gcedil\":\"\\u0122\",\"Gcirc\":\"\\u011c\",\"gcirc\":\"\\u011d\",\"Gcy\":\"\\u0413\",\"gcy\":\"\\u0433\",\"Gdot\":\"\\u0120\",\"gdot\":\"\\u0121\",\"ge\":\"\\u2265\",\"gE\":\"\\u2267\",\"gEl\":\"\\u2a8c\",\"gel\":\"\\u22db\",\"geq\":\"\\u2265\",\"geqq\":\"\\u2267\",\"geqslant\":\"\\u2a7e\",\"gescc\":\"\\u2aa9\",\"ges\":\"\\u2a7e\",\"gesdot\":\"\\u2a80\",\"gesdoto\":\"\\u2a82\",\"gesdotol\":\"\\u2a84\",\"gesl\":\"\\u22db\\ufe00\",\"gesles\":\"\\u2a94\",\"Gfr\":\"\\ud835\\udd0a\",\"gfr\":\"\\ud835\\udd24\",\"gg\":\"\\u226b\",\"Gg\":\"\\u22d9\",\"ggg\":\"\\u22d9\",\"gimel\":\"\\u2137\",\"GJcy\":\"\\u0403\",\"gjcy\":\"\\u0453\",\"gla\":\"\\u2aa5\",\"gl\":\"\\u2277\",\"glE\":\"\\u2a92\",\"glj\":\"\\u2aa4\",\"gnap\":\"\\u2a8a\",\"gnapprox\":\"\\u2a8a\",\"gne\":\"\\u2a88\",\"gnE\":\"\\u2269\",\"gneq\":\"\\u2a88\",\"gneqq\":\"\\u2269\",\"gnsim\":\"\\u22e7\",\"Gopf\":\"\\ud835\\udd3e\",\"gopf\":\"\\ud835\\udd58\",\"grave\":\"`\",\"GreaterEqual\":\"\\u2265\",\"GreaterEqualLess\":\"\\u22db\",\"GreaterFullEqual\":\"\\u2267\",\"GreaterGreater\":\"\\u2aa2\",\"GreaterLess\":\"\\u2277\",\"GreaterSlantEqual\":\"\\u2a7e\",\"GreaterTilde\":\"\\u2273\",\"Gscr\":\"\\ud835\\udca2\",\"gscr\":\"\\u210a\",\"gsim\":\"\\u2273\",\"gsime\":\"\\u2a8e\",\"gsiml\":\"\\u2a90\",\"gtcc\":\"\\u2aa7\",\"gtcir\":\"\\u2a7a\",\"gt\":\">\",\"GT\":\">\",\"Gt\":\"\\u226b\",\"gtdot\":\"\\u22d7\",\"gtlPar\":\"\\u2995\",\"gtquest\":\"\\u2a7c\",\"gtrapprox\":\"\\u2a86\",\"gtrarr\":\"\\u2978\",\"gtrdot\":\"\\u22d7\",\"gtreqless\":\"\\u22db\",\"gtreqqless\":\"\\u2a8c\",\"gtrless\":\"\\u2277\",\"gtrsim\":\"\\u2273\",\"gvertneqq\":\"\\u2269\\ufe00\",\"gvnE\":\"\\u2269\\ufe00\",\"Hacek\":\"\\u02c7\",\"hairsp\":\"\\u200a\",\"half\":\"\\xbd\",\"hamilt\":\"\\u210b\",\"HARDcy\":\"\\u042a\",\"hardcy\":\"\\u044a\",\"harrcir\":\"\\u2948\",\"harr\":\"\\u2194\",\"hArr\":\"\\u21d4\",\"harrw\":\"\\u21ad\",\"Hat\":\"^\",\"hbar\":\"\\u210f\",\"Hcirc\":\"\\u0124\",\"hcirc\":\"\\u0125\",\"hearts\":\"\\u2665\",\"heartsuit\":\"\\u2665\",\"hellip\":\"\\u2026\",\"hercon\":\"\\u22b9\",\"hfr\":\"\\ud835\\udd25\",\"Hfr\":\"\\u210c\",\"HilbertSpace\":\"\\u210b\",\"hksearow\":\"\\u2925\",\"hkswarow\":\"\\u2926\",\"hoarr\":\"\\u21ff\",\"homtht\":\"\\u223b\",\"hookleftarrow\":\"\\u21a9\",\"hookrightarrow\":\"\\u21aa\",\"hopf\":\"\\ud835\\udd59\",\"Hopf\":\"\\u210d\",\"horbar\":\"\\u2015\",\"HorizontalLine\":\"\\u2500\",\"hscr\":\"\\ud835\\udcbd\",\"Hscr\":\"\\u210b\",\"hslash\":\"\\u210f\",\"Hstrok\":\"\\u0126\",\"hstrok\":\"\\u0127\",\"HumpDownHump\":\"\\u224e\",\"HumpEqual\":\"\\u224f\",\"hybull\":\"\\u2043\",\"hyphen\":\"\\u2010\",\"Iacute\":\"\\xcd\",\"iacute\":\"\\xed\",\"ic\":\"\\u2063\",\"Icirc\":\"\\xce\",\"icirc\":\"\\xee\",\"Icy\":\"\\u0418\",\"icy\":\"\\u0438\",\"Idot\":\"\\u0130\",\"IEcy\":\"\\u0415\",\"iecy\":\"\\u0435\",\"iexcl\":\"\\xa1\",\"iff\":\"\\u21d4\",\"ifr\":\"\\ud835\\udd26\",\"Ifr\":\"\\u2111\",\"Igrave\":\"\\xcc\",\"igrave\":\"\\xec\",\"ii\":\"\\u2148\",\"iiiint\":\"\\u2a0c\",\"iiint\":\"\\u222d\",\"iinfin\":\"\\u29dc\",\"iiota\":\"\\u2129\",\"IJlig\":\"\\u0132\",\"ijlig\":\"\\u0133\",\"Imacr\":\"\\u012a\",\"imacr\":\"\\u012b\",\"image\":\"\\u2111\",\"ImaginaryI\":\"\\u2148\",\"imagline\":\"\\u2110\",\"imagpart\":\"\\u2111\",\"imath\":\"\\u0131\",\"Im\":\"\\u2111\",\"imof\":\"\\u22b7\",\"imped\":\"\\u01b5\",\"Implies\":\"\\u21d2\",\"incare\":\"\\u2105\",\"in\":\"\\u2208\",\"infin\":\"\\u221e\",\"infintie\":\"\\u29dd\",\"inodot\":\"\\u0131\",\"intcal\":\"\\u22ba\",\"int\":\"\\u222b\",\"Int\":\"\\u222c\",\"integers\":\"\\u2124\",\"Integral\":\"\\u222b\",\"intercal\":\"\\u22ba\",\"Intersection\":\"\\u22c2\",\"intlarhk\":\"\\u2a17\",\"intprod\":\"\\u2a3c\",\"InvisibleComma\":\"\\u2063\",\"InvisibleTimes\":\"\\u2062\",\"IOcy\":\"\\u0401\",\"iocy\":\"\\u0451\",\"Iogon\":\"\\u012e\",\"iogon\":\"\\u012f\",\"Iopf\":\"\\ud835\\udd40\",\"iopf\":\"\\ud835\\udd5a\",\"Iota\":\"\\u0399\",\"iota\":\"\\u03b9\",\"iprod\":\"\\u2a3c\",\"iquest\":\"\\xbf\",\"iscr\":\"\\ud835\\udcbe\",\"Iscr\":\"\\u2110\",\"isin\":\"\\u2208\",\"isindot\":\"\\u22f5\",\"isinE\":\"\\u22f9\",\"isins\":\"\\u22f4\",\"isinsv\":\"\\u22f3\",\"isinv\":\"\\u2208\",\"it\":\"\\u2062\",\"Itilde\":\"\\u0128\",\"itilde\":\"\\u0129\",\"Iukcy\":\"\\u0406\",\"iukcy\":\"\\u0456\",\"Iuml\":\"\\xcf\",\"iuml\":\"\\xef\",\"Jcirc\":\"\\u0134\",\"jcirc\":\"\\u0135\",\"Jcy\":\"\\u0419\",\"jcy\":\"\\u0439\",\"Jfr\":\"\\ud835\\udd0d\",\"jfr\":\"\\ud835\\udd27\",\"jmath\":\"\\u0237\",\"Jopf\":\"\\ud835\\udd41\",\"jopf\":\"\\ud835\\udd5b\",\"Jscr\":\"\\ud835\\udca5\",\"jscr\":\"\\ud835\\udcbf\",\"Jsercy\":\"\\u0408\",\"jsercy\":\"\\u0458\",\"Jukcy\":\"\\u0404\",\"jukcy\":\"\\u0454\",\"Kappa\":\"\\u039a\",\"kappa\":\"\\u03ba\",\"kappav\":\"\\u03f0\",\"Kcedil\":\"\\u0136\",\"kcedil\":\"\\u0137\",\"Kcy\":\"\\u041a\",\"kcy\":\"\\u043a\",\"Kfr\":\"\\ud835\\udd0e\",\"kfr\":\"\\ud835\\udd28\",\"kgreen\":\"\\u0138\",\"KHcy\":\"\\u0425\",\"khcy\":\"\\u0445\",\"KJcy\":\"\\u040c\",\"kjcy\":\"\\u045c\",\"Kopf\":\"\\ud835\\udd42\",\"kopf\":\"\\ud835\\udd5c\",\"Kscr\":\"\\ud835\\udca6\",\"kscr\":\"\\ud835\\udcc0\",\"lAarr\":\"\\u21da\",\"Lacute\":\"\\u0139\",\"lacute\":\"\\u013a\",\"laemptyv\":\"\\u29b4\",\"lagran\":\"\\u2112\",\"Lambda\":\"\\u039b\",\"lambda\":\"\\u03bb\",\"lang\":\"\\u27e8\",\"Lang\":\"\\u27ea\",\"langd\":\"\\u2991\",\"langle\":\"\\u27e8\",\"lap\":\"\\u2a85\",\"Laplacetrf\":\"\\u2112\",\"laquo\":\"\\xab\",\"larrb\":\"\\u21e4\",\"larrbfs\":\"\\u291f\",\"larr\":\"\\u2190\",\"Larr\":\"\\u219e\",\"lArr\":\"\\u21d0\",\"larrfs\":\"\\u291d\",\"larrhk\":\"\\u21a9\",\"larrlp\":\"\\u21ab\",\"larrpl\":\"\\u2939\",\"larrsim\":\"\\u2973\",\"larrtl\":\"\\u21a2\",\"latail\":\"\\u2919\",\"lAtail\":\"\\u291b\",\"lat\":\"\\u2aab\",\"late\":\"\\u2aad\",\"lates\":\"\\u2aad\\ufe00\",\"lbarr\":\"\\u290c\",\"lBarr\":\"\\u290e\",\"lbbrk\":\"\\u2772\",\"lbrace\":\"{\",\"lbrack\":\"[\",\"lbrke\":\"\\u298b\",\"lbrksld\":\"\\u298f\",\"lbrkslu\":\"\\u298d\",\"Lcaron\":\"\\u013d\",\"lcaron\":\"\\u013e\",\"Lcedil\":\"\\u013b\",\"lcedil\":\"\\u013c\",\"lceil\":\"\\u2308\",\"lcub\":\"{\",\"Lcy\":\"\\u041b\",\"lcy\":\"\\u043b\",\"ldca\":\"\\u2936\",\"ldquo\":\"\\u201c\",\"ldquor\":\"\\u201e\",\"ldrdhar\":\"\\u2967\",\"ldrushar\":\"\\u294b\",\"ldsh\":\"\\u21b2\",\"le\":\"\\u2264\",\"lE\":\"\\u2266\",\"LeftAngleBracket\":\"\\u27e8\",\"LeftArrowBar\":\"\\u21e4\",\"leftarrow\":\"\\u2190\",\"LeftArrow\":\"\\u2190\",\"Leftarrow\":\"\\u21d0\",\"LeftArrowRightArrow\":\"\\u21c6\",\"leftarrowtail\":\"\\u21a2\",\"LeftCeiling\":\"\\u2308\",\"LeftDoubleBracket\":\"\\u27e6\",\"LeftDownTeeVector\":\"\\u2961\",\"LeftDownVectorBar\":\"\\u2959\",\"LeftDownVector\":\"\\u21c3\",\"LeftFloor\":\"\\u230a\",\"leftharpoondown\":\"\\u21bd\",\"leftharpoonup\":\"\\u21bc\",\"leftleftarrows\":\"\\u21c7\",\"leftrightarrow\":\"\\u2194\",\"LeftRightArrow\":\"\\u2194\",\"Leftrightarrow\":\"\\u21d4\",\"leftrightarrows\":\"\\u21c6\",\"leftrightharpoons\":\"\\u21cb\",\"leftrightsquigarrow\":\"\\u21ad\",\"LeftRightVector\":\"\\u294e\",\"LeftTeeArrow\":\"\\u21a4\",\"LeftTee\":\"\\u22a3\",\"LeftTeeVector\":\"\\u295a\",\"leftthreetimes\":\"\\u22cb\",\"LeftTriangleBar\":\"\\u29cf\",\"LeftTriangle\":\"\\u22b2\",\"LeftTriangleEqual\":\"\\u22b4\",\"LeftUpDownVector\":\"\\u2951\",\"LeftUpTeeVector\":\"\\u2960\",\"LeftUpVectorBar\":\"\\u2958\",\"LeftUpVector\":\"\\u21bf\",\"LeftVectorBar\":\"\\u2952\",\"LeftVector\":\"\\u21bc\",\"lEg\":\"\\u2a8b\",\"leg\":\"\\u22da\",\"leq\":\"\\u2264\",\"leqq\":\"\\u2266\",\"leqslant\":\"\\u2a7d\",\"lescc\":\"\\u2aa8\",\"les\":\"\\u2a7d\",\"lesdot\":\"\\u2a7f\",\"lesdoto\":\"\\u2a81\",\"lesdotor\":\"\\u2a83\",\"lesg\":\"\\u22da\\ufe00\",\"lesges\":\"\\u2a93\",\"lessapprox\":\"\\u2a85\",\"lessdot\":\"\\u22d6\",\"lesseqgtr\":\"\\u22da\",\"lesseqqgtr\":\"\\u2a8b\",\"LessEqualGreater\":\"\\u22da\",\"LessFullEqual\":\"\\u2266\",\"LessGreater\":\"\\u2276\",\"lessgtr\":\"\\u2276\",\"LessLess\":\"\\u2aa1\",\"lesssim\":\"\\u2272\",\"LessSlantEqual\":\"\\u2a7d\",\"LessTilde\":\"\\u2272\",\"lfisht\":\"\\u297c\",\"lfloor\":\"\\u230a\",\"Lfr\":\"\\ud835\\udd0f\",\"lfr\":\"\\ud835\\udd29\",\"lg\":\"\\u2276\",\"lgE\":\"\\u2a91\",\"lHar\":\"\\u2962\",\"lhard\":\"\\u21bd\",\"lharu\":\"\\u21bc\",\"lharul\":\"\\u296a\",\"lhblk\":\"\\u2584\",\"LJcy\":\"\\u0409\",\"ljcy\":\"\\u0459\",\"llarr\":\"\\u21c7\",\"ll\":\"\\u226a\",\"Ll\":\"\\u22d8\",\"llcorner\":\"\\u231e\",\"Lleftarrow\":\"\\u21da\",\"llhard\":\"\\u296b\",\"lltri\":\"\\u25fa\",\"Lmidot\":\"\\u013f\",\"lmidot\":\"\\u0140\",\"lmoustache\":\"\\u23b0\",\"lmoust\":\"\\u23b0\",\"lnap\":\"\\u2a89\",\"lnapprox\":\"\\u2a89\",\"lne\":\"\\u2a87\",\"lnE\":\"\\u2268\",\"lneq\":\"\\u2a87\",\"lneqq\":\"\\u2268\",\"lnsim\":\"\\u22e6\",\"loang\":\"\\u27ec\",\"loarr\":\"\\u21fd\",\"lobrk\":\"\\u27e6\",\"longleftarrow\":\"\\u27f5\",\"LongLeftArrow\":\"\\u27f5\",\"Longleftarrow\":\"\\u27f8\",\"longleftrightarrow\":\"\\u27f7\",\"LongLeftRightArrow\":\"\\u27f7\",\"Longleftrightarrow\":\"\\u27fa\",\"longmapsto\":\"\\u27fc\",\"longrightarrow\":\"\\u27f6\",\"LongRightArrow\":\"\\u27f6\",\"Longrightarrow\":\"\\u27f9\",\"looparrowleft\":\"\\u21ab\",\"looparrowright\":\"\\u21ac\",\"lopar\":\"\\u2985\",\"Lopf\":\"\\ud835\\udd43\",\"lopf\":\"\\ud835\\udd5d\",\"loplus\":\"\\u2a2d\",\"lotimes\":\"\\u2a34\",\"lowast\":\"\\u2217\",\"lowbar\":\"_\",\"LowerLeftArrow\":\"\\u2199\",\"LowerRightArrow\":\"\\u2198\",\"loz\":\"\\u25ca\",\"lozenge\":\"\\u25ca\",\"lozf\":\"\\u29eb\",\"lpar\":\"(\",\"lparlt\":\"\\u2993\",\"lrarr\":\"\\u21c6\",\"lrcorner\":\"\\u231f\",\"lrhar\":\"\\u21cb\",\"lrhard\":\"\\u296d\",\"lrm\":\"\\u200e\",\"lrtri\":\"\\u22bf\",\"lsaquo\":\"\\u2039\",\"lscr\":\"\\ud835\\udcc1\",\"Lscr\":\"\\u2112\",\"lsh\":\"\\u21b0\",\"Lsh\":\"\\u21b0\",\"lsim\":\"\\u2272\",\"lsime\":\"\\u2a8d\",\"lsimg\":\"\\u2a8f\",\"lsqb\":\"[\",\"lsquo\":\"\\u2018\",\"lsquor\":\"\\u201a\",\"Lstrok\":\"\\u0141\",\"lstrok\":\"\\u0142\",\"ltcc\":\"\\u2aa6\",\"ltcir\":\"\\u2a79\",\"lt\":\"<\",\"LT\":\"<\",\"Lt\":\"\\u226a\",\"ltdot\":\"\\u22d6\",\"lthree\":\"\\u22cb\",\"ltimes\":\"\\u22c9\",\"ltlarr\":\"\\u2976\",\"ltquest\":\"\\u2a7b\",\"ltri\":\"\\u25c3\",\"ltrie\":\"\\u22b4\",\"ltrif\":\"\\u25c2\",\"ltrPar\":\"\\u2996\",\"lurdshar\":\"\\u294a\",\"luruhar\":\"\\u2966\",\"lvertneqq\":\"\\u2268\\ufe00\",\"lvnE\":\"\\u2268\\ufe00\",\"macr\":\"\\xaf\",\"male\":\"\\u2642\",\"malt\":\"\\u2720\",\"maltese\":\"\\u2720\",\"Map\":\"\\u2905\",\"map\":\"\\u21a6\",\"mapsto\":\"\\u21a6\",\"mapstodown\":\"\\u21a7\",\"mapstoleft\":\"\\u21a4\",\"mapstoup\":\"\\u21a5\",\"marker\":\"\\u25ae\",\"mcomma\":\"\\u2a29\",\"Mcy\":\"\\u041c\",\"mcy\":\"\\u043c\",\"mdash\":\"\\u2014\",\"mDDot\":\"\\u223a\",\"measuredangle\":\"\\u2221\",\"MediumSpace\":\"\\u205f\",\"Mellintrf\":\"\\u2133\",\"Mfr\":\"\\ud835\\udd10\",\"mfr\":\"\\ud835\\udd2a\",\"mho\":\"\\u2127\",\"micro\":\"\\xb5\",\"midast\":\"*\",\"midcir\":\"\\u2af0\",\"mid\":\"\\u2223\",\"middot\":\"\\xb7\",\"minusb\":\"\\u229f\",\"minus\":\"\\u2212\",\"minusd\":\"\\u2238\",\"minusdu\":\"\\u2a2a\",\"MinusPlus\":\"\\u2213\",\"mlcp\":\"\\u2adb\",\"mldr\":\"\\u2026\",\"mnplus\":\"\\u2213\",\"models\":\"\\u22a7\",\"Mopf\":\"\\ud835\\udd44\",\"mopf\":\"\\ud835\\udd5e\",\"mp\":\"\\u2213\",\"mscr\":\"\\ud835\\udcc2\",\"Mscr\":\"\\u2133\",\"mstpos\":\"\\u223e\",\"Mu\":\"\\u039c\",\"mu\":\"\\u03bc\",\"multimap\":\"\\u22b8\",\"mumap\":\"\\u22b8\",\"nabla\":\"\\u2207\",\"Nacute\":\"\\u0143\",\"nacute\":\"\\u0144\",\"nang\":\"\\u2220\\u20d2\",\"nap\":\"\\u2249\",\"napE\":\"\\u2a70\\u0338\",\"napid\":\"\\u224b\\u0338\",\"napos\":\"\\u0149\",\"napprox\":\"\\u2249\",\"natural\":\"\\u266e\",\"naturals\":\"\\u2115\",\"natur\":\"\\u266e\",\"nbsp\":\"\\xa0\",\"nbump\":\"\\u224e\\u0338\",\"nbumpe\":\"\\u224f\\u0338\",\"ncap\":\"\\u2a43\",\"Ncaron\":\"\\u0147\",\"ncaron\":\"\\u0148\",\"Ncedil\":\"\\u0145\",\"ncedil\":\"\\u0146\",\"ncong\":\"\\u2247\",\"ncongdot\":\"\\u2a6d\\u0338\",\"ncup\":\"\\u2a42\",\"Ncy\":\"\\u041d\",\"ncy\":\"\\u043d\",\"ndash\":\"\\u2013\",\"nearhk\":\"\\u2924\",\"nearr\":\"\\u2197\",\"neArr\":\"\\u21d7\",\"nearrow\":\"\\u2197\",\"ne\":\"\\u2260\",\"nedot\":\"\\u2250\\u0338\",\"NegativeMediumSpace\":\"\\u200b\",\"NegativeThickSpace\":\"\\u200b\",\"NegativeThinSpace\":\"\\u200b\",\"NegativeVeryThinSpace\":\"\\u200b\",\"nequiv\":\"\\u2262\",\"nesear\":\"\\u2928\",\"nesim\":\"\\u2242\\u0338\",\"NestedGreaterGreater\":\"\\u226b\",\"NestedLessLess\":\"\\u226a\",\"NewLine\":\"\\\\n\",\"nexist\":\"\\u2204\",\"nexists\":\"\\u2204\",\"Nfr\":\"\\ud835\\udd11\",\"nfr\":\"\\ud835\\udd2b\",\"ngE\":\"\\u2267\\u0338\",\"nge\":\"\\u2271\",\"ngeq\":\"\\u2271\",\"ngeqq\":\"\\u2267\\u0338\",\"ngeqslant\":\"\\u2a7e\\u0338\",\"nges\":\"\\u2a7e\\u0338\",\"nGg\":\"\\u22d9\\u0338\",\"ngsim\":\"\\u2275\",\"nGt\":\"\\u226b\\u20d2\",\"ngt\":\"\\u226f\",\"ngtr\":\"\\u226f\",\"nGtv\":\"\\u226b\\u0338\",\"nharr\":\"\\u21ae\",\"nhArr\":\"\\u21ce\",\"nhpar\":\"\\u2af2\",\"ni\":\"\\u220b\",\"nis\":\"\\u22fc\",\"nisd\":\"\\u22fa\",\"niv\":\"\\u220b\",\"NJcy\":\"\\u040a\",\"njcy\":\"\\u045a\",\"nlarr\":\"\\u219a\",\"nlArr\":\"\\u21cd\",\"nldr\":\"\\u2025\",\"nlE\":\"\\u2266\\u0338\",\"nle\":\"\\u2270\",\"nleftarrow\":\"\\u219a\",\"nLeftarrow\":\"\\u21cd\",\"nleftrightarrow\":\"\\u21ae\",\"nLeftrightarrow\":\"\\u21ce\",\"nleq\":\"\\u2270\",\"nleqq\":\"\\u2266\\u0338\",\"nleqslant\":\"\\u2a7d\\u0338\",\"nles\":\"\\u2a7d\\u0338\",\"nless\":\"\\u226e\",\"nLl\":\"\\u22d8\\u0338\",\"nlsim\":\"\\u2274\",\"nLt\":\"\\u226a\\u20d2\",\"nlt\":\"\\u226e\",\"nltri\":\"\\u22ea\",\"nltrie\":\"\\u22ec\",\"nLtv\":\"\\u226a\\u0338\",\"nmid\":\"\\u2224\",\"NoBreak\":\"\\u2060\",\"NonBreakingSpace\":\"\\xa0\",\"nopf\":\"\\ud835\\udd5f\",\"Nopf\":\"\\u2115\",\"Not\":\"\\u2aec\",\"not\":\"\\xac\",\"NotCongruent\":\"\\u2262\",\"NotCupCap\":\"\\u226d\",\"NotDoubleVerticalBar\":\"\\u2226\",\"NotElement\":\"\\u2209\",\"NotEqual\":\"\\u2260\",\"NotEqualTilde\":\"\\u2242\\u0338\",\"NotExists\":\"\\u2204\",\"NotGreater\":\"\\u226f\",\"NotGreaterEqual\":\"\\u2271\",\"NotGreaterFullEqual\":\"\\u2267\\u0338\",\"NotGreaterGreater\":\"\\u226b\\u0338\",\"NotGreaterLess\":\"\\u2279\",\"NotGreaterSlantEqual\":\"\\u2a7e\\u0338\",\"NotGreaterTilde\":\"\\u2275\",\"NotHumpDownHump\":\"\\u224e\\u0338\",\"NotHumpEqual\":\"\\u224f\\u0338\",\"notin\":\"\\u2209\",\"notindot\":\"\\u22f5\\u0338\",\"notinE\":\"\\u22f9\\u0338\",\"notinva\":\"\\u2209\",\"notinvb\":\"\\u22f7\",\"notinvc\":\"\\u22f6\",\"NotLeftTriangleBar\":\"\\u29cf\\u0338\",\"NotLeftTriangle\":\"\\u22ea\",\"NotLeftTriangleEqual\":\"\\u22ec\",\"NotLess\":\"\\u226e\",\"NotLessEqual\":\"\\u2270\",\"NotLessGreater\":\"\\u2278\",\"NotLessLess\":\"\\u226a\\u0338\",\"NotLessSlantEqual\":\"\\u2a7d\\u0338\",\"NotLessTilde\":\"\\u2274\",\"NotNestedGreaterGreater\":\"\\u2aa2\\u0338\",\"NotNestedLessLess\":\"\\u2aa1\\u0338\",\"notni\":\"\\u220c\",\"notniva\":\"\\u220c\",\"notnivb\":\"\\u22fe\",\"notnivc\":\"\\u22fd\",\"NotPrecedes\":\"\\u2280\",\"NotPrecedesEqual\":\"\\u2aaf\\u0338\",\"NotPrecedesSlantEqual\":\"\\u22e0\",\"NotReverseElement\":\"\\u220c\",\"NotRightTriangleBar\":\"\\u29d0\\u0338\",\"NotRightTriangle\":\"\\u22eb\",\"NotRightTriangleEqual\":\"\\u22ed\",\"NotSquareSubset\":\"\\u228f\\u0338\",\"NotSquareSubsetEqual\":\"\\u22e2\",\"NotSquareSuperset\":\"\\u2290\\u0338\",\"NotSquareSupersetEqual\":\"\\u22e3\",\"NotSubset\":\"\\u2282\\u20d2\",\"NotSubsetEqual\":\"\\u2288\",\"NotSucceeds\":\"\\u2281\",\"NotSucceedsEqual\":\"\\u2ab0\\u0338\",\"NotSucceedsSlantEqual\":\"\\u22e1\",\"NotSucceedsTilde\":\"\\u227f\\u0338\",\"NotSuperset\":\"\\u2283\\u20d2\",\"NotSupersetEqual\":\"\\u2289\",\"NotTilde\":\"\\u2241\",\"NotTildeEqual\":\"\\u2244\",\"NotTildeFullEqual\":\"\\u2247\",\"NotTildeTilde\":\"\\u2249\",\"NotVerticalBar\":\"\\u2224\",\"nparallel\":\"\\u2226\",\"npar\":\"\\u2226\",\"nparsl\":\"\\u2afd\\u20e5\",\"npart\":\"\\u2202\\u0338\",\"npolint\":\"\\u2a14\",\"npr\":\"\\u2280\",\"nprcue\":\"\\u22e0\",\"nprec\":\"\\u2280\",\"npreceq\":\"\\u2aaf\\u0338\",\"npre\":\"\\u2aaf\\u0338\",\"nrarrc\":\"\\u2933\\u0338\",\"nrarr\":\"\\u219b\",\"nrArr\":\"\\u21cf\",\"nrarrw\":\"\\u219d\\u0338\",\"nrightarrow\":\"\\u219b\",\"nRightarrow\":\"\\u21cf\",\"nrtri\":\"\\u22eb\",\"nrtrie\":\"\\u22ed\",\"nsc\":\"\\u2281\",\"nsccue\":\"\\u22e1\",\"nsce\":\"\\u2ab0\\u0338\",\"Nscr\":\"\\ud835\\udca9\",\"nscr\":\"\\ud835\\udcc3\",\"nshortmid\":\"\\u2224\",\"nshortparallel\":\"\\u2226\",\"nsim\":\"\\u2241\",\"nsime\":\"\\u2244\",\"nsimeq\":\"\\u2244\",\"nsmid\":\"\\u2224\",\"nspar\":\"\\u2226\",\"nsqsube\":\"\\u22e2\",\"nsqsupe\":\"\\u22e3\",\"nsub\":\"\\u2284\",\"nsubE\":\"\\u2ac5\\u0338\",\"nsube\":\"\\u2288\",\"nsubset\":\"\\u2282\\u20d2\",\"nsubseteq\":\"\\u2288\",\"nsubseteqq\":\"\\u2ac5\\u0338\",\"nsucc\":\"\\u2281\",\"nsucceq\":\"\\u2ab0\\u0338\",\"nsup\":\"\\u2285\",\"nsupE\":\"\\u2ac6\\u0338\",\"nsupe\":\"\\u2289\",\"nsupset\":\"\\u2283\\u20d2\",\"nsupseteq\":\"\\u2289\",\"nsupseteqq\":\"\\u2ac6\\u0338\",\"ntgl\":\"\\u2279\",\"Ntilde\":\"\\xd1\",\"ntilde\":\"\\xf1\",\"ntlg\":\"\\u2278\",\"ntriangleleft\":\"\\u22ea\",\"ntrianglelefteq\":\"\\u22ec\",\"ntriangleright\":\"\\u22eb\",\"ntrianglerighteq\":\"\\u22ed\",\"Nu\":\"\\u039d\",\"nu\":\"\\u03bd\",\"num\":\"#\",\"numero\":\"\\u2116\",\"numsp\":\"\\u2007\",\"nvap\":\"\\u224d\\u20d2\",\"nvdash\":\"\\u22ac\",\"nvDash\":\"\\u22ad\",\"nVdash\":\"\\u22ae\",\"nVDash\":\"\\u22af\",\"nvge\":\"\\u2265\\u20d2\",\"nvgt\":\">\\u20d2\",\"nvHarr\":\"\\u2904\",\"nvinfin\":\"\\u29de\",\"nvlArr\":\"\\u2902\",\"nvle\":\"\\u2264\\u20d2\",\"nvlt\":\"<\\u20d2\",\"nvltrie\":\"\\u22b4\\u20d2\",\"nvrArr\":\"\\u2903\",\"nvrtrie\":\"\\u22b5\\u20d2\",\"nvsim\":\"\\u223c\\u20d2\",\"nwarhk\":\"\\u2923\",\"nwarr\":\"\\u2196\",\"nwArr\":\"\\u21d6\",\"nwarrow\":\"\\u2196\",\"nwnear\":\"\\u2927\",\"Oacute\":\"\\xd3\",\"oacute\":\"\\xf3\",\"oast\":\"\\u229b\",\"Ocirc\":\"\\xd4\",\"ocirc\":\"\\xf4\",\"ocir\":\"\\u229a\",\"Ocy\":\"\\u041e\",\"ocy\":\"\\u043e\",\"odash\":\"\\u229d\",\"Odblac\":\"\\u0150\",\"odblac\":\"\\u0151\",\"odiv\":\"\\u2a38\",\"odot\":\"\\u2299\",\"odsold\":\"\\u29bc\",\"OElig\":\"\\u0152\",\"oelig\":\"\\u0153\",\"ofcir\":\"\\u29bf\",\"Ofr\":\"\\ud835\\udd12\",\"ofr\":\"\\ud835\\udd2c\",\"ogon\":\"\\u02db\",\"Ograve\":\"\\xd2\",\"ograve\":\"\\xf2\",\"ogt\":\"\\u29c1\",\"ohbar\":\"\\u29b5\",\"ohm\":\"\\u03a9\",\"oint\":\"\\u222e\",\"olarr\":\"\\u21ba\",\"olcir\":\"\\u29be\",\"olcross\":\"\\u29bb\",\"oline\":\"\\u203e\",\"olt\":\"\\u29c0\",\"Omacr\":\"\\u014c\",\"omacr\":\"\\u014d\",\"Omega\":\"\\u03a9\",\"omega\":\"\\u03c9\",\"Omicron\":\"\\u039f\",\"omicron\":\"\\u03bf\",\"omid\":\"\\u29b6\",\"ominus\":\"\\u2296\",\"Oopf\":\"\\ud835\\udd46\",\"oopf\":\"\\ud835\\udd60\",\"opar\":\"\\u29b7\",\"OpenCurlyDoubleQuote\":\"\\u201c\",\"OpenCurlyQuote\":\"\\u2018\",\"operp\":\"\\u29b9\",\"oplus\":\"\\u2295\",\"orarr\":\"\\u21bb\",\"Or\":\"\\u2a54\",\"or\":\"\\u2228\",\"ord\":\"\\u2a5d\",\"order\":\"\\u2134\",\"orderof\":\"\\u2134\",\"ordf\":\"\\xaa\",\"ordm\":\"\\xba\",\"origof\":\"\\u22b6\",\"oror\":\"\\u2a56\",\"orslope\":\"\\u2a57\",\"orv\":\"\\u2a5b\",\"oS\":\"\\u24c8\",\"Oscr\":\"\\ud835\\udcaa\",\"oscr\":\"\\u2134\",\"Oslash\":\"\\xd8\",\"oslash\":\"\\xf8\",\"osol\":\"\\u2298\",\"Otilde\":\"\\xd5\",\"otilde\":\"\\xf5\",\"otimesas\":\"\\u2a36\",\"Otimes\":\"\\u2a37\",\"otimes\":\"\\u2297\",\"Ouml\":\"\\xd6\",\"ouml\":\"\\xf6\",\"ovbar\":\"\\u233d\",\"OverBar\":\"\\u203e\",\"OverBrace\":\"\\u23de\",\"OverBracket\":\"\\u23b4\",\"OverParenthesis\":\"\\u23dc\",\"para\":\"\\xb6\",\"parallel\":\"\\u2225\",\"par\":\"\\u2225\",\"parsim\":\"\\u2af3\",\"parsl\":\"\\u2afd\",\"part\":\"\\u2202\",\"PartialD\":\"\\u2202\",\"Pcy\":\"\\u041f\",\"pcy\":\"\\u043f\",\"percnt\":\"%\",\"period\":\".\",\"permil\":\"\\u2030\",\"perp\":\"\\u22a5\",\"pertenk\":\"\\u2031\",\"Pfr\":\"\\ud835\\udd13\",\"pfr\":\"\\ud835\\udd2d\",\"Phi\":\"\\u03a6\",\"phi\":\"\\u03c6\",\"phiv\":\"\\u03d5\",\"phmmat\":\"\\u2133\",\"phone\":\"\\u260e\",\"Pi\":\"\\u03a0\",\"pi\":\"\\u03c0\",\"pitchfork\":\"\\u22d4\",\"piv\":\"\\u03d6\",\"planck\":\"\\u210f\",\"planckh\":\"\\u210e\",\"plankv\":\"\\u210f\",\"plusacir\":\"\\u2a23\",\"plusb\":\"\\u229e\",\"pluscir\":\"\\u2a22\",\"plus\":\"+\",\"plusdo\":\"\\u2214\",\"plusdu\":\"\\u2a25\",\"pluse\":\"\\u2a72\",\"PlusMinus\":\"\\xb1\",\"plusmn\":\"\\xb1\",\"plussim\":\"\\u2a26\",\"plustwo\":\"\\u2a27\",\"pm\":\"\\xb1\",\"Poincareplane\":\"\\u210c\",\"pointint\":\"\\u2a15\",\"popf\":\"\\ud835\\udd61\",\"Popf\":\"\\u2119\",\"pound\":\"\\xa3\",\"prap\":\"\\u2ab7\",\"Pr\":\"\\u2abb\",\"pr\":\"\\u227a\",\"prcue\":\"\\u227c\",\"precapprox\":\"\\u2ab7\",\"prec\":\"\\u227a\",\"preccurlyeq\":\"\\u227c\",\"Precedes\":\"\\u227a\",\"PrecedesEqual\":\"\\u2aaf\",\"PrecedesSlantEqual\":\"\\u227c\",\"PrecedesTilde\":\"\\u227e\",\"preceq\":\"\\u2aaf\",\"precnapprox\":\"\\u2ab9\",\"precneqq\":\"\\u2ab5\",\"precnsim\":\"\\u22e8\",\"pre\":\"\\u2aaf\",\"prE\":\"\\u2ab3\",\"precsim\":\"\\u227e\",\"prime\":\"\\u2032\",\"Prime\":\"\\u2033\",\"primes\":\"\\u2119\",\"prnap\":\"\\u2ab9\",\"prnE\":\"\\u2ab5\",\"prnsim\":\"\\u22e8\",\"prod\":\"\\u220f\",\"Product\":\"\\u220f\",\"profalar\":\"\\u232e\",\"profline\":\"\\u2312\",\"profsurf\":\"\\u2313\",\"prop\":\"\\u221d\",\"Proportional\":\"\\u221d\",\"Proportion\":\"\\u2237\",\"propto\":\"\\u221d\",\"prsim\":\"\\u227e\",\"prurel\":\"\\u22b0\",\"Pscr\":\"\\ud835\\udcab\",\"pscr\":\"\\ud835\\udcc5\",\"Psi\":\"\\u03a8\",\"psi\":\"\\u03c8\",\"puncsp\":\"\\u2008\",\"Qfr\":\"\\ud835\\udd14\",\"qfr\":\"\\ud835\\udd2e\",\"qint\":\"\\u2a0c\",\"qopf\":\"\\ud835\\udd62\",\"Qopf\":\"\\u211a\",\"qprime\":\"\\u2057\",\"Qscr\":\"\\ud835\\udcac\",\"qscr\":\"\\ud835\\udcc6\",\"quaternions\":\"\\u210d\",\"quatint\":\"\\u2a16\",\"quest\":\"?\",\"questeq\":\"\\u225f\",\"quot\":\"\\\\\"\",\"QUOT\":\"\\\\\"\",\"rAarr\":\"\\u21db\",\"race\":\"\\u223d\\u0331\",\"Racute\":\"\\u0154\",\"racute\":\"\\u0155\",\"radic\":\"\\u221a\",\"raemptyv\":\"\\u29b3\",\"rang\":\"\\u27e9\",\"Rang\":\"\\u27eb\",\"rangd\":\"\\u2992\",\"range\":\"\\u29a5\",\"rangle\":\"\\u27e9\",\"raquo\":\"\\xbb\",\"rarrap\":\"\\u2975\",\"rarrb\":\"\\u21e5\",\"rarrbfs\":\"\\u2920\",\"rarrc\":\"\\u2933\",\"rarr\":\"\\u2192\",\"Rarr\":\"\\u21a0\",\"rArr\":\"\\u21d2\",\"rarrfs\":\"\\u291e\",\"rarrhk\":\"\\u21aa\",\"rarrlp\":\"\\u21ac\",\"rarrpl\":\"\\u2945\",\"rarrsim\":\"\\u2974\",\"Rarrtl\":\"\\u2916\",\"rarrtl\":\"\\u21a3\",\"rarrw\":\"\\u219d\",\"ratail\":\"\\u291a\",\"rAtail\":\"\\u291c\",\"ratio\":\"\\u2236\",\"rationals\":\"\\u211a\",\"rbarr\":\"\\u290d\",\"rBarr\":\"\\u290f\",\"RBarr\":\"\\u2910\",\"rbbrk\":\"\\u2773\",\"rbrace\":\"}\",\"rbrack\":\"]\",\"rbrke\":\"\\u298c\",\"rbrksld\":\"\\u298e\",\"rbrkslu\":\"\\u2990\",\"Rcaron\":\"\\u0158\",\"rcaron\":\"\\u0159\",\"Rcedil\":\"\\u0156\",\"rcedil\":\"\\u0157\",\"rceil\":\"\\u2309\",\"rcub\":\"}\",\"Rcy\":\"\\u0420\",\"rcy\":\"\\u0440\",\"rdca\":\"\\u2937\",\"rdldhar\":\"\\u2969\",\"rdquo\":\"\\u201d\",\"rdquor\":\"\\u201d\",\"rdsh\":\"\\u21b3\",\"real\":\"\\u211c\",\"realine\":\"\\u211b\",\"realpart\":\"\\u211c\",\"reals\":\"\\u211d\",\"Re\":\"\\u211c\",\"rect\":\"\\u25ad\",\"reg\":\"\\xae\",\"REG\":\"\\xae\",\"ReverseElement\":\"\\u220b\",\"ReverseEquilibrium\":\"\\u21cb\",\"ReverseUpEquilibrium\":\"\\u296f\",\"rfisht\":\"\\u297d\",\"rfloor\":\"\\u230b\",\"rfr\":\"\\ud835\\udd2f\",\"Rfr\":\"\\u211c\",\"rHar\":\"\\u2964\",\"rhard\":\"\\u21c1\",\"rharu\":\"\\u21c0\",\"rharul\":\"\\u296c\",\"Rho\":\"\\u03a1\",\"rho\":\"\\u03c1\",\"rhov\":\"\\u03f1\",\"RightAngleBracket\":\"\\u27e9\",\"RightArrowBar\":\"\\u21e5\",\"rightarrow\":\"\\u2192\",\"RightArrow\":\"\\u2192\",\"Rightarrow\":\"\\u21d2\",\"RightArrowLeftArrow\":\"\\u21c4\",\"rightarrowtail\":\"\\u21a3\",\"RightCeiling\":\"\\u2309\",\"RightDoubleBracket\":\"\\u27e7\",\"RightDownTeeVector\":\"\\u295d\",\"RightDownVectorBar\":\"\\u2955\",\"RightDownVector\":\"\\u21c2\",\"RightFloor\":\"\\u230b\",\"rightharpoondown\":\"\\u21c1\",\"rightharpoonup\":\"\\u21c0\",\"rightleftarrows\":\"\\u21c4\",\"rightleftharpoons\":\"\\u21cc\",\"rightrightarrows\":\"\\u21c9\",\"rightsquigarrow\":\"\\u219d\",\"RightTeeArrow\":\"\\u21a6\",\"RightTee\":\"\\u22a2\",\"RightTeeVector\":\"\\u295b\",\"rightthreetimes\":\"\\u22cc\",\"RightTriangleBar\":\"\\u29d0\",\"RightTriangle\":\"\\u22b3\",\"RightTriangleEqual\":\"\\u22b5\",\"RightUpDownVector\":\"\\u294f\",\"RightUpTeeVector\":\"\\u295c\",\"RightUpVectorBar\":\"\\u2954\",\"RightUpVector\":\"\\u21be\",\"RightVectorBar\":\"\\u2953\",\"RightVector\":\"\\u21c0\",\"ring\":\"\\u02da\",\"risingdotseq\":\"\\u2253\",\"rlarr\":\"\\u21c4\",\"rlhar\":\"\\u21cc\",\"rlm\":\"\\u200f\",\"rmoustache\":\"\\u23b1\",\"rmoust\":\"\\u23b1\",\"rnmid\":\"\\u2aee\",\"roang\":\"\\u27ed\",\"roarr\":\"\\u21fe\",\"robrk\":\"\\u27e7\",\"ropar\":\"\\u2986\",\"ropf\":\"\\ud835\\udd63\",\"Ropf\":\"\\u211d\",\"roplus\":\"\\u2a2e\",\"rotimes\":\"\\u2a35\",\"RoundImplies\":\"\\u2970\",\"rpar\":\")\",\"rpargt\":\"\\u2994\",\"rppolint\":\"\\u2a12\",\"rrarr\":\"\\u21c9\",\"Rrightarrow\":\"\\u21db\",\"rsaquo\":\"\\u203a\",\"rscr\":\"\\ud835\\udcc7\",\"Rscr\":\"\\u211b\",\"rsh\":\"\\u21b1\",\"Rsh\":\"\\u21b1\",\"rsqb\":\"]\",\"rsquo\":\"\\u2019\",\"rsquor\":\"\\u2019\",\"rthree\":\"\\u22cc\",\"rtimes\":\"\\u22ca\",\"rtri\":\"\\u25b9\",\"rtrie\":\"\\u22b5\",\"rtrif\":\"\\u25b8\",\"rtriltri\":\"\\u29ce\",\"RuleDelayed\":\"\\u29f4\",\"ruluhar\":\"\\u2968\",\"rx\":\"\\u211e\",\"Sacute\":\"\\u015a\",\"sacute\":\"\\u015b\",\"sbquo\":\"\\u201a\",\"scap\":\"\\u2ab8\",\"Scaron\":\"\\u0160\",\"scaron\":\"\\u0161\",\"Sc\":\"\\u2abc\",\"sc\":\"\\u227b\",\"sccue\":\"\\u227d\",\"sce\":\"\\u2ab0\",\"scE\":\"\\u2ab4\",\"Scedil\":\"\\u015e\",\"scedil\":\"\\u015f\",\"Scirc\":\"\\u015c\",\"scirc\":\"\\u015d\",\"scnap\":\"\\u2aba\",\"scnE\":\"\\u2ab6\",\"scnsim\":\"\\u22e9\",\"scpolint\":\"\\u2a13\",\"scsim\":\"\\u227f\",\"Scy\":\"\\u0421\",\"scy\":\"\\u0441\",\"sdotb\":\"\\u22a1\",\"sdot\":\"\\u22c5\",\"sdote\":\"\\u2a66\",\"searhk\":\"\\u2925\",\"searr\":\"\\u2198\",\"seArr\":\"\\u21d8\",\"searrow\":\"\\u2198\",\"sect\":\"\\xa7\",\"semi\":\";\",\"seswar\":\"\\u2929\",\"setminus\":\"\\u2216\",\"setmn\":\"\\u2216\",\"sext\":\"\\u2736\",\"Sfr\":\"\\ud835\\udd16\",\"sfr\":\"\\ud835\\udd30\",\"sfrown\":\"\\u2322\",\"sharp\":\"\\u266f\",\"SHCHcy\":\"\\u0429\",\"shchcy\":\"\\u0449\",\"SHcy\":\"\\u0428\",\"shcy\":\"\\u0448\",\"ShortDownArrow\":\"\\u2193\",\"ShortLeftArrow\":\"\\u2190\",\"shortmid\":\"\\u2223\",\"shortparallel\":\"\\u2225\",\"ShortRightArrow\":\"\\u2192\",\"ShortUpArrow\":\"\\u2191\",\"shy\":\"\\xad\",\"Sigma\":\"\\u03a3\",\"sigma\":\"\\u03c3\",\"sigmaf\":\"\\u03c2\",\"sigmav\":\"\\u03c2\",\"sim\":\"\\u223c\",\"simdot\":\"\\u2a6a\",\"sime\":\"\\u2243\",\"simeq\":\"\\u2243\",\"simg\":\"\\u2a9e\",\"simgE\":\"\\u2aa0\",\"siml\":\"\\u2a9d\",\"simlE\":\"\\u2a9f\",\"simne\":\"\\u2246\",\"simplus\":\"\\u2a24\",\"simrarr\":\"\\u2972\",\"slarr\":\"\\u2190\",\"SmallCircle\":\"\\u2218\",\"smallsetminus\":\"\\u2216\",\"smashp\":\"\\u2a33\",\"smeparsl\":\"\\u29e4\",\"smid\":\"\\u2223\",\"smile\":\"\\u2323\",\"smt\":\"\\u2aaa\",\"smte\":\"\\u2aac\",\"smtes\":\"\\u2aac\\ufe00\",\"SOFTcy\":\"\\u042c\",\"softcy\":\"\\u044c\",\"solbar\":\"\\u233f\",\"solb\":\"\\u29c4\",\"sol\":\"/\",\"Sopf\":\"\\ud835\\udd4a\",\"sopf\":\"\\ud835\\udd64\",\"spades\":\"\\u2660\",\"spadesuit\":\"\\u2660\",\"spar\":\"\\u2225\",\"sqcap\":\"\\u2293\",\"sqcaps\":\"\\u2293\\ufe00\",\"sqcup\":\"\\u2294\",\"sqcups\":\"\\u2294\\ufe00\",\"Sqrt\":\"\\u221a\",\"sqsub\":\"\\u228f\",\"sqsube\":\"\\u2291\",\"sqsubset\":\"\\u228f\",\"sqsubseteq\":\"\\u2291\",\"sqsup\":\"\\u2290\",\"sqsupe\":\"\\u2292\",\"sqsupset\":\"\\u2290\",\"sqsupseteq\":\"\\u2292\",\"square\":\"\\u25a1\",\"Square\":\"\\u25a1\",\"SquareIntersection\":\"\\u2293\",\"SquareSubset\":\"\\u228f\",\"SquareSubsetEqual\":\"\\u2291\",\"SquareSuperset\":\"\\u2290\",\"SquareSupersetEqual\":\"\\u2292\",\"SquareUnion\":\"\\u2294\",\"squarf\":\"\\u25aa\",\"squ\":\"\\u25a1\",\"squf\":\"\\u25aa\",\"srarr\":\"\\u2192\",\"Sscr\":\"\\ud835\\udcae\",\"sscr\":\"\\ud835\\udcc8\",\"ssetmn\":\"\\u2216\",\"ssmile\":\"\\u2323\",\"sstarf\":\"\\u22c6\",\"Star\":\"\\u22c6\",\"star\":\"\\u2606\",\"starf\":\"\\u2605\",\"straightepsilon\":\"\\u03f5\",\"straightphi\":\"\\u03d5\",\"strns\":\"\\xaf\",\"sub\":\"\\u2282\",\"Sub\":\"\\u22d0\",\"subdot\":\"\\u2abd\",\"subE\":\"\\u2ac5\",\"sube\":\"\\u2286\",\"subedot\":\"\\u2ac3\",\"submult\":\"\\u2ac1\",\"subnE\":\"\\u2acb\",\"subne\":\"\\u228a\",\"subplus\":\"\\u2abf\",\"subrarr\":\"\\u2979\",\"subset\":\"\\u2282\",\"Subset\":\"\\u22d0\",\"subseteq\":\"\\u2286\",\"subseteqq\":\"\\u2ac5\",\"SubsetEqual\":\"\\u2286\",\"subsetneq\":\"\\u228a\",\"subsetneqq\":\"\\u2acb\",\"subsim\":\"\\u2ac7\",\"subsub\":\"\\u2ad5\",\"subsup\":\"\\u2ad3\",\"succapprox\":\"\\u2ab8\",\"succ\":\"\\u227b\",\"succcurlyeq\":\"\\u227d\",\"Succeeds\":\"\\u227b\",\"SucceedsEqual\":\"\\u2ab0\",\"SucceedsSlantEqual\":\"\\u227d\",\"SucceedsTilde\":\"\\u227f\",\"succeq\":\"\\u2ab0\",\"succnapprox\":\"\\u2aba\",\"succneqq\":\"\\u2ab6\",\"succnsim\":\"\\u22e9\",\"succsim\":\"\\u227f\",\"SuchThat\":\"\\u220b\",\"sum\":\"\\u2211\",\"Sum\":\"\\u2211\",\"sung\":\"\\u266a\",\"sup1\":\"\\xb9\",\"sup2\":\"\\xb2\",\"sup3\":\"\\xb3\",\"sup\":\"\\u2283\",\"Sup\":\"\\u22d1\",\"supdot\":\"\\u2abe\",\"supdsub\":\"\\u2ad8\",\"supE\":\"\\u2ac6\",\"supe\":\"\\u2287\",\"supedot\":\"\\u2ac4\",\"Superset\":\"\\u2283\",\"SupersetEqual\":\"\\u2287\",\"suphsol\":\"\\u27c9\",\"suphsub\":\"\\u2ad7\",\"suplarr\":\"\\u297b\",\"supmult\":\"\\u2ac2\",\"supnE\":\"\\u2acc\",\"supne\":\"\\u228b\",\"supplus\":\"\\u2ac0\",\"supset\":\"\\u2283\",\"Supset\":\"\\u22d1\",\"supseteq\":\"\\u2287\",\"supseteqq\":\"\\u2ac6\",\"supsetneq\":\"\\u228b\",\"supsetneqq\":\"\\u2acc\",\"supsim\":\"\\u2ac8\",\"supsub\":\"\\u2ad4\",\"supsup\":\"\\u2ad6\",\"swarhk\":\"\\u2926\",\"swarr\":\"\\u2199\",\"swArr\":\"\\u21d9\",\"swarrow\":\"\\u2199\",\"swnwar\":\"\\u292a\",\"szlig\":\"\\xdf\",\"Tab\":\"\\\\t\",\"target\":\"\\u2316\",\"Tau\":\"\\u03a4\",\"tau\":\"\\u03c4\",\"tbrk\":\"\\u23b4\",\"Tcaron\":\"\\u0164\",\"tcaron\":\"\\u0165\",\"Tcedil\":\"\\u0162\",\"tcedil\":\"\\u0163\",\"Tcy\":\"\\u0422\",\"tcy\":\"\\u0442\",\"tdot\":\"\\u20db\",\"telrec\":\"\\u2315\",\"Tfr\":\"\\ud835\\udd17\",\"tfr\":\"\\ud835\\udd31\",\"there4\":\"\\u2234\",\"therefore\":\"\\u2234\",\"Therefore\":\"\\u2234\",\"Theta\":\"\\u0398\",\"theta\":\"\\u03b8\",\"thetasym\":\"\\u03d1\",\"thetav\":\"\\u03d1\",\"thickapprox\":\"\\u2248\",\"thicksim\":\"\\u223c\",\"ThickSpace\":\"\\u205f\\u200a\",\"ThinSpace\":\"\\u2009\",\"thinsp\":\"\\u2009\",\"thkap\":\"\\u2248\",\"thksim\":\"\\u223c\",\"THORN\":\"\\xde\",\"thorn\":\"\\xfe\",\"tilde\":\"\\u02dc\",\"Tilde\":\"\\u223c\",\"TildeEqual\":\"\\u2243\",\"TildeFullEqual\":\"\\u2245\",\"TildeTilde\":\"\\u2248\",\"timesbar\":\"\\u2a31\",\"timesb\":\"\\u22a0\",\"times\":\"\\xd7\",\"timesd\":\"\\u2a30\",\"tint\":\"\\u222d\",\"toea\":\"\\u2928\",\"topbot\":\"\\u2336\",\"topcir\":\"\\u2af1\",\"top\":\"\\u22a4\",\"Topf\":\"\\ud835\\udd4b\",\"topf\":\"\\ud835\\udd65\",\"topfork\":\"\\u2ada\",\"tosa\":\"\\u2929\",\"tprime\":\"\\u2034\",\"trade\":\"\\u2122\",\"TRADE\":\"\\u2122\",\"triangle\":\"\\u25b5\",\"triangledown\":\"\\u25bf\",\"triangleleft\":\"\\u25c3\",\"trianglelefteq\":\"\\u22b4\",\"triangleq\":\"\\u225c\",\"triangleright\":\"\\u25b9\",\"trianglerighteq\":\"\\u22b5\",\"tridot\":\"\\u25ec\",\"trie\":\"\\u225c\",\"triminus\":\"\\u2a3a\",\"TripleDot\":\"\\u20db\",\"triplus\":\"\\u2a39\",\"trisb\":\"\\u29cd\",\"tritime\":\"\\u2a3b\",\"trpezium\":\"\\u23e2\",\"Tscr\":\"\\ud835\\udcaf\",\"tscr\":\"\\ud835\\udcc9\",\"TScy\":\"\\u0426\",\"tscy\":\"\\u0446\",\"TSHcy\":\"\\u040b\",\"tshcy\":\"\\u045b\",\"Tstrok\":\"\\u0166\",\"tstrok\":\"\\u0167\",\"twixt\":\"\\u226c\",\"twoheadleftarrow\":\"\\u219e\",\"twoheadrightarrow\":\"\\u21a0\",\"Uacute\":\"\\xda\",\"uacute\":\"\\xfa\",\"uarr\":\"\\u2191\",\"Uarr\":\"\\u219f\",\"uArr\":\"\\u21d1\",\"Uarrocir\":\"\\u2949\",\"Ubrcy\":\"\\u040e\",\"ubrcy\":\"\\u045e\",\"Ubreve\":\"\\u016c\",\"ubreve\":\"\\u016d\",\"Ucirc\":\"\\xdb\",\"ucirc\":\"\\xfb\",\"Ucy\":\"\\u0423\",\"ucy\":\"\\u0443\",\"udarr\":\"\\u21c5\",\"Udblac\":\"\\u0170\",\"udblac\":\"\\u0171\",\"udhar\":\"\\u296e\",\"ufisht\":\"\\u297e\",\"Ufr\":\"\\ud835\\udd18\",\"ufr\":\"\\ud835\\udd32\",\"Ugrave\":\"\\xd9\",\"ugrave\":\"\\xf9\",\"uHar\":\"\\u2963\",\"uharl\":\"\\u21bf\",\"uharr\":\"\\u21be\",\"uhblk\":\"\\u2580\",\"ulcorn\":\"\\u231c\",\"ulcorner\":\"\\u231c\",\"ulcrop\":\"\\u230f\",\"ultri\":\"\\u25f8\",\"Umacr\":\"\\u016a\",\"umacr\":\"\\u016b\",\"uml\":\"\\xa8\",\"UnderBar\":\"_\",\"UnderBrace\":\"\\u23df\",\"UnderBracket\":\"\\u23b5\",\"UnderParenthesis\":\"\\u23dd\",\"Union\":\"\\u22c3\",\"UnionPlus\":\"\\u228e\",\"Uogon\":\"\\u0172\",\"uogon\":\"\\u0173\",\"Uopf\":\"\\ud835\\udd4c\",\"uopf\":\"\\ud835\\udd66\",\"UpArrowBar\":\"\\u2912\",\"uparrow\":\"\\u2191\",\"UpArrow\":\"\\u2191\",\"Uparrow\":\"\\u21d1\",\"UpArrowDownArrow\":\"\\u21c5\",\"updownarrow\":\"\\u2195\",\"UpDownArrow\":\"\\u2195\",\"Updownarrow\":\"\\u21d5\",\"UpEquilibrium\":\"\\u296e\",\"upharpoonleft\":\"\\u21bf\",\"upharpoonright\":\"\\u21be\",\"uplus\":\"\\u228e\",\"UpperLeftArrow\":\"\\u2196\",\"UpperRightArrow\":\"\\u2197\",\"upsi\":\"\\u03c5\",\"Upsi\":\"\\u03d2\",\"upsih\":\"\\u03d2\",\"Upsilon\":\"\\u03a5\",\"upsilon\":\"\\u03c5\",\"UpTeeArrow\":\"\\u21a5\",\"UpTee\":\"\\u22a5\",\"upuparrows\":\"\\u21c8\",\"urcorn\":\"\\u231d\",\"urcorner\":\"\\u231d\",\"urcrop\":\"\\u230e\",\"Uring\":\"\\u016e\",\"uring\":\"\\u016f\",\"urtri\":\"\\u25f9\",\"Uscr\":\"\\ud835\\udcb0\",\"uscr\":\"\\ud835\\udcca\",\"utdot\":\"\\u22f0\",\"Utilde\":\"\\u0168\",\"utilde\":\"\\u0169\",\"utri\":\"\\u25b5\",\"utrif\":\"\\u25b4\",\"uuarr\":\"\\u21c8\",\"Uuml\":\"\\xdc\",\"uuml\":\"\\xfc\",\"uwangle\":\"\\u29a7\",\"vangrt\":\"\\u299c\",\"varepsilon\":\"\\u03f5\",\"varkappa\":\"\\u03f0\",\"varnothing\":\"\\u2205\",\"varphi\":\"\\u03d5\",\"varpi\":\"\\u03d6\",\"varpropto\":\"\\u221d\",\"varr\":\"\\u2195\",\"vArr\":\"\\u21d5\",\"varrho\":\"\\u03f1\",\"varsigma\":\"\\u03c2\",\"varsubsetneq\":\"\\u228a\\ufe00\",\"varsubsetneqq\":\"\\u2acb\\ufe00\",\"varsupsetneq\":\"\\u228b\\ufe00\",\"varsupsetneqq\":\"\\u2acc\\ufe00\",\"vartheta\":\"\\u03d1\",\"vartriangleleft\":\"\\u22b2\",\"vartriangleright\":\"\\u22b3\",\"vBar\":\"\\u2ae8\",\"Vbar\":\"\\u2aeb\",\"vBarv\":\"\\u2ae9\",\"Vcy\":\"\\u0412\",\"vcy\":\"\\u0432\",\"vdash\":\"\\u22a2\",\"vDash\":\"\\u22a8\",\"Vdash\":\"\\u22a9\",\"VDash\":\"\\u22ab\",\"Vdashl\":\"\\u2ae6\",\"veebar\":\"\\u22bb\",\"vee\":\"\\u2228\",\"Vee\":\"\\u22c1\",\"veeeq\":\"\\u225a\",\"vellip\":\"\\u22ee\",\"verbar\":\"|\",\"Verbar\":\"\\u2016\",\"vert\":\"|\",\"Vert\":\"\\u2016\",\"VerticalBar\":\"\\u2223\",\"VerticalLine\":\"|\",\"VerticalSeparator\":\"\\u2758\",\"VerticalTilde\":\"\\u2240\",\"VeryThinSpace\":\"\\u200a\",\"Vfr\":\"\\ud835\\udd19\",\"vfr\":\"\\ud835\\udd33\",\"vltri\":\"\\u22b2\",\"vnsub\":\"\\u2282\\u20d2\",\"vnsup\":\"\\u2283\\u20d2\",\"Vopf\":\"\\ud835\\udd4d\",\"vopf\":\"\\ud835\\udd67\",\"vprop\":\"\\u221d\",\"vrtri\":\"\\u22b3\",\"Vscr\":\"\\ud835\\udcb1\",\"vscr\":\"\\ud835\\udccb\",\"vsubnE\":\"\\u2acb\\ufe00\",\"vsubne\":\"\\u228a\\ufe00\",\"vsupnE\":\"\\u2acc\\ufe00\",\"vsupne\":\"\\u228b\\ufe00\",\"Vvdash\":\"\\u22aa\",\"vzigzag\":\"\\u299a\",\"Wcirc\":\"\\u0174\",\"wcirc\":\"\\u0175\",\"wedbar\":\"\\u2a5f\",\"wedge\":\"\\u2227\",\"Wedge\":\"\\u22c0\",\"wedgeq\":\"\\u2259\",\"weierp\":\"\\u2118\",\"Wfr\":\"\\ud835\\udd1a\",\"wfr\":\"\\ud835\\udd34\",\"Wopf\":\"\\ud835\\udd4e\",\"wopf\":\"\\ud835\\udd68\",\"wp\":\"\\u2118\",\"wr\":\"\\u2240\",\"wreath\":\"\\u2240\",\"Wscr\":\"\\ud835\\udcb2\",\"wscr\":\"\\ud835\\udccc\",\"xcap\":\"\\u22c2\",\"xcirc\":\"\\u25ef\",\"xcup\":\"\\u22c3\",\"xdtri\":\"\\u25bd\",\"Xfr\":\"\\ud835\\udd1b\",\"xfr\":\"\\ud835\\udd35\",\"xharr\":\"\\u27f7\",\"xhArr\":\"\\u27fa\",\"Xi\":\"\\u039e\",\"xi\":\"\\u03be\",\"xlarr\":\"\\u27f5\",\"xlArr\":\"\\u27f8\",\"xmap\":\"\\u27fc\",\"xnis\":\"\\u22fb\",\"xodot\":\"\\u2a00\",\"Xopf\":\"\\ud835\\udd4f\",\"xopf\":\"\\ud835\\udd69\",\"xoplus\":\"\\u2a01\",\"xotime\":\"\\u2a02\",\"xrarr\":\"\\u27f6\",\"xrArr\":\"\\u27f9\",\"Xscr\":\"\\ud835\\udcb3\",\"xscr\":\"\\ud835\\udccd\",\"xsqcup\":\"\\u2a06\",\"xuplus\":\"\\u2a04\",\"xutri\":\"\\u25b3\",\"xvee\":\"\\u22c1\",\"xwedge\":\"\\u22c0\",\"Yacute\":\"\\xdd\",\"yacute\":\"\\xfd\",\"YAcy\":\"\\u042f\",\"yacy\":\"\\u044f\",\"Ycirc\":\"\\u0176\",\"ycirc\":\"\\u0177\",\"Ycy\":\"\\u042b\",\"ycy\":\"\\u044b\",\"yen\":\"\\xa5\",\"Yfr\":\"\\ud835\\udd1c\",\"yfr\":\"\\ud835\\udd36\",\"YIcy\":\"\\u0407\",\"yicy\":\"\\u0457\",\"Yopf\":\"\\ud835\\udd50\",\"yopf\":\"\\ud835\\udd6a\",\"Yscr\":\"\\ud835\\udcb4\",\"yscr\":\"\\ud835\\udcce\",\"YUcy\":\"\\u042e\",\"yucy\":\"\\u044e\",\"yuml\":\"\\xff\",\"Yuml\":\"\\u0178\",\"Zacute\":\"\\u0179\",\"zacute\":\"\\u017a\",\"Zcaron\":\"\\u017d\",\"zcaron\":\"\\u017e\",\"Zcy\":\"\\u0417\",\"zcy\":\"\\u0437\",\"Zdot\":\"\\u017b\",\"zdot\":\"\\u017c\",\"zeetrf\":\"\\u2128\",\"ZeroWidthSpace\":\"\\u200b\",\"Zeta\":\"\\u0396\",\"zeta\":\"\\u03b6\",\"zfr\":\"\\ud835\\udd37\",\"Zfr\":\"\\u2128\",\"ZHcy\":\"\\u0416\",\"zhcy\":\"\\u0436\",\"zigrarr\":\"\\u21dd\",\"zopf\":\"\\ud835\\udd6b\",\"Zopf\":\"\\u2124\",\"Zscr\":\"\\ud835\\udcb5\",\"zscr\":\"\\ud835\\udccf\",\"zwj\":\"\\u200d\",\"zwnj\":\"\\u200c\"}')},1819:function(e,t,r){\"use strict\";var n={};function s(e,t,r){var o,i,a,c,u,l=\"\";for(\"string\"!==typeof t&&(r=t,t=s.defaultChars),\"undefined\"===typeof r&&(r=!0),u=function(e){var t,r,s=n[e];if(s)return s;for(s=n[e]=[],t=0;t<128;t++)r=String.fromCharCode(t),/^[0-9a-z]$/i.test(r)?s.push(r):s.push(\"%\"+(\"0\"+t.toString(16).toUpperCase()).slice(-2));for(t=0;t<e.length;t++)s[e.charCodeAt(t)]=e[t];return s}(t),o=0,i=e.length;o<i;o++)if(a=e.charCodeAt(o),r&&37===a&&o+2<i&&/^[0-9a-f]{2}$/i.test(e.slice(o+1,o+3)))l+=e.slice(o,o+3),o+=2;else if(a<128)l+=u[a];else if(a>=55296&&a<=57343){if(a>=55296&&a<=56319&&o+1<i&&(c=e.charCodeAt(o+1))>=56320&&c<=57343){l+=encodeURIComponent(e[o]+e[o+1]),o++;continue}l+=\"%EF%BF%BD\"}else l+=encodeURIComponent(e[o]);return l}s.defaultChars=\";/?:@&=+$,-_.!~*'()#\",s.componentChars=\"-_.!~*'()\",e.exports=s},1820:function(e,t,r){\"use strict\";var n={};function s(e,t){var r;return\"string\"!==typeof t&&(t=s.defaultChars),r=function(e){var t,r,s=n[e];if(s)return s;for(s=n[e]=[],t=0;t<128;t++)r=String.fromCharCode(t),s.push(r);for(t=0;t<e.length;t++)s[r=e.charCodeAt(t)]=\"%\"+(\"0\"+r.toString(16).toUpperCase()).slice(-2);return s}(t),e.replace(/(%[a-f0-9]{2})+/gi,(function(e){var t,n,s,o,i,a,c,u=\"\";for(t=0,n=e.length;t<n;t+=3)(s=parseInt(e.slice(t+1,t+3),16))<128?u+=r[s]:192===(224&s)&&t+3<n&&128===(192&(o=parseInt(e.slice(t+4,t+6),16)))?(u+=(c=s<<6&1984|63&o)<128?\"\\ufffd\\ufffd\":String.fromCharCode(c),t+=3):224===(240&s)&&t+6<n&&(o=parseInt(e.slice(t+4,t+6),16),i=parseInt(e.slice(t+7,t+9),16),128===(192&o)&&128===(192&i))?(u+=(c=s<<12&61440|o<<6&4032|63&i)<2048||c>=55296&&c<=57343?\"\\ufffd\\ufffd\\ufffd\":String.fromCharCode(c),t+=6):240===(248&s)&&t+9<n&&(o=parseInt(e.slice(t+4,t+6),16),i=parseInt(e.slice(t+7,t+9),16),a=parseInt(e.slice(t+10,t+12),16),128===(192&o)&&128===(192&i)&&128===(192&a))?((c=s<<18&1835008|o<<12&258048|i<<6&4032|63&a)<65536||c>1114111?u+=\"\\ufffd\\ufffd\\ufffd\\ufffd\":(c-=65536,u+=String.fromCharCode(55296+(c>>10),56320+(1023&c))),t+=9):u+=\"\\ufffd\";return u}))}s.defaultChars=\";/?:@&=+$,#\",s.componentChars=\"\",e.exports=s},1821:function(e,t,r){\"use strict\";e.exports=function(e){var t=\"\";return t+=e.protocol||\"\",t+=e.slashes?\"//\":\"\",t+=e.auth?e.auth+\"@\":\"\",e.hostname&&-1!==e.hostname.indexOf(\":\")?t+=\"[\"+e.hostname+\"]\":t+=e.hostname||\"\",t+=e.port?\":\"+e.port:\"\",t+=e.pathname||\"\",t+=e.search||\"\",t+=e.hash||\"\"}},1822:function(e,t,r){\"use strict\";function n(){this.protocol=null,this.slashes=null,this.auth=null,this.port=null,this.hostname=null,this.hash=null,this.search=null,this.pathname=null}var s=/^([a-z0-9.+-]+:)/i,o=/:[0-9]*$/,i=/^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,a=[\"{\",\"}\",\"|\",\"\\\\\",\"^\",\"`\"].concat([\"<\",\">\",'\"',\"`\",\" \",\"\\r\",\"\\n\",\"\\t\"]),c=[\"'\"].concat(a),u=[\"%\",\"/\",\"?\",\";\",\"#\"].concat(c),l=[\"/\",\"?\",\"#\"],p=/^[+a-z0-9A-Z_-]{0,63}$/,h=/^([+a-z0-9A-Z_-]{0,63})(.*)$/,f={javascript:!0,\"javascript:\":!0},d={http:!0,https:!0,ftp:!0,gopher:!0,file:!0,\"http:\":!0,\"https:\":!0,\"ftp:\":!0,\"gopher:\":!0,\"file:\":!0};n.prototype.parse=function(e,t){var r,n,o,a,c,m=e;if(m=m.trim(),!t&&1===e.split(\"#\").length){var g=i.exec(m);if(g)return this.pathname=g[1],g[2]&&(this.search=g[2]),this}var _=s.exec(m);if(_&&(o=(_=_[0]).toLowerCase(),this.protocol=_,m=m.substr(_.length)),(t||_||m.match(/^\\/\\/[^@\\/]+@[^@\\/]+/))&&(!(c=\"//\"===m.substr(0,2))||_&&f[_]||(m=m.substr(2),this.slashes=!0)),!f[_]&&(c||_&&!d[_])){var k,b,v=-1;for(r=0;r<l.length;r++)-1!==(a=m.indexOf(l[r]))&&(-1===v||a<v)&&(v=a);for(-1!==(b=-1===v?m.lastIndexOf(\"@\"):m.lastIndexOf(\"@\",v))&&(k=m.slice(0,b),m=m.slice(b+1),this.auth=k),v=-1,r=0;r<u.length;r++)-1!==(a=m.indexOf(u[r]))&&(-1===v||a<v)&&(v=a);-1===v&&(v=m.length),\":\"===m[v-1]&&v--;var y=m.slice(0,v);m=m.slice(v),this.parseHost(y),this.hostname=this.hostname||\"\";var C=\"[\"===this.hostname[0]&&\"]\"===this.hostname[this.hostname.length-1];if(!C){var x=this.hostname.split(/\\./);for(r=0,n=x.length;r<n;r++){var A=x[r];if(A&&!A.match(p)){for(var w=\"\",D=0,E=A.length;D<E;D++)A.charCodeAt(D)>127?w+=\"x\":w+=A[D];if(!w.match(p)){var q=x.slice(0,r),S=x.slice(r+1),F=A.match(h);F&&(q.push(F[1]),S.unshift(F[2])),S.length&&(m=S.join(\".\")+m),this.hostname=q.join(\".\");break}}}}this.hostname.length>255&&(this.hostname=\"\"),C&&(this.hostname=this.hostname.substr(1,this.hostname.length-2))}var L=m.indexOf(\"#\");-1!==L&&(this.hash=m.substr(L),m=m.slice(0,L));var z=m.indexOf(\"?\");return-1!==z&&(this.search=m.substr(z),m=m.slice(0,z)),m&&(this.pathname=m),d[o]&&this.hostname&&!this.pathname&&(this.pathname=\"\"),this},n.prototype.parseHost=function(e){var t=o.exec(e);t&&(\":\"!==(t=t[0])&&(this.port=t.substr(1)),e=e.substr(0,e.length-t.length)),e&&(this.hostname=e)},e.exports=function(e,t){if(e&&e instanceof n)return e;var r=new n;return r.parse(e,t),r}},1823:function(e,t){e.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/},1824:function(e,t,r){\"use strict\";t.parseLinkLabel=r(1825),t.parseLinkDestination=r(1826),t.parseLinkTitle=r(1827)},1825:function(e,t,r){\"use strict\";e.exports=function(e,t,r){var n,s,o,i,a=-1,c=e.posMax,u=e.pos;for(e.pos=t+1,n=1;e.pos<c;){if(93===(o=e.src.charCodeAt(e.pos))&&0===--n){s=!0;break}if(i=e.pos,e.md.inline.skipToken(e),91===o)if(i===e.pos-1)n++;else if(r)return e.pos=u,-1}return s&&(a=e.pos),e.pos=u,a}},1826:function(e,t,r){\"use strict\";var n=r(57).unescapeAll;e.exports=function(e,t,r){var s,o,i=t,a={ok:!1,pos:0,lines:0,str:\"\"};if(60===e.charCodeAt(i)){for(i++;i<r;){if(10===(s=e.charCodeAt(i)))return a;if(60===s)return a;if(62===s)return a.pos=i+1,a.str=n(e.slice(t+1,i)),a.ok=!0,a;92===s&&i+1<r?i+=2:i++}return a}for(o=0;i<r&&32!==(s=e.charCodeAt(i))&&!(s<32||127===s);)if(92===s&&i+1<r){if(32===e.charCodeAt(i+1))break;i+=2}else{if(40===s&&++o>32)return a;if(41===s){if(0===o)break;o--}i++}return t===i||0!==o||(a.str=n(e.slice(t,i)),a.pos=i,a.ok=!0),a}},1827:function(e,t,r){\"use strict\";var n=r(57).unescapeAll;e.exports=function(e,t,r){var s,o,i=0,a=t,c={ok:!1,pos:0,lines:0,str:\"\"};if(a>=r)return c;if(34!==(o=e.charCodeAt(a))&&39!==o&&40!==o)return c;for(a++,40===o&&(o=41);a<r;){if((s=e.charCodeAt(a))===o)return c.pos=a+1,c.lines=i,c.str=n(e.slice(t+1,a)),c.ok=!0,c;if(40===s&&41===o)return c;10===s?i++:92===s&&a+1<r&&(a++,10===e.charCodeAt(a)&&i++),a++}return c}},1828:function(e,t,r){\"use strict\";var n=r(57).assign,s=r(57).unescapeAll,o=r(57).escapeHtml,i={};function a(){this.rules=n({},i)}i.code_inline=function(e,t,r,n,s){var i=e[t];return\"<code\"+s.renderAttrs(i)+\">\"+o(i.content)+\"</code>\"},i.code_block=function(e,t,r,n,s){var i=e[t];return\"<pre\"+s.renderAttrs(i)+\"><code>\"+o(e[t].content)+\"</code></pre>\\n\"},i.fence=function(e,t,r,n,i){var a,c,u,l,p,h=e[t],f=h.info?s(h.info).trim():\"\",d=\"\",m=\"\";return f&&(d=(u=f.split(/(\\s+)/g))[0],m=u.slice(2).join(\"\")),0===(a=r.highlight&&r.highlight(h.content,d,m)||o(h.content)).indexOf(\"<pre\")?a+\"\\n\":f?(c=h.attrIndex(\"class\"),l=h.attrs?h.attrs.slice():[],c<0?l.push([\"class\",r.langPrefix+d]):(l[c]=l[c].slice(),l[c][1]+=\" \"+r.langPrefix+d),p={attrs:l},\"<pre><code\"+i.renderAttrs(p)+\">\"+a+\"</code></pre>\\n\"):\"<pre><code\"+i.renderAttrs(h)+\">\"+a+\"</code></pre>\\n\"},i.image=function(e,t,r,n,s){var o=e[t];return o.attrs[o.attrIndex(\"alt\")][1]=s.renderInlineAsText(o.children,r,n),s.renderToken(e,t,r)},i.hardbreak=function(e,t,r){return r.xhtmlOut?\"<br />\\n\":\"<br>\\n\"},i.softbreak=function(e,t,r){return r.breaks?r.xhtmlOut?\"<br />\\n\":\"<br>\\n\":\"\\n\"},i.text=function(e,t){return o(e[t].content)},i.html_block=function(e,t){return e[t].content},i.html_inline=function(e,t){return e[t].content},a.prototype.renderAttrs=function(e){var t,r,n;if(!e.attrs)return\"\";for(n=\"\",t=0,r=e.attrs.length;t<r;t++)n+=\" \"+o(e.attrs[t][0])+'=\"'+o(e.attrs[t][1])+'\"';return n},a.prototype.renderToken=function(e,t,r){var n,s=\"\",o=!1,i=e[t];return i.hidden?\"\":(i.block&&-1!==i.nesting&&t&&e[t-1].hidden&&(s+=\"\\n\"),s+=(-1===i.nesting?\"</\":\"<\")+i.tag,s+=this.renderAttrs(i),0===i.nesting&&r.xhtmlOut&&(s+=\" /\"),i.block&&(o=!0,1===i.nesting&&t+1<e.length&&(\"inline\"===(n=e[t+1]).type||n.hidden||-1===n.nesting&&n.tag===i.tag)&&(o=!1)),s+=o?\">\\n\":\">\")},a.prototype.renderInline=function(e,t,r){for(var n,s=\"\",o=this.rules,i=0,a=e.length;i<a;i++)\"undefined\"!==typeof o[n=e[i].type]?s+=o[n](e,i,t,r,this):s+=this.renderToken(e,i,t);return s},a.prototype.renderInlineAsText=function(e,t,r){for(var n=\"\",s=0,o=e.length;s<o;s++)\"text\"===e[s].type?n+=e[s].content:\"image\"===e[s].type?n+=this.renderInlineAsText(e[s].children,t,r):\"softbreak\"===e[s].type&&(n+=\"\\n\");return n},a.prototype.render=function(e,t,r){var n,s,o,i=\"\",a=this.rules;for(n=0,s=e.length;n<s;n++)\"inline\"===(o=e[n].type)?i+=this.renderInline(e[n].children,t,r):\"undefined\"!==typeof a[o]?i+=a[o](e,n,t,r,this):i+=this.renderToken(e,n,t,r);return i},e.exports=a},1829:function(e,t,r){\"use strict\";var n=r(326),s=[[\"normalize\",r(1830)],[\"block\",r(1831)],[\"inline\",r(1832)],[\"linkify\",r(1833)],[\"replacements\",r(1834)],[\"smartquotes\",r(1835)],[\"text_join\",r(1836)]];function o(){this.ruler=new n;for(var e=0;e<s.length;e++)this.ruler.push(s[e][0],s[e][1])}o.prototype.process=function(e){var t,r,n;for(t=0,r=(n=this.ruler.getRules(\"\")).length;t<r;t++)n[t](e)},o.prototype.State=r(1837),e.exports=o},1830:function(e,t,r){\"use strict\";var n=/\\r\\n?|\\n/g,s=/\\0/g;e.exports=function(e){var t;t=(t=e.src.replace(n,\"\\n\")).replace(s,\"\\ufffd\"),e.src=t}},1831:function(e,t,r){\"use strict\";e.exports=function(e){var t;e.inlineMode?((t=new e.Token(\"inline\",\"\",0)).content=e.src,t.map=[0,1],t.children=[],e.tokens.push(t)):e.md.block.parse(e.src,e.md,e.env,e.tokens)}},1832:function(e,t,r){\"use strict\";e.exports=function(e){var t,r,n,s=e.tokens;for(r=0,n=s.length;r<n;r++)\"inline\"===(t=s[r]).type&&e.md.inline.parse(t.content,e.md,e.env,t.children)}},1833:function(e,t,r){\"use strict\";var n=r(57).arrayReplaceAt;function s(e){return/^<\\/a\\s*>/i.test(e)}e.exports=function(e){var t,r,o,i,a,c,u,l,p,h,f,d,m,g,_,k,b,v,y=e.tokens;if(e.md.options.linkify)for(r=0,o=y.length;r<o;r++)if(\"inline\"===y[r].type&&e.md.linkify.pretest(y[r].content))for(m=0,t=(i=y[r].children).length-1;t>=0;t--)if(\"link_close\"!==(c=i[t]).type){if(\"html_inline\"===c.type&&(v=c.content,/^<a[>\\s]/i.test(v)&&m>0&&m--,s(c.content)&&m++),!(m>0)&&\"text\"===c.type&&e.md.linkify.test(c.content)){for(p=c.content,b=e.md.linkify.match(p),u=[],d=c.level,f=0,b.length>0&&0===b[0].index&&t>0&&\"text_special\"===i[t-1].type&&(b=b.slice(1)),l=0;l<b.length;l++)g=b[l].url,_=e.md.normalizeLink(g),e.md.validateLink(_)&&(k=b[l].text,k=b[l].schema?\"mailto:\"!==b[l].schema||/^mailto:/i.test(k)?e.md.normalizeLinkText(k):e.md.normalizeLinkText(\"mailto:\"+k).replace(/^mailto:/,\"\"):e.md.normalizeLinkText(\"http://\"+k).replace(/^http:\\/\\//,\"\"),(h=b[l].index)>f&&((a=new e.Token(\"text\",\"\",0)).content=p.slice(f,h),a.level=d,u.push(a)),(a=new e.Token(\"link_open\",\"a\",1)).attrs=[[\"href\",_]],a.level=d++,a.markup=\"linkify\",a.info=\"auto\",u.push(a),(a=new e.Token(\"text\",\"\",0)).content=k,a.level=d,u.push(a),(a=new e.Token(\"link_close\",\"a\",-1)).level=--d,a.markup=\"linkify\",a.info=\"auto\",u.push(a),f=b[l].lastIndex);f<p.length&&((a=new e.Token(\"text\",\"\",0)).content=p.slice(f),a.level=d,u.push(a)),y[r].children=i=n(i,t,u)}}else for(t--;i[t].level!==c.level&&\"link_open\"!==i[t].type;)t--}},1834:function(e,t,r){\"use strict\";var n=/\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/,s=/\\((c|tm|r)\\)/i,o=/\\((c|tm|r)\\)/gi,i={c:\"\\xa9\",r:\"\\xae\",tm:\"\\u2122\"};function a(e,t){return i[t.toLowerCase()]}function c(e){var t,r,n=0;for(t=e.length-1;t>=0;t--)\"text\"!==(r=e[t]).type||n||(r.content=r.content.replace(o,a)),\"link_open\"===r.type&&\"auto\"===r.info&&n--,\"link_close\"===r.type&&\"auto\"===r.info&&n++}function u(e){var t,r,s=0;for(t=e.length-1;t>=0;t--)\"text\"!==(r=e[t]).type||s||n.test(r.content)&&(r.content=r.content.replace(/\\+-/g,\"\\xb1\").replace(/\\.{2,}/g,\"\\u2026\").replace(/([?!])\\u2026/g,\"$1..\").replace(/([?!]){4,}/g,\"$1$1$1\").replace(/,{2,}/g,\",\").replace(/(^|[^-])---(?=[^-]|$)/gm,\"$1\\u2014\").replace(/(^|\\s)--(?=\\s|$)/gm,\"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/gm,\"$1\\u2013\")),\"link_open\"===r.type&&\"auto\"===r.info&&s--,\"link_close\"===r.type&&\"auto\"===r.info&&s++}e.exports=function(e){var t;if(e.md.options.typographer)for(t=e.tokens.length-1;t>=0;t--)\"inline\"===e.tokens[t].type&&(s.test(e.tokens[t].content)&&c(e.tokens[t].children),n.test(e.tokens[t].content)&&u(e.tokens[t].children))}},1835:function(e,t,r){\"use strict\";var n=r(57).isWhiteSpace,s=r(57).isPunctChar,o=r(57).isMdAsciiPunct,i=/['\"]/,a=/['\"]/g;function c(e,t,r){return e.slice(0,t)+r+e.slice(t+1)}function u(e,t){var r,i,u,l,p,h,f,d,m,g,_,k,b,v,y,C,x,A,w,D,E;for(w=[],r=0;r<e.length;r++){for(i=e[r],f=e[r].level,x=w.length-1;x>=0&&!(w[x].level<=f);x--);if(w.length=x+1,\"text\"===i.type){p=0,h=(u=i.content).length;e:for(;p<h&&(a.lastIndex=p,l=a.exec(u));){if(y=C=!0,p=l.index+1,A=\"'\"===l[0],m=32,l.index-1>=0)m=u.charCodeAt(l.index-1);else for(x=r-1;x>=0&&(\"softbreak\"!==e[x].type&&\"hardbreak\"!==e[x].type);x--)if(e[x].content){m=e[x].content.charCodeAt(e[x].content.length-1);break}if(g=32,p<h)g=u.charCodeAt(p);else for(x=r+1;x<e.length&&(\"softbreak\"!==e[x].type&&\"hardbreak\"!==e[x].type);x++)if(e[x].content){g=e[x].content.charCodeAt(0);break}if(_=o(m)||s(String.fromCharCode(m)),k=o(g)||s(String.fromCharCode(g)),b=n(m),(v=n(g))?y=!1:k&&(b||_||(y=!1)),b?C=!1:_&&(v||k||(C=!1)),34===g&&'\"'===l[0]&&m>=48&&m<=57&&(C=y=!1),y&&C&&(y=_,C=k),y||C){if(C)for(x=w.length-1;x>=0&&(d=w[x],!(w[x].level<f));x--)if(d.single===A&&w[x].level===f){d=w[x],A?(D=t.md.options.quotes[2],E=t.md.options.quotes[3]):(D=t.md.options.quotes[0],E=t.md.options.quotes[1]),i.content=c(i.content,l.index,E),e[d.token].content=c(e[d.token].content,d.pos,D),p+=E.length-1,d.token===r&&(p+=D.length-1),h=(u=i.content).length,w.length=x;continue e}y?w.push({token:r,pos:l.index,single:A,level:f}):C&&A&&(i.content=c(i.content,l.index,\"\\u2019\"))}else A&&(i.content=c(i.content,l.index,\"\\u2019\"))}}}}e.exports=function(e){var t;if(e.md.options.typographer)for(t=e.tokens.length-1;t>=0;t--)\"inline\"===e.tokens[t].type&&i.test(e.tokens[t].content)&&u(e.tokens[t].children,e)}},1836:function(e,t,r){\"use strict\";e.exports=function(e){var t,r,n,s,o,i,a=e.tokens;for(t=0,r=a.length;t<r;t++)if(\"inline\"===a[t].type){for(o=(n=a[t].children).length,s=0;s<o;s++)\"text_special\"===n[s].type&&(n[s].type=\"text\");for(s=i=0;s<o;s++)\"text\"===n[s].type&&s+1<o&&\"text\"===n[s+1].type?n[s+1].content=n[s].content+n[s+1].content:(s!==i&&(n[i]=n[s]),i++);s!==i&&(n.length=i)}}},1837:function(e,t,r){\"use strict\";var n=r(327);function s(e,t,r){this.src=e,this.env=r,this.tokens=[],this.inlineMode=!1,this.md=t}s.prototype.Token=n,e.exports=s},1838:function(e,t,r){\"use strict\";var n=r(326),s=[[\"table\",r(1839),[\"paragraph\",\"reference\"]],[\"code\",r(1840)],[\"fence\",r(1841),[\"paragraph\",\"reference\",\"blockquote\",\"list\"]],[\"blockquote\",r(1842),[\"paragraph\",\"reference\",\"blockquote\",\"list\"]],[\"hr\",r(1843),[\"paragraph\",\"reference\",\"blockquote\",\"list\"]],[\"list\",r(1844),[\"paragraph\",\"reference\",\"blockquote\"]],[\"reference\",r(1845)],[\"html_block\",r(1846),[\"paragraph\",\"reference\",\"blockquote\"]],[\"heading\",r(1848),[\"paragraph\",\"reference\",\"blockquote\"]],[\"lheading\",r(1849)],[\"paragraph\",r(1850)]];function o(){this.ruler=new n;for(var e=0;e<s.length;e++)this.ruler.push(s[e][0],s[e][1],{alt:(s[e][2]||[]).slice()})}o.prototype.tokenize=function(e,t,r){for(var n,s,o,i=this.ruler.getRules(\"\"),a=i.length,c=t,u=!1,l=e.md.options.maxNesting;c<r&&(e.line=c=e.skipEmptyLines(c),!(c>=r))&&!(e.sCount[c]<e.blkIndent);){if(e.level>=l){e.line=r;break}for(o=e.line,s=0;s<a;s++)if(n=i[s](e,c,r,!1)){if(o>=e.line)throw new Error(\"block rule didn't increment state.line\");break}if(!n)throw new Error(\"none of the block rules matched\");e.tight=!u,e.isEmpty(e.line-1)&&(u=!0),(c=e.line)<r&&e.isEmpty(c)&&(u=!0,c++,e.line=c)}},o.prototype.parse=function(e,t,r,n){var s;e&&(s=new this.State(e,t,r,n),this.tokenize(s,s.line,s.lineMax))},o.prototype.State=r(1851),e.exports=o},1839:function(e,t,r){\"use strict\";var n=r(57).isSpace;function s(e,t){var r=e.bMarks[t]+e.tShift[t],n=e.eMarks[t];return e.src.slice(r,n)}function o(e){var t,r=[],n=0,s=e.length,o=!1,i=0,a=\"\";for(t=e.charCodeAt(n);n<s;)124===t&&(o?(a+=e.substring(i,n-1),i=n):(r.push(a+e.substring(i,n)),a=\"\",i=n+1)),o=92===t,n++,t=e.charCodeAt(n);return r.push(a+e.substring(i)),r}e.exports=function(e,t,r,i){var a,c,u,l,p,h,f,d,m,g,_,k,b,v,y,C,x,A;if(t+2>r)return!1;if(h=t+1,e.sCount[h]<e.blkIndent)return!1;if(e.sCount[h]-e.blkIndent>=4)return!1;if((u=e.bMarks[h]+e.tShift[h])>=e.eMarks[h])return!1;if(124!==(x=e.src.charCodeAt(u++))&&45!==x&&58!==x)return!1;if(u>=e.eMarks[h])return!1;if(124!==(A=e.src.charCodeAt(u++))&&45!==A&&58!==A&&!n(A))return!1;if(45===x&&n(A))return!1;for(;u<e.eMarks[h];){if(124!==(a=e.src.charCodeAt(u))&&45!==a&&58!==a&&!n(a))return!1;u++}for(f=(c=s(e,t+1)).split(\"|\"),g=[],l=0;l<f.length;l++){if(!(_=f[l].trim())){if(0===l||l===f.length-1)continue;return!1}if(!/^:?-+:?$/.test(_))return!1;58===_.charCodeAt(_.length-1)?g.push(58===_.charCodeAt(0)?\"center\":\"right\"):58===_.charCodeAt(0)?g.push(\"left\"):g.push(\"\")}if(-1===(c=s(e,t).trim()).indexOf(\"|\"))return!1;if(e.sCount[t]-e.blkIndent>=4)return!1;if((f=o(c)).length&&\"\"===f[0]&&f.shift(),f.length&&\"\"===f[f.length-1]&&f.pop(),0===(d=f.length)||d!==g.length)return!1;if(i)return!0;for(v=e.parentType,e.parentType=\"table\",C=e.md.block.ruler.getRules(\"blockquote\"),(m=e.push(\"table_open\",\"table\",1)).map=k=[t,0],(m=e.push(\"thead_open\",\"thead\",1)).map=[t,t+1],(m=e.push(\"tr_open\",\"tr\",1)).map=[t,t+1],l=0;l<f.length;l++)m=e.push(\"th_open\",\"th\",1),g[l]&&(m.attrs=[[\"style\",\"text-align:\"+g[l]]]),(m=e.push(\"inline\",\"\",0)).content=f[l].trim(),m.children=[],m=e.push(\"th_close\",\"th\",-1);for(m=e.push(\"tr_close\",\"tr\",-1),m=e.push(\"thead_close\",\"thead\",-1),h=t+2;h<r&&!(e.sCount[h]<e.blkIndent);h++){for(y=!1,l=0,p=C.length;l<p;l++)if(C[l](e,h,r,!0)){y=!0;break}if(y)break;if(!(c=s(e,h).trim()))break;if(e.sCount[h]-e.blkIndent>=4)break;for((f=o(c)).length&&\"\"===f[0]&&f.shift(),f.length&&\"\"===f[f.length-1]&&f.pop(),h===t+2&&((m=e.push(\"tbody_open\",\"tbody\",1)).map=b=[t+2,0]),(m=e.push(\"tr_open\",\"tr\",1)).map=[h,h+1],l=0;l<d;l++)m=e.push(\"td_open\",\"td\",1),g[l]&&(m.attrs=[[\"style\",\"text-align:\"+g[l]]]),(m=e.push(\"inline\",\"\",0)).content=f[l]?f[l].trim():\"\",m.children=[],m=e.push(\"td_close\",\"td\",-1);m=e.push(\"tr_close\",\"tr\",-1)}return b&&(m=e.push(\"tbody_close\",\"tbody\",-1),b[1]=h),m=e.push(\"table_close\",\"table\",-1),k[1]=h,e.parentType=v,e.line=h,!0}},1840:function(e,t,r){\"use strict\";e.exports=function(e,t,r){var n,s,o;if(e.sCount[t]-e.blkIndent<4)return!1;for(s=n=t+1;n<r;)if(e.isEmpty(n))n++;else{if(!(e.sCount[n]-e.blkIndent>=4))break;s=++n}return e.line=s,(o=e.push(\"code_block\",\"code\",0)).content=e.getLines(t,s,4+e.blkIndent,!1)+\"\\n\",o.map=[t,e.line],!0}},1841:function(e,t,r){\"use strict\";e.exports=function(e,t,r,n){var s,o,i,a,c,u,l,p=!1,h=e.bMarks[t]+e.tShift[t],f=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;if(h+3>f)return!1;if(126!==(s=e.src.charCodeAt(h))&&96!==s)return!1;if(c=h,(o=(h=e.skipChars(h,s))-c)<3)return!1;if(l=e.src.slice(c,h),i=e.src.slice(h,f),96===s&&i.indexOf(String.fromCharCode(s))>=0)return!1;if(n)return!0;for(a=t;!(++a>=r)&&!((h=c=e.bMarks[a]+e.tShift[a])<(f=e.eMarks[a])&&e.sCount[a]<e.blkIndent);)if(e.src.charCodeAt(h)===s&&!(e.sCount[a]-e.blkIndent>=4)&&!((h=e.skipChars(h,s))-c<o)&&!((h=e.skipSpaces(h))<f)){p=!0;break}return o=e.sCount[t],e.line=a+(p?1:0),(u=e.push(\"fence\",\"code\",0)).info=i,u.content=e.getLines(t+1,a,o,!0),u.markup=l,u.map=[t,e.line],!0}},1842:function(e,t,r){\"use strict\";var n=r(57).isSpace;e.exports=function(e,t,r,s){var o,i,a,c,u,l,p,h,f,d,m,g,_,k,b,v,y,C,x,A,w=e.lineMax,D=e.bMarks[t]+e.tShift[t],E=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;if(62!==e.src.charCodeAt(D))return!1;if(s)return!0;for(d=[],m=[],k=[],b=[],C=e.md.block.ruler.getRules(\"blockquote\"),_=e.parentType,e.parentType=\"blockquote\",h=t;h<r&&(A=e.sCount[h]<e.blkIndent,!((D=e.bMarks[h]+e.tShift[h])>=(E=e.eMarks[h])));h++)if(62!==e.src.charCodeAt(D++)||A){if(l)break;for(y=!1,a=0,u=C.length;a<u;a++)if(C[a](e,h,r,!0)){y=!0;break}if(y){e.lineMax=h,0!==e.blkIndent&&(d.push(e.bMarks[h]),m.push(e.bsCount[h]),b.push(e.tShift[h]),k.push(e.sCount[h]),e.sCount[h]-=e.blkIndent);break}d.push(e.bMarks[h]),m.push(e.bsCount[h]),b.push(e.tShift[h]),k.push(e.sCount[h]),e.sCount[h]=-1}else{for(c=e.sCount[h]+1,32===e.src.charCodeAt(D)?(D++,c++,o=!1,v=!0):9===e.src.charCodeAt(D)?(v=!0,(e.bsCount[h]+c)%4===3?(D++,c++,o=!1):o=!0):v=!1,f=c,d.push(e.bMarks[h]),e.bMarks[h]=D;D<E&&(i=e.src.charCodeAt(D),n(i));)9===i?f+=4-(f+e.bsCount[h]+(o?1:0))%4:f++,D++;l=D>=E,m.push(e.bsCount[h]),e.bsCount[h]=e.sCount[h]+1+(v?1:0),k.push(e.sCount[h]),e.sCount[h]=f-c,b.push(e.tShift[h]),e.tShift[h]=D-e.bMarks[h]}for(g=e.blkIndent,e.blkIndent=0,(x=e.push(\"blockquote_open\",\"blockquote\",1)).markup=\">\",x.map=p=[t,0],e.md.block.tokenize(e,t,h),(x=e.push(\"blockquote_close\",\"blockquote\",-1)).markup=\">\",e.lineMax=w,e.parentType=_,p[1]=e.line,a=0;a<b.length;a++)e.bMarks[a+t]=d[a],e.tShift[a+t]=b[a],e.sCount[a+t]=k[a],e.bsCount[a+t]=m[a];return e.blkIndent=g,!0}},1843:function(e,t,r){\"use strict\";var n=r(57).isSpace;e.exports=function(e,t,r,s){var o,i,a,c,u=e.bMarks[t]+e.tShift[t],l=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;if(42!==(o=e.src.charCodeAt(u++))&&45!==o&&95!==o)return!1;for(i=1;u<l;){if((a=e.src.charCodeAt(u++))!==o&&!n(a))return!1;a===o&&i++}return!(i<3)&&(s||(e.line=t+1,(c=e.push(\"hr\",\"hr\",0)).map=[t,e.line],c.markup=Array(i+1).join(String.fromCharCode(o))),!0)}},1844:function(e,t,r){\"use strict\";var n=r(57).isSpace;function s(e,t){var r,s,o,i;return s=e.bMarks[t]+e.tShift[t],o=e.eMarks[t],42!==(r=e.src.charCodeAt(s++))&&45!==r&&43!==r||s<o&&(i=e.src.charCodeAt(s),!n(i))?-1:s}function o(e,t){var r,s=e.bMarks[t]+e.tShift[t],o=s,i=e.eMarks[t];if(o+1>=i)return-1;if((r=e.src.charCodeAt(o++))<48||r>57)return-1;for(;;){if(o>=i)return-1;if(!((r=e.src.charCodeAt(o++))>=48&&r<=57)){if(41===r||46===r)break;return-1}if(o-s>=10)return-1}return o<i&&(r=e.src.charCodeAt(o),!n(r))?-1:o}e.exports=function(e,t,r,n){var i,a,c,u,l,p,h,f,d,m,g,_,k,b,v,y,C,x,A,w,D,E,q,S,F,L,z,T=t,I=!1,R=!0;if(e.sCount[T]-e.blkIndent>=4)return!1;if(e.listIndent>=0&&e.sCount[T]-e.listIndent>=4&&e.sCount[T]<e.blkIndent)return!1;if(n&&\"paragraph\"===e.parentType&&e.sCount[T]>=e.blkIndent&&(I=!0),(E=o(e,T))>=0){if(h=!0,S=e.bMarks[T]+e.tShift[T],k=Number(e.src.slice(S,E-1)),I&&1!==k)return!1}else{if(!((E=s(e,T))>=0))return!1;h=!1}if(I&&e.skipSpaces(E)>=e.eMarks[T])return!1;if(n)return!0;for(_=e.src.charCodeAt(E-1),g=e.tokens.length,h?(z=e.push(\"ordered_list_open\",\"ol\",1),1!==k&&(z.attrs=[[\"start\",k]])):z=e.push(\"bullet_list_open\",\"ul\",1),z.map=m=[T,0],z.markup=String.fromCharCode(_),q=!1,L=e.md.block.ruler.getRules(\"list\"),C=e.parentType,e.parentType=\"list\";T<r;){for(D=E,b=e.eMarks[T],p=v=e.sCount[T]+E-(e.bMarks[T]+e.tShift[T]);D<b;){if(9===(i=e.src.charCodeAt(D)))v+=4-(v+e.bsCount[T])%4;else{if(32!==i)break;v++}D++}if((l=(a=D)>=b?1:v-p)>4&&(l=1),u=p+l,(z=e.push(\"list_item_open\",\"li\",1)).markup=String.fromCharCode(_),z.map=f=[T,0],h&&(z.info=e.src.slice(S,E-1)),w=e.tight,A=e.tShift[T],x=e.sCount[T],y=e.listIndent,e.listIndent=e.blkIndent,e.blkIndent=u,e.tight=!0,e.tShift[T]=a-e.bMarks[T],e.sCount[T]=v,a>=b&&e.isEmpty(T+1)?e.line=Math.min(e.line+2,r):e.md.block.tokenize(e,T,r,!0),e.tight&&!q||(R=!1),q=e.line-T>1&&e.isEmpty(e.line-1),e.blkIndent=e.listIndent,e.listIndent=y,e.tShift[T]=A,e.sCount[T]=x,e.tight=w,(z=e.push(\"list_item_close\",\"li\",-1)).markup=String.fromCharCode(_),T=e.line,f[1]=T,T>=r)break;if(e.sCount[T]<e.blkIndent)break;if(e.sCount[T]-e.blkIndent>=4)break;for(F=!1,c=0,d=L.length;c<d;c++)if(L[c](e,T,r,!0)){F=!0;break}if(F)break;if(h){if((E=o(e,T))<0)break;S=e.bMarks[T]+e.tShift[T]}else if((E=s(e,T))<0)break;if(_!==e.src.charCodeAt(E-1))break}return(z=h?e.push(\"ordered_list_close\",\"ol\",-1):e.push(\"bullet_list_close\",\"ul\",-1)).markup=String.fromCharCode(_),m[1]=T,e.line=T,e.parentType=C,R&&function(e,t){var r,n,s=e.level+2;for(r=t+2,n=e.tokens.length-2;r<n;r++)e.tokens[r].level===s&&\"paragraph_open\"===e.tokens[r].type&&(e.tokens[r+2].hidden=!0,e.tokens[r].hidden=!0,r+=2)}(e,g),!0}},1845:function(e,t,r){\"use strict\";var n=r(57).normalizeReference,s=r(57).isSpace;e.exports=function(e,t,r,o){var i,a,c,u,l,p,h,f,d,m,g,_,k,b,v,y,C=0,x=e.bMarks[t]+e.tShift[t],A=e.eMarks[t],w=t+1;if(e.sCount[t]-e.blkIndent>=4)return!1;if(91!==e.src.charCodeAt(x))return!1;for(;++x<A;)if(93===e.src.charCodeAt(x)&&92!==e.src.charCodeAt(x-1)){if(x+1===A)return!1;if(58!==e.src.charCodeAt(x+1))return!1;break}for(u=e.lineMax,v=e.md.block.ruler.getRules(\"reference\"),m=e.parentType,e.parentType=\"reference\";w<u&&!e.isEmpty(w);w++)if(!(e.sCount[w]-e.blkIndent>3)&&!(e.sCount[w]<0)){for(b=!1,p=0,h=v.length;p<h;p++)if(v[p](e,w,u,!0)){b=!0;break}if(b)break}for(A=(k=e.getLines(t,w,e.blkIndent,!1).trim()).length,x=1;x<A;x++){if(91===(i=k.charCodeAt(x)))return!1;if(93===i){d=x;break}(10===i||92===i&&++x<A&&10===k.charCodeAt(x))&&C++}if(d<0||58!==k.charCodeAt(d+1))return!1;for(x=d+2;x<A;x++)if(10===(i=k.charCodeAt(x)))C++;else if(!s(i))break;if(!(g=e.md.helpers.parseLinkDestination(k,x,A)).ok)return!1;if(l=e.md.normalizeLink(g.str),!e.md.validateLink(l))return!1;for(a=x=g.pos,c=C+=g.lines,_=x;x<A;x++)if(10===(i=k.charCodeAt(x)))C++;else if(!s(i))break;for(g=e.md.helpers.parseLinkTitle(k,x,A),x<A&&_!==x&&g.ok?(y=g.str,x=g.pos,C+=g.lines):(y=\"\",x=a,C=c);x<A&&(i=k.charCodeAt(x),s(i));)x++;if(x<A&&10!==k.charCodeAt(x)&&y)for(y=\"\",x=a,C=c;x<A&&(i=k.charCodeAt(x),s(i));)x++;return!(x<A&&10!==k.charCodeAt(x))&&(!!(f=n(k.slice(1,d)))&&(o||(\"undefined\"===typeof e.env.references&&(e.env.references={}),\"undefined\"===typeof e.env.references[f]&&(e.env.references[f]={title:y,href:l}),e.parentType=m,e.line=t+C+1),!0))}},1846:function(e,t,r){\"use strict\";var n=r(1847),s=r(376).HTML_OPEN_CLOSE_TAG_RE,o=[[/^<(script|pre|style|textarea)(?=(\\s|>|$))/i,/<\\/(script|pre|style|textarea)>/i,!0],[/^<!--/,/-->/,!0],[/^<\\?/,/\\?>/,!0],[/^<![A-Z]/,/>/,!0],[/^<!\\[CDATA\\[/,/\\]\\]>/,!0],[new RegExp(\"^</?(\"+n.join(\"|\")+\")(?=(\\\\s|/?>|$))\",\"i\"),/^$/,!0],[new RegExp(s.source+\"\\\\s*$\"),/^$/,!1]];e.exports=function(e,t,r,n){var s,i,a,c,u=e.bMarks[t]+e.tShift[t],l=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;if(!e.md.options.html)return!1;if(60!==e.src.charCodeAt(u))return!1;for(c=e.src.slice(u,l),s=0;s<o.length&&!o[s][0].test(c);s++);if(s===o.length)return!1;if(n)return o[s][2];if(i=t+1,!o[s][1].test(c))for(;i<r&&!(e.sCount[i]<e.blkIndent);i++)if(u=e.bMarks[i]+e.tShift[i],l=e.eMarks[i],c=e.src.slice(u,l),o[s][1].test(c)){0!==c.length&&i++;break}return e.line=i,(a=e.push(\"html_block\",\"\",0)).map=[t,i],a.content=e.getLines(t,i,e.blkIndent,!0),!0}},1847:function(e,t,r){\"use strict\";e.exports=[\"address\",\"article\",\"aside\",\"base\",\"basefont\",\"blockquote\",\"body\",\"caption\",\"center\",\"col\",\"colgroup\",\"dd\",\"details\",\"dialog\",\"dir\",\"div\",\"dl\",\"dt\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"frame\",\"frameset\",\"h1\",\"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hr\",\"html\",\"iframe\",\"legend\",\"li\",\"link\",\"main\",\"menu\",\"menuitem\",\"nav\",\"noframes\",\"ol\",\"optgroup\",\"option\",\"p\",\"param\",\"section\",\"source\",\"summary\",\"table\",\"tbody\",\"td\",\"tfoot\",\"th\",\"thead\",\"title\",\"tr\",\"track\",\"ul\"]},1848:function(e,t,r){\"use strict\";var n=r(57).isSpace;e.exports=function(e,t,r,s){var o,i,a,c,u=e.bMarks[t]+e.tShift[t],l=e.eMarks[t];if(e.sCount[t]-e.blkIndent>=4)return!1;if(35!==(o=e.src.charCodeAt(u))||u>=l)return!1;for(i=1,o=e.src.charCodeAt(++u);35===o&&u<l&&i<=6;)i++,o=e.src.charCodeAt(++u);return!(i>6||u<l&&!n(o))&&(s||(l=e.skipSpacesBack(l,u),(a=e.skipCharsBack(l,35,u))>u&&n(e.src.charCodeAt(a-1))&&(l=a),e.line=t+1,(c=e.push(\"heading_open\",\"h\"+String(i),1)).markup=\"########\".slice(0,i),c.map=[t,e.line],(c=e.push(\"inline\",\"\",0)).content=e.src.slice(u,l).trim(),c.map=[t,e.line],c.children=[],(c=e.push(\"heading_close\",\"h\"+String(i),-1)).markup=\"########\".slice(0,i)),!0)}},1849:function(e,t,r){\"use strict\";e.exports=function(e,t,r){var n,s,o,i,a,c,u,l,p,h,f=t+1,d=e.md.block.ruler.getRules(\"paragraph\");if(e.sCount[t]-e.blkIndent>=4)return!1;for(h=e.parentType,e.parentType=\"paragraph\";f<r&&!e.isEmpty(f);f++)if(!(e.sCount[f]-e.blkIndent>3)){if(e.sCount[f]>=e.blkIndent&&(c=e.bMarks[f]+e.tShift[f])<(u=e.eMarks[f])&&(45===(p=e.src.charCodeAt(c))||61===p)&&(c=e.skipChars(c,p),(c=e.skipSpaces(c))>=u)){l=61===p?1:2;break}if(!(e.sCount[f]<0)){for(s=!1,o=0,i=d.length;o<i;o++)if(d[o](e,f,r,!0)){s=!0;break}if(s)break}}return!!l&&(n=e.getLines(t,f,e.blkIndent,!1).trim(),e.line=f+1,(a=e.push(\"heading_open\",\"h\"+String(l),1)).markup=String.fromCharCode(p),a.map=[t,e.line],(a=e.push(\"inline\",\"\",0)).content=n,a.map=[t,e.line-1],a.children=[],(a=e.push(\"heading_close\",\"h\"+String(l),-1)).markup=String.fromCharCode(p),e.parentType=h,!0)}},1850:function(e,t,r){\"use strict\";e.exports=function(e,t,r){var n,s,o,i,a,c,u=t+1,l=e.md.block.ruler.getRules(\"paragraph\");for(c=e.parentType,e.parentType=\"paragraph\";u<r&&!e.isEmpty(u);u++)if(!(e.sCount[u]-e.blkIndent>3)&&!(e.sCount[u]<0)){for(s=!1,o=0,i=l.length;o<i;o++)if(l[o](e,u,r,!0)){s=!0;break}if(s)break}return n=e.getLines(t,u,e.blkIndent,!1).trim(),e.line=u,(a=e.push(\"paragraph_open\",\"p\",1)).map=[t,e.line],(a=e.push(\"inline\",\"\",0)).content=n,a.map=[t,e.line],a.children=[],a=e.push(\"paragraph_close\",\"p\",-1),e.parentType=c,!0}},1851:function(e,t,r){\"use strict\";var n=r(327),s=r(57).isSpace;function o(e,t,r,n){var o,i,a,c,u,l,p,h;for(this.src=e,this.md=t,this.env=r,this.tokens=n,this.bMarks=[],this.eMarks=[],this.tShift=[],this.sCount=[],this.bsCount=[],this.blkIndent=0,this.line=0,this.lineMax=0,this.tight=!1,this.ddIndent=-1,this.listIndent=-1,this.parentType=\"root\",this.level=0,this.result=\"\",h=!1,a=c=l=p=0,u=(i=this.src).length;c<u;c++){if(o=i.charCodeAt(c),!h){if(s(o)){l++,9===o?p+=4-p%4:p++;continue}h=!0}10!==o&&c!==u-1||(10!==o&&c++,this.bMarks.push(a),this.eMarks.push(c),this.tShift.push(l),this.sCount.push(p),this.bsCount.push(0),h=!1,l=0,p=0,a=c+1)}this.bMarks.push(i.length),this.eMarks.push(i.length),this.tShift.push(0),this.sCount.push(0),this.bsCount.push(0),this.lineMax=this.bMarks.length-1}o.prototype.push=function(e,t,r){var s=new n(e,t,r);return s.block=!0,r<0&&this.level--,s.level=this.level,r>0&&this.level++,this.tokens.push(s),s},o.prototype.isEmpty=function(e){return this.bMarks[e]+this.tShift[e]>=this.eMarks[e]},o.prototype.skipEmptyLines=function(e){for(var t=this.lineMax;e<t&&!(this.bMarks[e]+this.tShift[e]<this.eMarks[e]);e++);return e},o.prototype.skipSpaces=function(e){for(var t,r=this.src.length;e<r&&(t=this.src.charCodeAt(e),s(t));e++);return e},o.prototype.skipSpacesBack=function(e,t){if(e<=t)return e;for(;e>t;)if(!s(this.src.charCodeAt(--e)))return e+1;return e},o.prototype.skipChars=function(e,t){for(var r=this.src.length;e<r&&this.src.charCodeAt(e)===t;e++);return e},o.prototype.skipCharsBack=function(e,t,r){if(e<=r)return e;for(;e>r;)if(t!==this.src.charCodeAt(--e))return e+1;return e},o.prototype.getLines=function(e,t,r,n){var o,i,a,c,u,l,p,h=e;if(e>=t)return\"\";for(l=new Array(t-e),o=0;h<t;h++,o++){for(i=0,p=c=this.bMarks[h],u=h+1<t||n?this.eMarks[h]+1:this.eMarks[h];c<u&&i<r;){if(a=this.src.charCodeAt(c),s(a))9===a?i+=4-(i+this.bsCount[h])%4:i++;else{if(!(c-p<this.tShift[h]))break;i++}c++}l[o]=i>r?new Array(i-r+1).join(\" \")+this.src.slice(c,u):this.src.slice(c,u)}return l.join(\"\")},o.prototype.Token=n,e.exports=o},1852:function(e,t,r){\"use strict\";var n=r(326),s=[[\"text\",r(1853)],[\"linkify\",r(1854)],[\"newline\",r(1855)],[\"escape\",r(1856)],[\"backticks\",r(1857)],[\"strikethrough\",r(377).tokenize],[\"emphasis\",r(378).tokenize],[\"link\",r(1858)],[\"image\",r(1859)],[\"autolink\",r(1860)],[\"html_inline\",r(1861)],[\"entity\",r(1862)]],o=[[\"balance_pairs\",r(1863)],[\"strikethrough\",r(377).postProcess],[\"emphasis\",r(378).postProcess],[\"fragments_join\",r(1864)]];function i(){var e;for(this.ruler=new n,e=0;e<s.length;e++)this.ruler.push(s[e][0],s[e][1]);for(this.ruler2=new n,e=0;e<o.length;e++)this.ruler2.push(o[e][0],o[e][1])}i.prototype.skipToken=function(e){var t,r,n=e.pos,s=this.ruler.getRules(\"\"),o=s.length,i=e.md.options.maxNesting,a=e.cache;if(\"undefined\"===typeof a[n]){if(e.level<i){for(r=0;r<o;r++)if(e.level++,t=s[r](e,!0),e.level--,t){if(n>=e.pos)throw new Error(\"inline rule didn't increment state.pos\");break}}else e.pos=e.posMax;t||e.pos++,a[n]=e.pos}else e.pos=a[n]},i.prototype.tokenize=function(e){for(var t,r,n,s=this.ruler.getRules(\"\"),o=s.length,i=e.posMax,a=e.md.options.maxNesting;e.pos<i;){if(n=e.pos,e.level<a)for(r=0;r<o;r++)if(t=s[r](e,!1)){if(n>=e.pos)throw new Error(\"inline rule didn't increment state.pos\");break}if(t){if(e.pos>=i)break}else e.pending+=e.src[e.pos++]}e.pending&&e.pushPending()},i.prototype.parse=function(e,t,r,n){var s,o,i,a=new this.State(e,t,r,n);for(this.tokenize(a),i=(o=this.ruler2.getRules(\"\")).length,s=0;s<i;s++)o[s](a)},i.prototype.State=r(1865),e.exports=i},1853:function(e,t,r){\"use strict\";function n(e){switch(e){case 10:case 33:case 35:case 36:case 37:case 38:case 42:case 43:case 45:case 58:case 60:case 61:case 62:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 125:case 126:return!0;default:return!1}}e.exports=function(e,t){for(var r=e.pos;r<e.posMax&&!n(e.src.charCodeAt(r));)r++;return r!==e.pos&&(t||(e.pending+=e.src.slice(e.pos,r)),e.pos=r,!0)}},1854:function(e,t,r){\"use strict\";var n=/(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;e.exports=function(e,t){var r,s,o,i,a,c,u;return!!e.md.options.linkify&&(!(e.linkLevel>0)&&(!((r=e.pos)+3>e.posMax)&&(58===e.src.charCodeAt(r)&&(47===e.src.charCodeAt(r+1)&&(47===e.src.charCodeAt(r+2)&&(!!(s=e.pending.match(n))&&(o=s[1],!!(i=e.md.linkify.matchAtStart(e.src.slice(r-o.length)))&&(!((a=i.url).length<=o.length)&&(a=a.replace(/\\*+$/,\"\"),c=e.md.normalizeLink(a),!!e.md.validateLink(c)&&(t||(e.pending=e.pending.slice(0,-o.length),(u=e.push(\"link_open\",\"a\",1)).attrs=[[\"href\",c]],u.markup=\"linkify\",u.info=\"auto\",(u=e.push(\"text\",\"\",0)).content=e.md.normalizeLinkText(a),(u=e.push(\"link_close\",\"a\",-1)).markup=\"linkify\",u.info=\"auto\"),e.pos+=a.length-o.length,!0))))))))))}},1855:function(e,t,r){\"use strict\";var n=r(57).isSpace;e.exports=function(e,t){var r,s,o,i=e.pos;if(10!==e.src.charCodeAt(i))return!1;if(r=e.pending.length-1,s=e.posMax,!t)if(r>=0&&32===e.pending.charCodeAt(r))if(r>=1&&32===e.pending.charCodeAt(r-1)){for(o=r-1;o>=1&&32===e.pending.charCodeAt(o-1);)o--;e.pending=e.pending.slice(0,o),e.push(\"hardbreak\",\"br\",0)}else e.pending=e.pending.slice(0,-1),e.push(\"softbreak\",\"br\",0);else e.push(\"softbreak\",\"br\",0);for(i++;i<s&&n(e.src.charCodeAt(i));)i++;return e.pos=i,!0}},1856:function(e,t,r){\"use strict\";for(var n=r(57).isSpace,s=[],o=0;o<256;o++)s.push(0);\"\\\\!\\\"#$%&'()*+,./:;<=>?@[]^_`{|}~-\".split(\"\").forEach((function(e){s[e.charCodeAt(0)]=1})),e.exports=function(e,t){var r,o,i,a,c,u=e.pos,l=e.posMax;if(92!==e.src.charCodeAt(u))return!1;if(++u>=l)return!1;if(10===(r=e.src.charCodeAt(u))){for(t||e.push(\"hardbreak\",\"br\",0),u++;u<l&&(r=e.src.charCodeAt(u),n(r));)u++;return e.pos=u,!0}return a=e.src[u],r>=55296&&r<=56319&&u+1<l&&(o=e.src.charCodeAt(u+1))>=56320&&o<=57343&&(a+=e.src[u+1],u++),i=\"\\\\\"+a,t||(c=e.push(\"text_special\",\"\",0),r<256&&0!==s[r]?c.content=a:c.content=i,c.markup=i,c.info=\"escape\"),e.pos=u+1,!0}},1857:function(e,t,r){\"use strict\";e.exports=function(e,t){var r,n,s,o,i,a,c,u,l=e.pos;if(96!==e.src.charCodeAt(l))return!1;for(r=l,l++,n=e.posMax;l<n&&96===e.src.charCodeAt(l);)l++;if(c=(s=e.src.slice(r,l)).length,e.backticksScanned&&(e.backticks[c]||0)<=r)return t||(e.pending+=s),e.pos+=c,!0;for(a=l;-1!==(i=e.src.indexOf(\"`\",a));){for(a=i+1;a<n&&96===e.src.charCodeAt(a);)a++;if((u=a-i)===c)return t||((o=e.push(\"code_inline\",\"code\",0)).markup=s,o.content=e.src.slice(l,i).replace(/\\n/g,\" \").replace(/^ (.+) $/,\"$1\")),e.pos=a,!0;e.backticks[u]=i}return e.backticksScanned=!0,t||(e.pending+=s),e.pos+=c,!0}},1858:function(e,t,r){\"use strict\";var n=r(57).normalizeReference,s=r(57).isSpace;e.exports=function(e,t){var r,o,i,a,c,u,l,p,h=\"\",f=\"\",d=e.pos,m=e.posMax,g=e.pos,_=!0;if(91!==e.src.charCodeAt(e.pos))return!1;if(c=e.pos+1,(a=e.md.helpers.parseLinkLabel(e,e.pos,!0))<0)return!1;if((u=a+1)<m&&40===e.src.charCodeAt(u)){for(_=!1,u++;u<m&&(o=e.src.charCodeAt(u),s(o)||10===o);u++);if(u>=m)return!1;if(g=u,(l=e.md.helpers.parseLinkDestination(e.src,u,e.posMax)).ok){for(h=e.md.normalizeLink(l.str),e.md.validateLink(h)?u=l.pos:h=\"\",g=u;u<m&&(o=e.src.charCodeAt(u),s(o)||10===o);u++);if(l=e.md.helpers.parseLinkTitle(e.src,u,e.posMax),u<m&&g!==u&&l.ok)for(f=l.str,u=l.pos;u<m&&(o=e.src.charCodeAt(u),s(o)||10===o);u++);}(u>=m||41!==e.src.charCodeAt(u))&&(_=!0),u++}if(_){if(\"undefined\"===typeof e.env.references)return!1;if(u<m&&91===e.src.charCodeAt(u)?(g=u+1,(u=e.md.helpers.parseLinkLabel(e,u))>=0?i=e.src.slice(g,u++):u=a+1):u=a+1,i||(i=e.src.slice(c,a)),!(p=e.env.references[n(i)]))return e.pos=d,!1;h=p.href,f=p.title}return t||(e.pos=c,e.posMax=a,e.push(\"link_open\",\"a\",1).attrs=r=[[\"href\",h]],f&&r.push([\"title\",f]),e.linkLevel++,e.md.inline.tokenize(e),e.linkLevel--,e.push(\"link_close\",\"a\",-1)),e.pos=u,e.posMax=m,!0}},1859:function(e,t,r){\"use strict\";var n=r(57).normalizeReference,s=r(57).isSpace;e.exports=function(e,t){var r,o,i,a,c,u,l,p,h,f,d,m,g,_=\"\",k=e.pos,b=e.posMax;if(33!==e.src.charCodeAt(e.pos))return!1;if(91!==e.src.charCodeAt(e.pos+1))return!1;if(u=e.pos+2,(c=e.md.helpers.parseLinkLabel(e,e.pos+1,!1))<0)return!1;if((l=c+1)<b&&40===e.src.charCodeAt(l)){for(l++;l<b&&(o=e.src.charCodeAt(l),s(o)||10===o);l++);if(l>=b)return!1;for(g=l,(h=e.md.helpers.parseLinkDestination(e.src,l,e.posMax)).ok&&(_=e.md.normalizeLink(h.str),e.md.validateLink(_)?l=h.pos:_=\"\"),g=l;l<b&&(o=e.src.charCodeAt(l),s(o)||10===o);l++);if(h=e.md.helpers.parseLinkTitle(e.src,l,e.posMax),l<b&&g!==l&&h.ok)for(f=h.str,l=h.pos;l<b&&(o=e.src.charCodeAt(l),s(o)||10===o);l++);else f=\"\";if(l>=b||41!==e.src.charCodeAt(l))return e.pos=k,!1;l++}else{if(\"undefined\"===typeof e.env.references)return!1;if(l<b&&91===e.src.charCodeAt(l)?(g=l+1,(l=e.md.helpers.parseLinkLabel(e,l))>=0?a=e.src.slice(g,l++):l=c+1):l=c+1,a||(a=e.src.slice(u,c)),!(p=e.env.references[n(a)]))return e.pos=k,!1;_=p.href,f=p.title}return t||(i=e.src.slice(u,c),e.md.inline.parse(i,e.md,e.env,m=[]),(d=e.push(\"image\",\"img\",0)).attrs=r=[[\"src\",_],[\"alt\",\"\"]],d.children=m,d.content=i,f&&r.push([\"title\",f])),e.pos=l,e.posMax=b,!0}},1860:function(e,t,r){\"use strict\";var n=/^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/,s=/^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;e.exports=function(e,t){var r,o,i,a,c,u,l=e.pos;if(60!==e.src.charCodeAt(l))return!1;for(c=e.pos,u=e.posMax;;){if(++l>=u)return!1;if(60===(a=e.src.charCodeAt(l)))return!1;if(62===a)break}return r=e.src.slice(c+1,l),s.test(r)?(o=e.md.normalizeLink(r),!!e.md.validateLink(o)&&(t||((i=e.push(\"link_open\",\"a\",1)).attrs=[[\"href\",o]],i.markup=\"autolink\",i.info=\"auto\",(i=e.push(\"text\",\"\",0)).content=e.md.normalizeLinkText(r),(i=e.push(\"link_close\",\"a\",-1)).markup=\"autolink\",i.info=\"auto\"),e.pos+=r.length+2,!0)):!!n.test(r)&&(o=e.md.normalizeLink(\"mailto:\"+r),!!e.md.validateLink(o)&&(t||((i=e.push(\"link_open\",\"a\",1)).attrs=[[\"href\",o]],i.markup=\"autolink\",i.info=\"auto\",(i=e.push(\"text\",\"\",0)).content=e.md.normalizeLinkText(r),(i=e.push(\"link_close\",\"a\",-1)).markup=\"autolink\",i.info=\"auto\"),e.pos+=r.length+2,!0))}},1861:function(e,t,r){\"use strict\";var n=r(376).HTML_TAG_RE;e.exports=function(e,t){var r,s,o,i,a,c=e.pos;return!!e.md.options.html&&(o=e.posMax,!(60!==e.src.charCodeAt(c)||c+2>=o)&&(!(33!==(r=e.src.charCodeAt(c+1))&&63!==r&&47!==r&&!function(e){var t=32|e;return t>=97&&t<=122}(r))&&(!!(s=e.src.slice(c).match(n))&&(t||((i=e.push(\"html_inline\",\"\",0)).content=s[0],a=i.content,/^<a[>\\s]/i.test(a)&&e.linkLevel++,function(e){return/^<\\/a\\s*>/i.test(e)}(i.content)&&e.linkLevel--),e.pos+=s[0].length,!0))))}},1862:function(e,t,r){\"use strict\";var n=r(375),s=r(57).has,o=r(57).isValidEntityCode,i=r(57).fromCodePoint,a=/^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i,c=/^&([a-z][a-z0-9]{1,31});/i;e.exports=function(e,t){var r,u,l,p=e.pos,h=e.posMax;if(38!==e.src.charCodeAt(p))return!1;if(p+1>=h)return!1;if(35===e.src.charCodeAt(p+1)){if(u=e.src.slice(p).match(a))return t||(r=\"x\"===u[1][0].toLowerCase()?parseInt(u[1].slice(1),16):parseInt(u[1],10),(l=e.push(\"text_special\",\"\",0)).content=o(r)?i(r):i(65533),l.markup=u[0],l.info=\"entity\"),e.pos+=u[0].length,!0}else if((u=e.src.slice(p).match(c))&&s(n,u[1]))return t||((l=e.push(\"text_special\",\"\",0)).content=n[u[1]],l.markup=u[0],l.info=\"entity\"),e.pos+=u[0].length,!0;return!1}},1863:function(e,t,r){\"use strict\";function n(e){var t,r,n,s,o,i,a,c,u={},l=e.length;if(l){var p=0,h=-2,f=[];for(t=0;t<l;t++)if(n=e[t],f.push(0),e[p].marker===n.marker&&h===n.token-1||(p=t),h=n.token,n.length=n.length||0,n.close){for(u.hasOwnProperty(n.marker)||(u[n.marker]=[-1,-1,-1,-1,-1,-1]),o=u[n.marker][(n.open?3:0)+n.length%3],i=r=p-f[p]-1;r>o;r-=f[r]+1)if((s=e[r]).marker===n.marker&&s.open&&s.end<0&&(a=!1,(s.close||n.open)&&(s.length+n.length)%3===0&&(s.length%3===0&&n.length%3===0||(a=!0)),!a)){c=r>0&&!e[r-1].open?f[r-1]+1:0,f[t]=t-r+c,f[r]=c,n.open=!1,s.end=t,s.close=!1,i=-1,h=-2;break}-1!==i&&(u[n.marker][(n.open?3:0)+(n.length||0)%3]=i)}}}e.exports=function(e){var t,r=e.tokens_meta,s=e.tokens_meta.length;for(n(e.delimiters),t=0;t<s;t++)r[t]&&r[t].delimiters&&n(r[t].delimiters)}},1864:function(e,t,r){\"use strict\";e.exports=function(e){var t,r,n=0,s=e.tokens,o=e.tokens.length;for(t=r=0;t<o;t++)s[t].nesting<0&&n--,s[t].level=n,s[t].nesting>0&&n++,\"text\"===s[t].type&&t+1<o&&\"text\"===s[t+1].type?s[t+1].content=s[t].content+s[t+1].content:(t!==r&&(s[r]=s[t]),r++);t!==r&&(s.length=r)}},1865:function(e,t,r){\"use strict\";var n=r(327),s=r(57).isWhiteSpace,o=r(57).isPunctChar,i=r(57).isMdAsciiPunct;function a(e,t,r,n){this.src=e,this.env=r,this.md=t,this.tokens=n,this.tokens_meta=Array(n.length),this.pos=0,this.posMax=this.src.length,this.level=0,this.pending=\"\",this.pendingLevel=0,this.cache={},this.delimiters=[],this._prev_delimiters=[],this.backticks={},this.backticksScanned=!1,this.linkLevel=0}a.prototype.pushPending=function(){var e=new n(\"text\",\"\",0);return e.content=this.pending,e.level=this.pendingLevel,this.tokens.push(e),this.pending=\"\",e},a.prototype.push=function(e,t,r){this.pending&&this.pushPending();var s=new n(e,t,r),o=null;return r<0&&(this.level--,this.delimiters=this._prev_delimiters.pop()),s.level=this.level,r>0&&(this.level++,this._prev_delimiters.push(this.delimiters),this.delimiters=[],o={delimiters:this.delimiters}),this.pendingLevel=this.level,this.tokens.push(s),this.tokens_meta.push(o),s},a.prototype.scanDelims=function(e,t){var r,n,a,c,u,l,p,h,f,d=e,m=!0,g=!0,_=this.posMax,k=this.src.charCodeAt(e);for(r=e>0?this.src.charCodeAt(e-1):32;d<_&&this.src.charCodeAt(d)===k;)d++;return a=d-e,n=d<_?this.src.charCodeAt(d):32,p=i(r)||o(String.fromCharCode(r)),f=i(n)||o(String.fromCharCode(n)),l=s(r),(h=s(n))?m=!1:f&&(l||p||(m=!1)),l?g=!1:p&&(h||f||(g=!1)),t?(c=m,u=g):(c=m&&(!g||p),u=g&&(!m||f)),{can_open:c,can_close:u,length:a}},a.prototype.Token=n,e.exports=a},1866:function(e,t,r){\"use strict\";e.exports={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:\"language-\",linkify:!1,typographer:!1,quotes:\"\\u201c\\u201d\\u2018\\u2019\",highlight:null,maxNesting:100},components:{core:{},block:{},inline:{}}}},1867:function(e,t,r){\"use strict\";e.exports={options:{html:!1,xhtmlOut:!1,breaks:!1,langPrefix:\"language-\",linkify:!1,typographer:!1,quotes:\"\\u201c\\u201d\\u2018\\u2019\",highlight:null,maxNesting:20},components:{core:{rules:[\"normalize\",\"block\",\"inline\",\"text_join\"]},block:{rules:[\"paragraph\"]},inline:{rules:[\"text\"],rules2:[\"balance_pairs\",\"fragments_join\"]}}}},1868:function(e,t,r){\"use strict\";e.exports={options:{html:!0,xhtmlOut:!0,breaks:!1,langPrefix:\"language-\",linkify:!1,typographer:!1,quotes:\"\\u201c\\u201d\\u2018\\u2019\",highlight:null,maxNesting:20},components:{core:{rules:[\"normalize\",\"block\",\"inline\",\"text_join\"]},block:{rules:[\"blockquote\",\"code\",\"fence\",\"heading\",\"hr\",\"html_block\",\"lheading\",\"list\",\"reference\",\"paragraph\"]},inline:{rules:[\"autolink\",\"backticks\",\"emphasis\",\"entity\",\"escape\",\"html_inline\",\"image\",\"link\",\"newline\",\"text\"],rules2:[\"balance_pairs\",\"emphasis\",\"fragments_join\"]}}}},286:function(e,t){e.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/},324:function(e,t,r){\"use strict\";e.exports.encode=r(1819),e.exports.decode=r(1820),e.exports.format=r(1821),e.exports.parse=r(1822)},326:function(e,t,r){\"use strict\";function n(){this.__rules__=[],this.__cache__=null}n.prototype.__find__=function(e){for(var t=0;t<this.__rules__.length;t++)if(this.__rules__[t].name===e)return t;return-1},n.prototype.__compile__=function(){var e=this,t=[\"\"];e.__rules__.forEach((function(e){e.enabled&&e.alt.forEach((function(e){t.indexOf(e)<0&&t.push(e)}))})),e.__cache__={},t.forEach((function(t){e.__cache__[t]=[],e.__rules__.forEach((function(r){r.enabled&&(t&&r.alt.indexOf(t)<0||e.__cache__[t].push(r.fn))}))}))},n.prototype.at=function(e,t,r){var n=this.__find__(e),s=r||{};if(-1===n)throw new Error(\"Parser rule not found: \"+e);this.__rules__[n].fn=t,this.__rules__[n].alt=s.alt||[],this.__cache__=null},n.prototype.before=function(e,t,r,n){var s=this.__find__(e),o=n||{};if(-1===s)throw new Error(\"Parser rule not found: \"+e);this.__rules__.splice(s,0,{name:t,enabled:!0,fn:r,alt:o.alt||[]}),this.__cache__=null},n.prototype.after=function(e,t,r,n){var s=this.__find__(e),o=n||{};if(-1===s)throw new Error(\"Parser rule not found: \"+e);this.__rules__.splice(s+1,0,{name:t,enabled:!0,fn:r,alt:o.alt||[]}),this.__cache__=null},n.prototype.push=function(e,t,r){var n=r||{};this.__rules__.push({name:e,enabled:!0,fn:t,alt:n.alt||[]}),this.__cache__=null},n.prototype.enable=function(e,t){Array.isArray(e)||(e=[e]);var r=[];return e.forEach((function(e){var n=this.__find__(e);if(n<0){if(t)return;throw new Error(\"Rules manager: invalid rule name \"+e)}this.__rules__[n].enabled=!0,r.push(e)}),this),this.__cache__=null,r},n.prototype.enableOnly=function(e,t){Array.isArray(e)||(e=[e]),this.__rules__.forEach((function(e){e.enabled=!1})),this.enable(e,t)},n.prototype.disable=function(e,t){Array.isArray(e)||(e=[e]);var r=[];return e.forEach((function(e){var n=this.__find__(e);if(n<0){if(t)return;throw new Error(\"Rules manager: invalid rule name \"+e)}this.__rules__[n].enabled=!1,r.push(e)}),this),this.__cache__=null,r},n.prototype.getRules=function(e){return null===this.__cache__&&this.__compile__(),this.__cache__[e]||[]},e.exports=n},327:function(e,t,r){\"use strict\";function n(e,t,r){this.type=e,this.tag=t,this.attrs=null,this.map=null,this.nesting=r,this.level=0,this.children=null,this.content=\"\",this.markup=\"\",this.info=\"\",this.meta=null,this.block=!1,this.hidden=!1}n.prototype.attrIndex=function(e){var t,r,n;if(!this.attrs)return-1;for(r=0,n=(t=this.attrs).length;r<n;r++)if(t[r][0]===e)return r;return-1},n.prototype.attrPush=function(e){this.attrs?this.attrs.push(e):this.attrs=[e]},n.prototype.attrSet=function(e,t){var r=this.attrIndex(e),n=[e,t];r<0?this.attrPush(n):this.attrs[r]=n},n.prototype.attrGet=function(e){var t=this.attrIndex(e),r=null;return t>=0&&(r=this.attrs[t][1]),r},n.prototype.attrJoin=function(e,t){var r=this.attrIndex(e);r<0?this.attrPush([e,t]):this.attrs[r][1]=this.attrs[r][1]+\" \"+t},e.exports=n},354:function(e,t){e.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/},355:function(e,t){e.exports=/[\\0-\\x1F\\x7F-\\x9F]/},356:function(e,t){e.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/},374:function(e,t){(function(t){e.exports=t}).call(this,{})},375:function(e,t,r){\"use strict\";e.exports=r(1818)},376:function(e,t,r){\"use strict\";var n=\"<[A-Za-z][A-Za-z0-9\\\\-]*(?:\\\\s+[a-zA-Z_:][a-zA-Z0-9:._-]*(?:\\\\s*=\\\\s*(?:[^\\\"'=<>`\\\\x00-\\\\x20]+|'[^']*'|\\\"[^\\\"]*\\\"))?)*\\\\s*\\\\/?>\",s=\"<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>\",o=new RegExp(\"^(?:\"+n+\"|\"+s+\"|\\x3c!----\\x3e|\\x3c!--(?:-?[^>-])(?:-?[^-])*--\\x3e|<[?][\\\\s\\\\S]*?[?]>|<![A-Z]+\\\\s+[^>]*>|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>)\"),i=new RegExp(\"^(?:\"+n+\"|\"+s+\")\");e.exports.HTML_TAG_RE=o,e.exports.HTML_OPEN_CLOSE_TAG_RE=i},377:function(e,t,r){\"use strict\";function n(e,t){var r,n,s,o,i,a=[],c=t.length;for(r=0;r<c;r++)126===(s=t[r]).marker&&-1!==s.end&&(o=t[s.end],(i=e.tokens[s.token]).type=\"s_open\",i.tag=\"s\",i.nesting=1,i.markup=\"~~\",i.content=\"\",(i=e.tokens[o.token]).type=\"s_close\",i.tag=\"s\",i.nesting=-1,i.markup=\"~~\",i.content=\"\",\"text\"===e.tokens[o.token-1].type&&\"~\"===e.tokens[o.token-1].content&&a.push(o.token-1));for(;a.length;){for(n=(r=a.pop())+1;n<e.tokens.length&&\"s_close\"===e.tokens[n].type;)n++;r!==--n&&(i=e.tokens[n],e.tokens[n]=e.tokens[r],e.tokens[r]=i)}}e.exports.tokenize=function(e,t){var r,n,s,o,i=e.pos,a=e.src.charCodeAt(i);if(t)return!1;if(126!==a)return!1;if(s=(n=e.scanDelims(e.pos,!0)).length,o=String.fromCharCode(a),s<2)return!1;for(s%2&&(e.push(\"text\",\"\",0).content=o,s--),r=0;r<s;r+=2)e.push(\"text\",\"\",0).content=o+o,e.delimiters.push({marker:a,length:0,token:e.tokens.length-1,end:-1,open:n.can_open,close:n.can_close});return e.pos+=n.length,!0},e.exports.postProcess=function(e){var t,r=e.tokens_meta,s=e.tokens_meta.length;for(n(e,e.delimiters),t=0;t<s;t++)r[t]&&r[t].delimiters&&n(e,r[t].delimiters)}},378:function(e,t,r){\"use strict\";function n(e,t){var r,n,s,o,i,a;for(r=t.length-1;r>=0;r--)95!==(n=t[r]).marker&&42!==n.marker||-1!==n.end&&(s=t[n.end],a=r>0&&t[r-1].end===n.end+1&&t[r-1].marker===n.marker&&t[r-1].token===n.token-1&&t[n.end+1].token===s.token+1,i=String.fromCharCode(n.marker),(o=e.tokens[n.token]).type=a?\"strong_open\":\"em_open\",o.tag=a?\"strong\":\"em\",o.nesting=1,o.markup=a?i+i:i,o.content=\"\",(o=e.tokens[s.token]).type=a?\"strong_close\":\"em_close\",o.tag=a?\"strong\":\"em\",o.nesting=-1,o.markup=a?i+i:i,o.content=\"\",a&&(e.tokens[t[r-1].token].content=\"\",e.tokens[t[n.end+1].token].content=\"\",r--))}e.exports.tokenize=function(e,t){var r,n,s=e.pos,o=e.src.charCodeAt(s);if(t)return!1;if(95!==o&&42!==o)return!1;for(n=e.scanDelims(e.pos,42===o),r=0;r<n.length;r++)e.push(\"text\",\"\",0).content=String.fromCharCode(o),e.delimiters.push({marker:o,length:n.length,token:e.tokens.length-1,end:-1,open:n.can_open,close:n.can_close});return e.pos+=n.length,!0},e.exports.postProcess=function(e){var t,r=e.tokens_meta,s=e.tokens_meta.length;for(n(e,e.delimiters),t=0;t<s;t++)r[t]&&r[t].delimiters&&n(e,r[t].delimiters)}},57:function(e,t,r){\"use strict\";function n(e){return n=\"function\"===typeof Symbol&&\"symbol\"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},n(e)}var s=Object.prototype.hasOwnProperty;function o(e,t){return s.call(e,t)}function i(e){return!(e>=55296&&e<=57343)&&(!(e>=64976&&e<=65007)&&(65535!==(65535&e)&&65534!==(65535&e)&&(!(e>=0&&e<=8)&&(11!==e&&(!(e>=14&&e<=31)&&(!(e>=127&&e<=159)&&!(e>1114111)))))))}function a(e){if(e>65535){var t=55296+((e-=65536)>>10),r=56320+(1023&e);return String.fromCharCode(t,r)}return String.fromCharCode(e)}var c=/\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g,u=new RegExp(c.source+\"|\"+/&([a-z#][a-z0-9]{1,31});/gi.source,\"gi\"),l=/^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i,p=r(375);var h=/[&<>\"]/,f=/[&<>\"]/g,d={\"&\":\"&amp;\",\"<\":\"&lt;\",\">\":\"&gt;\",'\"':\"&quot;\"};function m(e){return d[e]}var g=/[.?*+^$[\\]\\\\(){}|-]/g;var _=r(286);t.lib={},t.lib.mdurl=r(324),t.lib.ucmicro=r(1782),t.assign=function(e){var t=Array.prototype.slice.call(arguments,1);return t.forEach((function(t){if(t){if(\"object\"!==n(t))throw new TypeError(t+\"must be object\");Object.keys(t).forEach((function(r){e[r]=t[r]}))}})),e},t.isString=function(e){return\"[object String]\"===function(e){return Object.prototype.toString.call(e)}(e)},t.has=o,t.unescapeMd=function(e){return e.indexOf(\"\\\\\")<0?e:e.replace(c,\"$1\")},t.unescapeAll=function(e){return e.indexOf(\"\\\\\")<0&&e.indexOf(\"&\")<0?e:e.replace(u,(function(e,t,r){return t||function(e,t){var r;return o(p,t)?p[t]:35===t.charCodeAt(0)&&l.test(t)&&i(r=\"x\"===t[1].toLowerCase()?parseInt(t.slice(2),16):parseInt(t.slice(1),10))?a(r):e}(e,r)}))},t.isValidEntityCode=i,t.fromCodePoint=a,t.escapeHtml=function(e){return h.test(e)?e.replace(f,m):e},t.arrayReplaceAt=function(e,t,r){return[].concat(e.slice(0,t),r,e.slice(t+1))},t.isSpace=function(e){switch(e){case 9:case 32:return!0}return!1},t.isWhiteSpace=function(e){if(e>=8192&&e<=8202)return!0;switch(e){case 9:case 10:case 11:case 12:case 13:case 32:case 160:case 5760:case 8239:case 8287:case 12288:return!0}return!1},t.isMdAsciiPunct=function(e){switch(e){case 33:case 34:case 35:case 36:case 37:case 38:case 39:case 40:case 41:case 42:case 43:case 44:case 45:case 46:case 47:case 58:case 59:case 60:case 61:case 62:case 63:case 64:case 91:case 92:case 93:case 94:case 95:case 96:case 123:case 124:case 125:case 126:return!0;default:return!1}},t.isPunctChar=function(e){return _.test(e)},t.escapeRE=function(e){return e.replace(g,\"\\\\$&\")},t.normalizeReference=function(e){return e=e.trim().replace(/\\s+/g,\" \"),\"\\u1e7e\"===\"\\u1e9e\".toLowerCase()&&(e=e.replace(/\\u1e9e/g,\"\\xdf\")),e.toLowerCase().toUpperCase()}}}]);","name":"js/4-7f19284728f19a9fdf5a.chunk.js","map":{"version":3,"names":["window","push","module","exports","__webpack_require__","assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","schema_at_start","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","matchAtStart","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","Any","Cc","Cf","P","Z","global","__WEBPACK_AMD_DEFINE_RESULT__","_typeof","Symbol","iterator","constructor","root","freeExports","nodeType","freeModule","freeGlobal","punycode","maxInt","base","regexPunycode","regexNonASCII","regexSeparators","errors","overflow","floor","Math","stringFromCharCode","String","fromCharCode","error","type","RangeError","array","fn","mapDomain","string","parts","ucs2decode","value","extra","output","counter","charCodeAt","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","decode","input","out","basic","j","oldi","w","t","baseMinusT","codePoint","inputLength","i","n","bias","lastIndexOf","splice","encode","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","version","ucs2","toASCII","toUnicode","undefined","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","utils","helpers","Renderer","ParserCore","ParserBlock","ParserInline","mdurl","config","default","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","validateLink","trim","RECODE_HOSTNAME_FOR","normalizeLink","parsed","parse","hostname","protocol","er","format","normalizeLinkText","defaultChars","MarkdownIt","presetName","inline","block","core","renderer","linkify","configure","presets","components","rules","ruler","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","src","env","state","State","process","tokens","render","parseInline","inlineMode","renderInline","JSON","encodeCache","exclude","keepEscaped","l","code","nextCode","cache","ch","toUpperCase","getEncodeCache","encodeURIComponent","componentChars","decodeCache","getDecodeCache","seq","b1","b2","b3","b4","chr","parseInt","slashes","auth","port","pathname","hash","Url","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","javascript","slashedProtocol","https","ftp","gopher","file","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","substr","atSign","hostEnd","host","parseHost","ipv6Hostname","hostparts","part","newpart","validParts","notHost","bit","unshift","qm","u","parseLinkLabel","parseLinkDestination","parseLinkTitle","disableNested","level","found","marker","prevPos","labelEnd","max","posMax","oldPos","md","skipToken","unescapeAll","ok","lines","escapeHtml","default_rules","code_inline","slf","token","renderAttrs","content","code_block","fence","highlighted","tmpAttrs","tmpToken","info","langName","langAttrs","highlight","attrIndex","attrs","langPrefix","image","renderInlineAsText","children","renderToken","hardbreak","xhtmlOut","softbreak","breaks","html_block","html_inline","nextToken","needLf","hidden","nesting","tag","Ruler","_rules","Core","getRules","NEWLINES_RE","NULL_RE","Token","tok","arrayReplaceAt","isLinkClose","currentToken","nodes","ln","lastPos","htmlLinkLevel","fullUrl","urlText","links","blockTokens","markup","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","c","r","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","blkIdx","typographer","isWhiteSpace","isPunctChar","isMdAsciiPunct","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","lastChar","nextChar","isLastPunctChar","isNextPunctChar","isLastWhiteSpace","isNextWhiteSpace","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","quotes","curr","last","StateCore","alt","tokenize","startLine","endLine","prevLine","line","hasEmptyLines","maxNesting","skipEmptyLines","sCount","blkIndent","tight","isEmpty","outTokens","lineMax","isSpace","getLine","bMarks","tShift","eMarks","escapedSplit","isEscaped","current","substring","silent","lineText","nextLine","columns","columnCount","aligns","tableLines","tbodyLines","oldParentType","terminate","terminatorRules","firstCh","secondCh","pop","parentType","getLines","params","mem","haveEndMarker","skipChars","skipSpaces","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","isOutdented","oldLineMax","bsCount","cnt","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","listIndent","Number","min","markTightParagraphs","normalizeReference","_endLine","destEndPos","destEndLineNo","href","label","res","title","references","block_names","HTML_OPEN_CLOSE_TAG_RE","HTML_SEQUENCES","html","tmp","skipSpacesBack","skipCharsBack","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","_rules2","postProcess","pending","pushPending","isTerminatorChar","SCHEME_RE","linkLevel","pmax","ws","ESCAPED","ch1","ch2","origStr","escapedStr","matchStart","matchEnd","openerLength","closerLength","backticksScanned","backticks","labelStart","ref","parseReference","EMAIL_RE","AUTOLINK_RE","HTML_TAG_RE","lc","isLetter","entities","has","isValidEntityCode","fromCodePoint","DIGITAL_RE","NAMED_RE","processDelimiters","delimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","headerIdx","lastTokenIdx","jumps","close","open","tokens_meta","StateInline","pendingLevel","_prev_delimiters","token_meta","scanDelims","canSplitWord","count","can_open","can_close","left_flanking","right_flanking","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","altName","at","opt","before","beforeName","ruleName","after","afterName","chainName","meta","attrPush","attrData","attrSet","attrGet","attrJoin","__webpack_amd_options__","open_tag","close_tag","startDelim","endDelim","loneMarkers","scanned","isStrong","_hasOwnProperty","object","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","ucmicro","TypeError","unescapeMd","escaped","entity","replaceEntityPattern","newElements"],"sources":["js/4-7f19284728f19a9fdf5a.chunk.js"],"mappings":"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"},"input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[4],{\n\n/***/ 1781:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n ////////////////////////////////////////////////////////////////////////////////\n// Helpers\n// Merge objects\n//\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return _class(obj) === '[object Object]';\n}\n\nfunction isRegExp(obj) {\n  return _class(obj) === '[object RegExp]';\n}\n\nfunction isFunction(obj) {\n  return _class(obj) === '[object Function]';\n}\n\nfunction escapeRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp('^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i');\n      }\n\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp('^' + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n        // with code comments\n        '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' + self.re.src_port + self.re.src_host_terminator + self.re.src_path, 'i');\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') {\n          return 0;\n        }\n\n        if (pos >= 3 && text[pos - 3] === '/') {\n          return 0;\n        }\n\n        return tail.match(self.re.no_http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i');\n      }\n\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n\n      return 0;\n    }\n  }\n};\n/*eslint-disable max-len*/\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'; // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\n\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n/*eslint-enable max-len*/\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n} // Schemas compiler. Build regexps.\n//\n\n\nfunction compile(self) {\n  // Load & clone RE patterns.\n  var re = self.re = __webpack_require__(1816)(self.__opts__); // Define dynamic patterns\n\n\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n\n  tlds.push(re.src_xn);\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) {\n    return tpl.replace('%TLDS%', re.src_tlds);\n  }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i'); //\n  // Compile each schema\n  //\n\n  var aliases = [];\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name]; // skip disabled methods\n\n    if (val === null) {\n      return;\n    }\n\n    var compiled = {\n      validate: null,\n      link: null\n    };\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  }); //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n  }); //\n  // Fake record for guessed links\n  //\n\n  self.__compiled__[''] = {\n    validate: null,\n    normalize: createNormalizer()\n  }; //\n  // Build schema condition\n  //\n\n  var slist = Object.keys(self.__compiled__).filter(function (name) {\n    // Filter disabled & fake schemas\n    return name.length > 0 && self.__compiled__[name];\n  }).map(escapeRE).join('|'); // (?!_) cause 1.5x slowdown\n\n  self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n  self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@', 'i'); //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\n\n\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end = self.__last_index__,\n      text = self.__text_cache__.slice(start, end);\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n\n\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n\n  this.url = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\n\n\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options); // Cache last tested result. Used to skip repeating steps on next `match` call.\n\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n  this.re = {};\n  compile(this);\n}\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\n\n\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\n\n\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\n\n\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) {\n    return false;\n  }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos; // try to scan for link with schema - that's the most simple rule\n\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\n\n\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\n\n\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\n\n\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0,\n      result = []; // Try to take previous element from cache, if .test() called before\n\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  } // Cut head if cache was used\n\n\n  var tail = shift ? text.slice(shift) : text; // Scan string until end reached\n\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\n\n\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n  if (!text.length) return null;\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n  this.__schema__ = m[2];\n  this.__index__ = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n  return createMatch(this, 0);\n};\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\n\n\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list).sort().filter(function (el, idx, arr) {\n    return el !== arr[idx - 1];\n  }).reverse();\n  compile(this);\n  return this;\n};\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\n\n\nLinkifyIt.prototype.normalize = function normalize(match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n  if (!match.schema) {\n    match.url = 'http://' + match.url;\n  }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\n\n\nLinkifyIt.prototype.onCompile = function onCompile() {};\n\nmodule.exports = LinkifyIt;\n\n/***/ }),\n\n/***/ 1782:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.Any = __webpack_require__(354);\nexports.Cc = __webpack_require__(355);\nexports.Cf = __webpack_require__(1823);\nexports.P = __webpack_require__(286);\nexports.Z = __webpack_require__(356);\n\n/***/ }),\n\n/***/ 1783:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = ( false ? undefined : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = ( false ? undefined : _typeof(module)) == 'object' && module && !module.nodeType && module;\n  var freeGlobal = (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if ( true && _typeof(__webpack_require__(374)) == 'object' && __webpack_require__(374)) {\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n      return punycode;\n    }).call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(215)(module), __webpack_require__(61)))\n\n/***/ }),\n\n/***/ 1809:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = __webpack_require__(1817);\n\n/***/ }),\n\n/***/ 1816:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {}; // Use direct extract instead of `regenerate` to reduse browserified size\n\n  re.src_Any = __webpack_require__(354).source;\n  re.src_Cc = __webpack_require__(355).source;\n  re.src_Z = __webpack_require__(356).source;\n  re.src_P = __webpack_require__(286).source; // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|'); // \\p{\\Z\\Cc} (white spaces + control)\n\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|'); // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n\n  var text_separators = \"[><\\uFF5C]\"; // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'; // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'; // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n  re.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n  re.src_host_terminator = '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' + '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n  re.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' + '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' + // allow `I'm_king` if no pair found\n  '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n  // github has ... in commit range links,\n  // Restrict to\n  // - english\n  // - percent-encoded\n  // - parts of file path\n  // - params separator\n  // until more examples found.\n  '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' + (opts['---'] ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n  : '\\\\-+|') + ',(?!' + re.src_ZCc + '|$)|' + // allow `,,,` in paths\n  ';(?!' + re.src_ZCc + '|$)|' + // allow `;` if not followed by space-like char\n  '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' + // allow `!!!` in paths, but not at the end\n  '\\\\?(?!' + re.src_ZCc + '|[?]|$)' + ')+' + '|\\\\/' + ')?'; // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n\n  re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n  re.src_xn = 'xn--[a-z0-9\\\\-]{1,59}'; // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root = // Allow letters & digits (http://test1)\n  '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')';\n  re.src_domain = '(?:' + re.src_xn + '|' + '(?:' + re.src_pseudo_letter + ')' + '|' + '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' + ')';\n  re.src_host = '(?:' + // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n  '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain\n  /*_root*/\n  + ')' + ')';\n  re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\n  re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n  re.src_host_strict = re.src_host + re.src_host_terminator;\n  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator; ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n  // Rude test fuzzy links by host, for quick deny\n\n  re.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n  re.tpl_email_fuzzy = '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' + '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n  return re;\n};\n\n/***/ }),\n\n/***/ 1817:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Main parser class\n\n\nvar utils = __webpack_require__(57);\n\nvar helpers = __webpack_require__(1824);\n\nvar Renderer = __webpack_require__(1828);\n\nvar ParserCore = __webpack_require__(1829);\n\nvar ParserBlock = __webpack_require__(1838);\n\nvar ParserInline = __webpack_require__(1852);\n\nvar LinkifyIt = __webpack_require__(1781);\n\nvar mdurl = __webpack_require__(324);\n\nvar punycode = __webpack_require__(1783);\n\nvar config = {\n  default: __webpack_require__(1866),\n  zero: __webpack_require__(1867),\n  commonmark: __webpack_require__(1868)\n}; ////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  } // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n\n\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\n\n\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n\n  this.inline = new ParserInline();\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.block = new ParserBlock();\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.core = new ParserCore();\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n\n  this.renderer = new Renderer();\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n\n  this.linkify = new LinkifyIt();\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n\n  this.validateLink = validateLink;\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n\n  this.normalizeLink = normalizeLink;\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n\n  this.normalizeLinkText = normalizeLinkText; // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n\n  this.utils = utils;\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n\n  this.helpers = utils.assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) {\n    this.set(options);\n  }\n}\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\n\n\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\n\n\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this,\n      presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\n\n\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\n\n\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\n\n\nMarkdownIt.prototype.use = function (plugin\n/*, params, ... */\n) {\n  var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\n\n\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\n\n\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\n\n\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\n\n\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;\n\n/***/ }),\n\n/***/ 1818:\n/***/ (function(module) {\n\nmodule.exports = JSON.parse(\"{\\\"Aacute\\\":\\\"Á\\\",\\\"aacute\\\":\\\"á\\\",\\\"Abreve\\\":\\\"Ă\\\",\\\"abreve\\\":\\\"ă\\\",\\\"ac\\\":\\\"∾\\\",\\\"acd\\\":\\\"∿\\\",\\\"acE\\\":\\\"∾̳\\\",\\\"Acirc\\\":\\\"Â\\\",\\\"acirc\\\":\\\"â\\\",\\\"acute\\\":\\\"´\\\",\\\"Acy\\\":\\\"А\\\",\\\"acy\\\":\\\"а\\\",\\\"AElig\\\":\\\"Æ\\\",\\\"aelig\\\":\\\"æ\\\",\\\"af\\\":\\\"⁡\\\",\\\"Afr\\\":\\\"𝔄\\\",\\\"afr\\\":\\\"𝔞\\\",\\\"Agrave\\\":\\\"À\\\",\\\"agrave\\\":\\\"à\\\",\\\"alefsym\\\":\\\"ℵ\\\",\\\"aleph\\\":\\\"ℵ\\\",\\\"Alpha\\\":\\\"Α\\\",\\\"alpha\\\":\\\"α\\\",\\\"Amacr\\\":\\\"Ā\\\",\\\"amacr\\\":\\\"ā\\\",\\\"amalg\\\":\\\"⨿\\\",\\\"amp\\\":\\\"&\\\",\\\"AMP\\\":\\\"&\\\",\\\"andand\\\":\\\"⩕\\\",\\\"And\\\":\\\"⩓\\\",\\\"and\\\":\\\"∧\\\",\\\"andd\\\":\\\"⩜\\\",\\\"andslope\\\":\\\"⩘\\\",\\\"andv\\\":\\\"⩚\\\",\\\"ang\\\":\\\"∠\\\",\\\"ange\\\":\\\"⦤\\\",\\\"angle\\\":\\\"∠\\\",\\\"angmsdaa\\\":\\\"⦨\\\",\\\"angmsdab\\\":\\\"⦩\\\",\\\"angmsdac\\\":\\\"⦪\\\",\\\"angmsdad\\\":\\\"⦫\\\",\\\"angmsdae\\\":\\\"⦬\\\",\\\"angmsdaf\\\":\\\"⦭\\\",\\\"angmsdag\\\":\\\"⦮\\\",\\\"angmsdah\\\":\\\"⦯\\\",\\\"angmsd\\\":\\\"∡\\\",\\\"angrt\\\":\\\"∟\\\",\\\"angrtvb\\\":\\\"⊾\\\",\\\"angrtvbd\\\":\\\"⦝\\\",\\\"angsph\\\":\\\"∢\\\",\\\"angst\\\":\\\"Å\\\",\\\"angzarr\\\":\\\"⍼\\\",\\\"Aogon\\\":\\\"Ą\\\",\\\"aogon\\\":\\\"ą\\\",\\\"Aopf\\\":\\\"𝔸\\\",\\\"aopf\\\":\\\"𝕒\\\",\\\"apacir\\\":\\\"⩯\\\",\\\"ap\\\":\\\"≈\\\",\\\"apE\\\":\\\"⩰\\\",\\\"ape\\\":\\\"≊\\\",\\\"apid\\\":\\\"≋\\\",\\\"apos\\\":\\\"'\\\",\\\"ApplyFunction\\\":\\\"⁡\\\",\\\"approx\\\":\\\"≈\\\",\\\"approxeq\\\":\\\"≊\\\",\\\"Aring\\\":\\\"Å\\\",\\\"aring\\\":\\\"å\\\",\\\"Ascr\\\":\\\"𝒜\\\",\\\"ascr\\\":\\\"𝒶\\\",\\\"Assign\\\":\\\"≔\\\",\\\"ast\\\":\\\"*\\\",\\\"asymp\\\":\\\"≈\\\",\\\"asympeq\\\":\\\"≍\\\",\\\"Atilde\\\":\\\"Ã\\\",\\\"atilde\\\":\\\"ã\\\",\\\"Auml\\\":\\\"Ä\\\",\\\"auml\\\":\\\"ä\\\",\\\"awconint\\\":\\\"∳\\\",\\\"awint\\\":\\\"⨑\\\",\\\"backcong\\\":\\\"≌\\\",\\\"backepsilon\\\":\\\"϶\\\",\\\"backprime\\\":\\\"‵\\\",\\\"backsim\\\":\\\"∽\\\",\\\"backsimeq\\\":\\\"⋍\\\",\\\"Backslash\\\":\\\"∖\\\",\\\"Barv\\\":\\\"⫧\\\",\\\"barvee\\\":\\\"⊽\\\",\\\"barwed\\\":\\\"⌅\\\",\\\"Barwed\\\":\\\"⌆\\\",\\\"barwedge\\\":\\\"⌅\\\",\\\"bbrk\\\":\\\"⎵\\\",\\\"bbrktbrk\\\":\\\"⎶\\\",\\\"bcong\\\":\\\"≌\\\",\\\"Bcy\\\":\\\"Б\\\",\\\"bcy\\\":\\\"б\\\",\\\"bdquo\\\":\\\"„\\\",\\\"becaus\\\":\\\"∵\\\",\\\"because\\\":\\\"∵\\\",\\\"Because\\\":\\\"∵\\\",\\\"bemptyv\\\":\\\"⦰\\\",\\\"bepsi\\\":\\\"϶\\\",\\\"bernou\\\":\\\"ℬ\\\",\\\"Bernoullis\\\":\\\"ℬ\\\",\\\"Beta\\\":\\\"Β\\\",\\\"beta\\\":\\\"β\\\",\\\"beth\\\":\\\"ℶ\\\",\\\"between\\\":\\\"≬\\\",\\\"Bfr\\\":\\\"𝔅\\\",\\\"bfr\\\":\\\"𝔟\\\",\\\"bigcap\\\":\\\"⋂\\\",\\\"bigcirc\\\":\\\"◯\\\",\\\"bigcup\\\":\\\"⋃\\\",\\\"bigodot\\\":\\\"⨀\\\",\\\"bigoplus\\\":\\\"⨁\\\",\\\"bigotimes\\\":\\\"⨂\\\",\\\"bigsqcup\\\":\\\"⨆\\\",\\\"bigstar\\\":\\\"★\\\",\\\"bigtriangledown\\\":\\\"▽\\\",\\\"bigtriangleup\\\":\\\"△\\\",\\\"biguplus\\\":\\\"⨄\\\",\\\"bigvee\\\":\\\"⋁\\\",\\\"bigwedge\\\":\\\"⋀\\\",\\\"bkarow\\\":\\\"⤍\\\",\\\"blacklozenge\\\":\\\"⧫\\\",\\\"blacksquare\\\":\\\"▪\\\",\\\"blacktriangle\\\":\\\"▴\\\",\\\"blacktriangledown\\\":\\\"▾\\\",\\\"blacktriangleleft\\\":\\\"◂\\\",\\\"blacktriangleright\\\":\\\"▸\\\",\\\"blank\\\":\\\"␣\\\",\\\"blk12\\\":\\\"▒\\\",\\\"blk14\\\":\\\"░\\\",\\\"blk34\\\":\\\"▓\\\",\\\"block\\\":\\\"█\\\",\\\"bne\\\":\\\"=⃥\\\",\\\"bnequiv\\\":\\\"≡⃥\\\",\\\"bNot\\\":\\\"⫭\\\",\\\"bnot\\\":\\\"⌐\\\",\\\"Bopf\\\":\\\"𝔹\\\",\\\"bopf\\\":\\\"𝕓\\\",\\\"bot\\\":\\\"⊥\\\",\\\"bottom\\\":\\\"⊥\\\",\\\"bowtie\\\":\\\"⋈\\\",\\\"boxbox\\\":\\\"⧉\\\",\\\"boxdl\\\":\\\"┐\\\",\\\"boxdL\\\":\\\"╕\\\",\\\"boxDl\\\":\\\"╖\\\",\\\"boxDL\\\":\\\"╗\\\",\\\"boxdr\\\":\\\"┌\\\",\\\"boxdR\\\":\\\"╒\\\",\\\"boxDr\\\":\\\"╓\\\",\\\"boxDR\\\":\\\"╔\\\",\\\"boxh\\\":\\\"─\\\",\\\"boxH\\\":\\\"═\\\",\\\"boxhd\\\":\\\"┬\\\",\\\"boxHd\\\":\\\"╤\\\",\\\"boxhD\\\":\\\"╥\\\",\\\"boxHD\\\":\\\"╦\\\",\\\"boxhu\\\":\\\"┴\\\",\\\"boxHu\\\":\\\"╧\\\",\\\"boxhU\\\":\\\"╨\\\",\\\"boxHU\\\":\\\"╩\\\",\\\"boxminus\\\":\\\"⊟\\\",\\\"boxplus\\\":\\\"⊞\\\",\\\"boxtimes\\\":\\\"⊠\\\",\\\"boxul\\\":\\\"┘\\\",\\\"boxuL\\\":\\\"╛\\\",\\\"boxUl\\\":\\\"╜\\\",\\\"boxUL\\\":\\\"╝\\\",\\\"boxur\\\":\\\"└\\\",\\\"boxuR\\\":\\\"╘\\\",\\\"boxUr\\\":\\\"╙\\\",\\\"boxUR\\\":\\\"╚\\\",\\\"boxv\\\":\\\"│\\\",\\\"boxV\\\":\\\"║\\\",\\\"boxvh\\\":\\\"┼\\\",\\\"boxvH\\\":\\\"╪\\\",\\\"boxVh\\\":\\\"╫\\\",\\\"boxVH\\\":\\\"╬\\\",\\\"boxvl\\\":\\\"┤\\\",\\\"boxvL\\\":\\\"╡\\\",\\\"boxVl\\\":\\\"╢\\\",\\\"boxVL\\\":\\\"╣\\\",\\\"boxvr\\\":\\\"├\\\",\\\"boxvR\\\":\\\"╞\\\",\\\"boxVr\\\":\\\"╟\\\",\\\"boxVR\\\":\\\"╠\\\",\\\"bprime\\\":\\\"‵\\\",\\\"breve\\\":\\\"˘\\\",\\\"Breve\\\":\\\"˘\\\",\\\"brvbar\\\":\\\"¦\\\",\\\"bscr\\\":\\\"𝒷\\\",\\\"Bscr\\\":\\\"ℬ\\\",\\\"bsemi\\\":\\\"⁏\\\",\\\"bsim\\\":\\\"∽\\\",\\\"bsime\\\":\\\"⋍\\\",\\\"bsolb\\\":\\\"⧅\\\",\\\"bsol\\\":\\\"\\\\\\\\\\\",\\\"bsolhsub\\\":\\\"⟈\\\",\\\"bull\\\":\\\"•\\\",\\\"bullet\\\":\\\"•\\\",\\\"bump\\\":\\\"≎\\\",\\\"bumpE\\\":\\\"⪮\\\",\\\"bumpe\\\":\\\"≏\\\",\\\"Bumpeq\\\":\\\"≎\\\",\\\"bumpeq\\\":\\\"≏\\\",\\\"Cacute\\\":\\\"Ć\\\",\\\"cacute\\\":\\\"ć\\\",\\\"capand\\\":\\\"⩄\\\",\\\"capbrcup\\\":\\\"⩉\\\",\\\"capcap\\\":\\\"⩋\\\",\\\"cap\\\":\\\"∩\\\",\\\"Cap\\\":\\\"⋒\\\",\\\"capcup\\\":\\\"⩇\\\",\\\"capdot\\\":\\\"⩀\\\",\\\"CapitalDifferentialD\\\":\\\"ⅅ\\\",\\\"caps\\\":\\\"∩︀\\\",\\\"caret\\\":\\\"⁁\\\",\\\"caron\\\":\\\"ˇ\\\",\\\"Cayleys\\\":\\\"ℭ\\\",\\\"ccaps\\\":\\\"⩍\\\",\\\"Ccaron\\\":\\\"Č\\\",\\\"ccaron\\\":\\\"č\\\",\\\"Ccedil\\\":\\\"Ç\\\",\\\"ccedil\\\":\\\"ç\\\",\\\"Ccirc\\\":\\\"Ĉ\\\",\\\"ccirc\\\":\\\"ĉ\\\",\\\"Cconint\\\":\\\"∰\\\",\\\"ccups\\\":\\\"⩌\\\",\\\"ccupssm\\\":\\\"⩐\\\",\\\"Cdot\\\":\\\"Ċ\\\",\\\"cdot\\\":\\\"ċ\\\",\\\"cedil\\\":\\\"¸\\\",\\\"Cedilla\\\":\\\"¸\\\",\\\"cemptyv\\\":\\\"⦲\\\",\\\"cent\\\":\\\"¢\\\",\\\"centerdot\\\":\\\"·\\\",\\\"CenterDot\\\":\\\"·\\\",\\\"cfr\\\":\\\"𝔠\\\",\\\"Cfr\\\":\\\"ℭ\\\",\\\"CHcy\\\":\\\"Ч\\\",\\\"chcy\\\":\\\"ч\\\",\\\"check\\\":\\\"✓\\\",\\\"checkmark\\\":\\\"✓\\\",\\\"Chi\\\":\\\"Χ\\\",\\\"chi\\\":\\\"χ\\\",\\\"circ\\\":\\\"ˆ\\\",\\\"circeq\\\":\\\"≗\\\",\\\"circlearrowleft\\\":\\\"↺\\\",\\\"circlearrowright\\\":\\\"↻\\\",\\\"circledast\\\":\\\"⊛\\\",\\\"circledcirc\\\":\\\"⊚\\\",\\\"circleddash\\\":\\\"⊝\\\",\\\"CircleDot\\\":\\\"⊙\\\",\\\"circledR\\\":\\\"®\\\",\\\"circledS\\\":\\\"Ⓢ\\\",\\\"CircleMinus\\\":\\\"⊖\\\",\\\"CirclePlus\\\":\\\"⊕\\\",\\\"CircleTimes\\\":\\\"⊗\\\",\\\"cir\\\":\\\"○\\\",\\\"cirE\\\":\\\"⧃\\\",\\\"cire\\\":\\\"≗\\\",\\\"cirfnint\\\":\\\"⨐\\\",\\\"cirmid\\\":\\\"⫯\\\",\\\"cirscir\\\":\\\"⧂\\\",\\\"ClockwiseContourIntegral\\\":\\\"∲\\\",\\\"CloseCurlyDoubleQuote\\\":\\\"”\\\",\\\"CloseCurlyQuote\\\":\\\"’\\\",\\\"clubs\\\":\\\"♣\\\",\\\"clubsuit\\\":\\\"♣\\\",\\\"colon\\\":\\\":\\\",\\\"Colon\\\":\\\"∷\\\",\\\"Colone\\\":\\\"⩴\\\",\\\"colone\\\":\\\"≔\\\",\\\"coloneq\\\":\\\"≔\\\",\\\"comma\\\":\\\",\\\",\\\"commat\\\":\\\"@\\\",\\\"comp\\\":\\\"∁\\\",\\\"compfn\\\":\\\"∘\\\",\\\"complement\\\":\\\"∁\\\",\\\"complexes\\\":\\\"ℂ\\\",\\\"cong\\\":\\\"≅\\\",\\\"congdot\\\":\\\"⩭\\\",\\\"Congruent\\\":\\\"≡\\\",\\\"conint\\\":\\\"∮\\\",\\\"Conint\\\":\\\"∯\\\",\\\"ContourIntegral\\\":\\\"∮\\\",\\\"copf\\\":\\\"𝕔\\\",\\\"Copf\\\":\\\"ℂ\\\",\\\"coprod\\\":\\\"∐\\\",\\\"Coproduct\\\":\\\"∐\\\",\\\"copy\\\":\\\"©\\\",\\\"COPY\\\":\\\"©\\\",\\\"copysr\\\":\\\"℗\\\",\\\"CounterClockwiseContourIntegral\\\":\\\"∳\\\",\\\"crarr\\\":\\\"↵\\\",\\\"cross\\\":\\\"✗\\\",\\\"Cross\\\":\\\"⨯\\\",\\\"Cscr\\\":\\\"𝒞\\\",\\\"cscr\\\":\\\"𝒸\\\",\\\"csub\\\":\\\"⫏\\\",\\\"csube\\\":\\\"⫑\\\",\\\"csup\\\":\\\"⫐\\\",\\\"csupe\\\":\\\"⫒\\\",\\\"ctdot\\\":\\\"⋯\\\",\\\"cudarrl\\\":\\\"⤸\\\",\\\"cudarrr\\\":\\\"⤵\\\",\\\"cuepr\\\":\\\"⋞\\\",\\\"cuesc\\\":\\\"⋟\\\",\\\"cularr\\\":\\\"↶\\\",\\\"cularrp\\\":\\\"⤽\\\",\\\"cupbrcap\\\":\\\"⩈\\\",\\\"cupcap\\\":\\\"⩆\\\",\\\"CupCap\\\":\\\"≍\\\",\\\"cup\\\":\\\"∪\\\",\\\"Cup\\\":\\\"⋓\\\",\\\"cupcup\\\":\\\"⩊\\\",\\\"cupdot\\\":\\\"⊍\\\",\\\"cupor\\\":\\\"⩅\\\",\\\"cups\\\":\\\"∪︀\\\",\\\"curarr\\\":\\\"↷\\\",\\\"curarrm\\\":\\\"⤼\\\",\\\"curlyeqprec\\\":\\\"⋞\\\",\\\"curlyeqsucc\\\":\\\"⋟\\\",\\\"curlyvee\\\":\\\"⋎\\\",\\\"curlywedge\\\":\\\"⋏\\\",\\\"curren\\\":\\\"¤\\\",\\\"curvearrowleft\\\":\\\"↶\\\",\\\"curvearrowright\\\":\\\"↷\\\",\\\"cuvee\\\":\\\"⋎\\\",\\\"cuwed\\\":\\\"⋏\\\",\\\"cwconint\\\":\\\"∲\\\",\\\"cwint\\\":\\\"∱\\\",\\\"cylcty\\\":\\\"⌭\\\",\\\"dagger\\\":\\\"†\\\",\\\"Dagger\\\":\\\"‡\\\",\\\"daleth\\\":\\\"ℸ\\\",\\\"darr\\\":\\\"↓\\\",\\\"Darr\\\":\\\"↡\\\",\\\"dArr\\\":\\\"⇓\\\",\\\"dash\\\":\\\"‐\\\",\\\"Dashv\\\":\\\"⫤\\\",\\\"dashv\\\":\\\"⊣\\\",\\\"dbkarow\\\":\\\"⤏\\\",\\\"dblac\\\":\\\"˝\\\",\\\"Dcaron\\\":\\\"Ď\\\",\\\"dcaron\\\":\\\"ď\\\",\\\"Dcy\\\":\\\"Д\\\",\\\"dcy\\\":\\\"д\\\",\\\"ddagger\\\":\\\"‡\\\",\\\"ddarr\\\":\\\"⇊\\\",\\\"DD\\\":\\\"ⅅ\\\",\\\"dd\\\":\\\"ⅆ\\\",\\\"DDotrahd\\\":\\\"⤑\\\",\\\"ddotseq\\\":\\\"⩷\\\",\\\"deg\\\":\\\"°\\\",\\\"Del\\\":\\\"∇\\\",\\\"Delta\\\":\\\"Δ\\\",\\\"delta\\\":\\\"δ\\\",\\\"demptyv\\\":\\\"⦱\\\",\\\"dfisht\\\":\\\"⥿\\\",\\\"Dfr\\\":\\\"𝔇\\\",\\\"dfr\\\":\\\"𝔡\\\",\\\"dHar\\\":\\\"⥥\\\",\\\"dharl\\\":\\\"⇃\\\",\\\"dharr\\\":\\\"⇂\\\",\\\"DiacriticalAcute\\\":\\\"´\\\",\\\"DiacriticalDot\\\":\\\"˙\\\",\\\"DiacriticalDoubleAcute\\\":\\\"˝\\\",\\\"DiacriticalGrave\\\":\\\"`\\\",\\\"DiacriticalTilde\\\":\\\"˜\\\",\\\"diam\\\":\\\"⋄\\\",\\\"diamond\\\":\\\"⋄\\\",\\\"Diamond\\\":\\\"⋄\\\",\\\"diamondsuit\\\":\\\"♦\\\",\\\"diams\\\":\\\"♦\\\",\\\"die\\\":\\\"¨\\\",\\\"DifferentialD\\\":\\\"ⅆ\\\",\\\"digamma\\\":\\\"ϝ\\\",\\\"disin\\\":\\\"⋲\\\",\\\"div\\\":\\\"÷\\\",\\\"divide\\\":\\\"÷\\\",\\\"divideontimes\\\":\\\"⋇\\\",\\\"divonx\\\":\\\"⋇\\\",\\\"DJcy\\\":\\\"Ђ\\\",\\\"djcy\\\":\\\"ђ\\\",\\\"dlcorn\\\":\\\"⌞\\\",\\\"dlcrop\\\":\\\"⌍\\\",\\\"dollar\\\":\\\"$\\\",\\\"Dopf\\\":\\\"𝔻\\\",\\\"dopf\\\":\\\"𝕕\\\",\\\"Dot\\\":\\\"¨\\\",\\\"dot\\\":\\\"˙\\\",\\\"DotDot\\\":\\\"⃜\\\",\\\"doteq\\\":\\\"≐\\\",\\\"doteqdot\\\":\\\"≑\\\",\\\"DotEqual\\\":\\\"≐\\\",\\\"dotminus\\\":\\\"∸\\\",\\\"dotplus\\\":\\\"∔\\\",\\\"dotsquare\\\":\\\"⊡\\\",\\\"doublebarwedge\\\":\\\"⌆\\\",\\\"DoubleContourIntegral\\\":\\\"∯\\\",\\\"DoubleDot\\\":\\\"¨\\\",\\\"DoubleDownArrow\\\":\\\"⇓\\\",\\\"DoubleLeftArrow\\\":\\\"⇐\\\",\\\"DoubleLeftRightArrow\\\":\\\"⇔\\\",\\\"DoubleLeftTee\\\":\\\"⫤\\\",\\\"DoubleLongLeftArrow\\\":\\\"⟸\\\",\\\"DoubleLongLeftRightArrow\\\":\\\"⟺\\\",\\\"DoubleLongRightArrow\\\":\\\"⟹\\\",\\\"DoubleRightArrow\\\":\\\"⇒\\\",\\\"DoubleRightTee\\\":\\\"⊨\\\",\\\"DoubleUpArrow\\\":\\\"⇑\\\",\\\"DoubleUpDownArrow\\\":\\\"⇕\\\",\\\"DoubleVerticalBar\\\":\\\"∥\\\",\\\"DownArrowBar\\\":\\\"⤓\\\",\\\"downarrow\\\":\\\"↓\\\",\\\"DownArrow\\\":\\\"↓\\\",\\\"Downarrow\\\":\\\"⇓\\\",\\\"DownArrowUpArrow\\\":\\\"⇵\\\",\\\"DownBreve\\\":\\\"̑\\\",\\\"downdownarrows\\\":\\\"⇊\\\",\\\"downharpoonleft\\\":\\\"⇃\\\",\\\"downharpoonright\\\":\\\"⇂\\\",\\\"DownLeftRightVector\\\":\\\"⥐\\\",\\\"DownLeftTeeVector\\\":\\\"⥞\\\",\\\"DownLeftVectorBar\\\":\\\"⥖\\\",\\\"DownLeftVector\\\":\\\"↽\\\",\\\"DownRightTeeVector\\\":\\\"⥟\\\",\\\"DownRightVectorBar\\\":\\\"⥗\\\",\\\"DownRightVector\\\":\\\"⇁\\\",\\\"DownTeeArrow\\\":\\\"↧\\\",\\\"DownTee\\\":\\\"⊤\\\",\\\"drbkarow\\\":\\\"⤐\\\",\\\"drcorn\\\":\\\"⌟\\\",\\\"drcrop\\\":\\\"⌌\\\",\\\"Dscr\\\":\\\"𝒟\\\",\\\"dscr\\\":\\\"𝒹\\\",\\\"DScy\\\":\\\"Ѕ\\\",\\\"dscy\\\":\\\"ѕ\\\",\\\"dsol\\\":\\\"⧶\\\",\\\"Dstrok\\\":\\\"Đ\\\",\\\"dstrok\\\":\\\"đ\\\",\\\"dtdot\\\":\\\"⋱\\\",\\\"dtri\\\":\\\"▿\\\",\\\"dtrif\\\":\\\"▾\\\",\\\"duarr\\\":\\\"⇵\\\",\\\"duhar\\\":\\\"⥯\\\",\\\"dwangle\\\":\\\"⦦\\\",\\\"DZcy\\\":\\\"Џ\\\",\\\"dzcy\\\":\\\"џ\\\",\\\"dzigrarr\\\":\\\"⟿\\\",\\\"Eacute\\\":\\\"É\\\",\\\"eacute\\\":\\\"é\\\",\\\"easter\\\":\\\"⩮\\\",\\\"Ecaron\\\":\\\"Ě\\\",\\\"ecaron\\\":\\\"ě\\\",\\\"Ecirc\\\":\\\"Ê\\\",\\\"ecirc\\\":\\\"ê\\\",\\\"ecir\\\":\\\"≖\\\",\\\"ecolon\\\":\\\"≕\\\",\\\"Ecy\\\":\\\"Э\\\",\\\"ecy\\\":\\\"э\\\",\\\"eDDot\\\":\\\"⩷\\\",\\\"Edot\\\":\\\"Ė\\\",\\\"edot\\\":\\\"ė\\\",\\\"eDot\\\":\\\"≑\\\",\\\"ee\\\":\\\"ⅇ\\\",\\\"efDot\\\":\\\"≒\\\",\\\"Efr\\\":\\\"𝔈\\\",\\\"efr\\\":\\\"𝔢\\\",\\\"eg\\\":\\\"⪚\\\",\\\"Egrave\\\":\\\"È\\\",\\\"egrave\\\":\\\"è\\\",\\\"egs\\\":\\\"⪖\\\",\\\"egsdot\\\":\\\"⪘\\\",\\\"el\\\":\\\"⪙\\\",\\\"Element\\\":\\\"∈\\\",\\\"elinters\\\":\\\"⏧\\\",\\\"ell\\\":\\\"ℓ\\\",\\\"els\\\":\\\"⪕\\\",\\\"elsdot\\\":\\\"⪗\\\",\\\"Emacr\\\":\\\"Ē\\\",\\\"emacr\\\":\\\"ē\\\",\\\"empty\\\":\\\"∅\\\",\\\"emptyset\\\":\\\"∅\\\",\\\"EmptySmallSquare\\\":\\\"◻\\\",\\\"emptyv\\\":\\\"∅\\\",\\\"EmptyVerySmallSquare\\\":\\\"▫\\\",\\\"emsp13\\\":\\\" \\\",\\\"emsp14\\\":\\\" \\\",\\\"emsp\\\":\\\" \\\",\\\"ENG\\\":\\\"Ŋ\\\",\\\"eng\\\":\\\"ŋ\\\",\\\"ensp\\\":\\\" \\\",\\\"Eogon\\\":\\\"Ę\\\",\\\"eogon\\\":\\\"ę\\\",\\\"Eopf\\\":\\\"𝔼\\\",\\\"eopf\\\":\\\"𝕖\\\",\\\"epar\\\":\\\"⋕\\\",\\\"eparsl\\\":\\\"⧣\\\",\\\"eplus\\\":\\\"⩱\\\",\\\"epsi\\\":\\\"ε\\\",\\\"Epsilon\\\":\\\"Ε\\\",\\\"epsilon\\\":\\\"ε\\\",\\\"epsiv\\\":\\\"ϵ\\\",\\\"eqcirc\\\":\\\"≖\\\",\\\"eqcolon\\\":\\\"≕\\\",\\\"eqsim\\\":\\\"≂\\\",\\\"eqslantgtr\\\":\\\"⪖\\\",\\\"eqslantless\\\":\\\"⪕\\\",\\\"Equal\\\":\\\"⩵\\\",\\\"equals\\\":\\\"=\\\",\\\"EqualTilde\\\":\\\"≂\\\",\\\"equest\\\":\\\"≟\\\",\\\"Equilibrium\\\":\\\"⇌\\\",\\\"equiv\\\":\\\"≡\\\",\\\"equivDD\\\":\\\"⩸\\\",\\\"eqvparsl\\\":\\\"⧥\\\",\\\"erarr\\\":\\\"⥱\\\",\\\"erDot\\\":\\\"≓\\\",\\\"escr\\\":\\\"ℯ\\\",\\\"Escr\\\":\\\"ℰ\\\",\\\"esdot\\\":\\\"≐\\\",\\\"Esim\\\":\\\"⩳\\\",\\\"esim\\\":\\\"≂\\\",\\\"Eta\\\":\\\"Η\\\",\\\"eta\\\":\\\"η\\\",\\\"ETH\\\":\\\"Ð\\\",\\\"eth\\\":\\\"ð\\\",\\\"Euml\\\":\\\"Ë\\\",\\\"euml\\\":\\\"ë\\\",\\\"euro\\\":\\\"€\\\",\\\"excl\\\":\\\"!\\\",\\\"exist\\\":\\\"∃\\\",\\\"Exists\\\":\\\"∃\\\",\\\"expectation\\\":\\\"ℰ\\\",\\\"exponentiale\\\":\\\"ⅇ\\\",\\\"ExponentialE\\\":\\\"ⅇ\\\",\\\"fallingdotseq\\\":\\\"≒\\\",\\\"Fcy\\\":\\\"Ф\\\",\\\"fcy\\\":\\\"ф\\\",\\\"female\\\":\\\"♀\\\",\\\"ffilig\\\":\\\"ﬃ\\\",\\\"fflig\\\":\\\"ﬀ\\\",\\\"ffllig\\\":\\\"ﬄ\\\",\\\"Ffr\\\":\\\"𝔉\\\",\\\"ffr\\\":\\\"𝔣\\\",\\\"filig\\\":\\\"ﬁ\\\",\\\"FilledSmallSquare\\\":\\\"◼\\\",\\\"FilledVerySmallSquare\\\":\\\"▪\\\",\\\"fjlig\\\":\\\"fj\\\",\\\"flat\\\":\\\"♭\\\",\\\"fllig\\\":\\\"ﬂ\\\",\\\"fltns\\\":\\\"▱\\\",\\\"fnof\\\":\\\"ƒ\\\",\\\"Fopf\\\":\\\"𝔽\\\",\\\"fopf\\\":\\\"𝕗\\\",\\\"forall\\\":\\\"∀\\\",\\\"ForAll\\\":\\\"∀\\\",\\\"fork\\\":\\\"⋔\\\",\\\"forkv\\\":\\\"⫙\\\",\\\"Fouriertrf\\\":\\\"ℱ\\\",\\\"fpartint\\\":\\\"⨍\\\",\\\"frac12\\\":\\\"½\\\",\\\"frac13\\\":\\\"⅓\\\",\\\"frac14\\\":\\\"¼\\\",\\\"frac15\\\":\\\"⅕\\\",\\\"frac16\\\":\\\"⅙\\\",\\\"frac18\\\":\\\"⅛\\\",\\\"frac23\\\":\\\"⅔\\\",\\\"frac25\\\":\\\"⅖\\\",\\\"frac34\\\":\\\"¾\\\",\\\"frac35\\\":\\\"⅗\\\",\\\"frac38\\\":\\\"⅜\\\",\\\"frac45\\\":\\\"⅘\\\",\\\"frac56\\\":\\\"⅚\\\",\\\"frac58\\\":\\\"⅝\\\",\\\"frac78\\\":\\\"⅞\\\",\\\"frasl\\\":\\\"⁄\\\",\\\"frown\\\":\\\"⌢\\\",\\\"fscr\\\":\\\"𝒻\\\",\\\"Fscr\\\":\\\"ℱ\\\",\\\"gacute\\\":\\\"ǵ\\\",\\\"Gamma\\\":\\\"Γ\\\",\\\"gamma\\\":\\\"γ\\\",\\\"Gammad\\\":\\\"Ϝ\\\",\\\"gammad\\\":\\\"ϝ\\\",\\\"gap\\\":\\\"⪆\\\",\\\"Gbreve\\\":\\\"Ğ\\\",\\\"gbreve\\\":\\\"ğ\\\",\\\"Gcedil\\\":\\\"Ģ\\\",\\\"Gcirc\\\":\\\"Ĝ\\\",\\\"gcirc\\\":\\\"ĝ\\\",\\\"Gcy\\\":\\\"Г\\\",\\\"gcy\\\":\\\"г\\\",\\\"Gdot\\\":\\\"Ġ\\\",\\\"gdot\\\":\\\"ġ\\\",\\\"ge\\\":\\\"≥\\\",\\\"gE\\\":\\\"≧\\\",\\\"gEl\\\":\\\"⪌\\\",\\\"gel\\\":\\\"⋛\\\",\\\"geq\\\":\\\"≥\\\",\\\"geqq\\\":\\\"≧\\\",\\\"geqslant\\\":\\\"⩾\\\",\\\"gescc\\\":\\\"⪩\\\",\\\"ges\\\":\\\"⩾\\\",\\\"gesdot\\\":\\\"⪀\\\",\\\"gesdoto\\\":\\\"⪂\\\",\\\"gesdotol\\\":\\\"⪄\\\",\\\"gesl\\\":\\\"⋛︀\\\",\\\"gesles\\\":\\\"⪔\\\",\\\"Gfr\\\":\\\"𝔊\\\",\\\"gfr\\\":\\\"𝔤\\\",\\\"gg\\\":\\\"≫\\\",\\\"Gg\\\":\\\"⋙\\\",\\\"ggg\\\":\\\"⋙\\\",\\\"gimel\\\":\\\"ℷ\\\",\\\"GJcy\\\":\\\"Ѓ\\\",\\\"gjcy\\\":\\\"ѓ\\\",\\\"gla\\\":\\\"⪥\\\",\\\"gl\\\":\\\"≷\\\",\\\"glE\\\":\\\"⪒\\\",\\\"glj\\\":\\\"⪤\\\",\\\"gnap\\\":\\\"⪊\\\",\\\"gnapprox\\\":\\\"⪊\\\",\\\"gne\\\":\\\"⪈\\\",\\\"gnE\\\":\\\"≩\\\",\\\"gneq\\\":\\\"⪈\\\",\\\"gneqq\\\":\\\"≩\\\",\\\"gnsim\\\":\\\"⋧\\\",\\\"Gopf\\\":\\\"𝔾\\\",\\\"gopf\\\":\\\"𝕘\\\",\\\"grave\\\":\\\"`\\\",\\\"GreaterEqual\\\":\\\"≥\\\",\\\"GreaterEqualLess\\\":\\\"⋛\\\",\\\"GreaterFullEqual\\\":\\\"≧\\\",\\\"GreaterGreater\\\":\\\"⪢\\\",\\\"GreaterLess\\\":\\\"≷\\\",\\\"GreaterSlantEqual\\\":\\\"⩾\\\",\\\"GreaterTilde\\\":\\\"≳\\\",\\\"Gscr\\\":\\\"𝒢\\\",\\\"gscr\\\":\\\"ℊ\\\",\\\"gsim\\\":\\\"≳\\\",\\\"gsime\\\":\\\"⪎\\\",\\\"gsiml\\\":\\\"⪐\\\",\\\"gtcc\\\":\\\"⪧\\\",\\\"gtcir\\\":\\\"⩺\\\",\\\"gt\\\":\\\">\\\",\\\"GT\\\":\\\">\\\",\\\"Gt\\\":\\\"≫\\\",\\\"gtdot\\\":\\\"⋗\\\",\\\"gtlPar\\\":\\\"⦕\\\",\\\"gtquest\\\":\\\"⩼\\\",\\\"gtrapprox\\\":\\\"⪆\\\",\\\"gtrarr\\\":\\\"⥸\\\",\\\"gtrdot\\\":\\\"⋗\\\",\\\"gtreqless\\\":\\\"⋛\\\",\\\"gtreqqless\\\":\\\"⪌\\\",\\\"gtrless\\\":\\\"≷\\\",\\\"gtrsim\\\":\\\"≳\\\",\\\"gvertneqq\\\":\\\"≩︀\\\",\\\"gvnE\\\":\\\"≩︀\\\",\\\"Hacek\\\":\\\"ˇ\\\",\\\"hairsp\\\":\\\" \\\",\\\"half\\\":\\\"½\\\",\\\"hamilt\\\":\\\"ℋ\\\",\\\"HARDcy\\\":\\\"Ъ\\\",\\\"hardcy\\\":\\\"ъ\\\",\\\"harrcir\\\":\\\"⥈\\\",\\\"harr\\\":\\\"↔\\\",\\\"hArr\\\":\\\"⇔\\\",\\\"harrw\\\":\\\"↭\\\",\\\"Hat\\\":\\\"^\\\",\\\"hbar\\\":\\\"ℏ\\\",\\\"Hcirc\\\":\\\"Ĥ\\\",\\\"hcirc\\\":\\\"ĥ\\\",\\\"hearts\\\":\\\"♥\\\",\\\"heartsuit\\\":\\\"♥\\\",\\\"hellip\\\":\\\"…\\\",\\\"hercon\\\":\\\"⊹\\\",\\\"hfr\\\":\\\"𝔥\\\",\\\"Hfr\\\":\\\"ℌ\\\",\\\"HilbertSpace\\\":\\\"ℋ\\\",\\\"hksearow\\\":\\\"⤥\\\",\\\"hkswarow\\\":\\\"⤦\\\",\\\"hoarr\\\":\\\"⇿\\\",\\\"homtht\\\":\\\"∻\\\",\\\"hookleftarrow\\\":\\\"↩\\\",\\\"hookrightarrow\\\":\\\"↪\\\",\\\"hopf\\\":\\\"𝕙\\\",\\\"Hopf\\\":\\\"ℍ\\\",\\\"horbar\\\":\\\"―\\\",\\\"HorizontalLine\\\":\\\"─\\\",\\\"hscr\\\":\\\"𝒽\\\",\\\"Hscr\\\":\\\"ℋ\\\",\\\"hslash\\\":\\\"ℏ\\\",\\\"Hstrok\\\":\\\"Ħ\\\",\\\"hstrok\\\":\\\"ħ\\\",\\\"HumpDownHump\\\":\\\"≎\\\",\\\"HumpEqual\\\":\\\"≏\\\",\\\"hybull\\\":\\\"⁃\\\",\\\"hyphen\\\":\\\"‐\\\",\\\"Iacute\\\":\\\"Í\\\",\\\"iacute\\\":\\\"í\\\",\\\"ic\\\":\\\"⁣\\\",\\\"Icirc\\\":\\\"Î\\\",\\\"icirc\\\":\\\"î\\\",\\\"Icy\\\":\\\"И\\\",\\\"icy\\\":\\\"и\\\",\\\"Idot\\\":\\\"İ\\\",\\\"IEcy\\\":\\\"Е\\\",\\\"iecy\\\":\\\"е\\\",\\\"iexcl\\\":\\\"¡\\\",\\\"iff\\\":\\\"⇔\\\",\\\"ifr\\\":\\\"𝔦\\\",\\\"Ifr\\\":\\\"ℑ\\\",\\\"Igrave\\\":\\\"Ì\\\",\\\"igrave\\\":\\\"ì\\\",\\\"ii\\\":\\\"ⅈ\\\",\\\"iiiint\\\":\\\"⨌\\\",\\\"iiint\\\":\\\"∭\\\",\\\"iinfin\\\":\\\"⧜\\\",\\\"iiota\\\":\\\"℩\\\",\\\"IJlig\\\":\\\"Ĳ\\\",\\\"ijlig\\\":\\\"ĳ\\\",\\\"Imacr\\\":\\\"Ī\\\",\\\"imacr\\\":\\\"ī\\\",\\\"image\\\":\\\"ℑ\\\",\\\"ImaginaryI\\\":\\\"ⅈ\\\",\\\"imagline\\\":\\\"ℐ\\\",\\\"imagpart\\\":\\\"ℑ\\\",\\\"imath\\\":\\\"ı\\\",\\\"Im\\\":\\\"ℑ\\\",\\\"imof\\\":\\\"⊷\\\",\\\"imped\\\":\\\"Ƶ\\\",\\\"Implies\\\":\\\"⇒\\\",\\\"incare\\\":\\\"℅\\\",\\\"in\\\":\\\"∈\\\",\\\"infin\\\":\\\"∞\\\",\\\"infintie\\\":\\\"⧝\\\",\\\"inodot\\\":\\\"ı\\\",\\\"intcal\\\":\\\"⊺\\\",\\\"int\\\":\\\"∫\\\",\\\"Int\\\":\\\"∬\\\",\\\"integers\\\":\\\"ℤ\\\",\\\"Integral\\\":\\\"∫\\\",\\\"intercal\\\":\\\"⊺\\\",\\\"Intersection\\\":\\\"⋂\\\",\\\"intlarhk\\\":\\\"⨗\\\",\\\"intprod\\\":\\\"⨼\\\",\\\"InvisibleComma\\\":\\\"⁣\\\",\\\"InvisibleTimes\\\":\\\"⁢\\\",\\\"IOcy\\\":\\\"Ё\\\",\\\"iocy\\\":\\\"ё\\\",\\\"Iogon\\\":\\\"Į\\\",\\\"iogon\\\":\\\"į\\\",\\\"Iopf\\\":\\\"𝕀\\\",\\\"iopf\\\":\\\"𝕚\\\",\\\"Iota\\\":\\\"Ι\\\",\\\"iota\\\":\\\"ι\\\",\\\"iprod\\\":\\\"⨼\\\",\\\"iquest\\\":\\\"¿\\\",\\\"iscr\\\":\\\"𝒾\\\",\\\"Iscr\\\":\\\"ℐ\\\",\\\"isin\\\":\\\"∈\\\",\\\"isindot\\\":\\\"⋵\\\",\\\"isinE\\\":\\\"⋹\\\",\\\"isins\\\":\\\"⋴\\\",\\\"isinsv\\\":\\\"⋳\\\",\\\"isinv\\\":\\\"∈\\\",\\\"it\\\":\\\"⁢\\\",\\\"Itilde\\\":\\\"Ĩ\\\",\\\"itilde\\\":\\\"ĩ\\\",\\\"Iukcy\\\":\\\"І\\\",\\\"iukcy\\\":\\\"і\\\",\\\"Iuml\\\":\\\"Ï\\\",\\\"iuml\\\":\\\"ï\\\",\\\"Jcirc\\\":\\\"Ĵ\\\",\\\"jcirc\\\":\\\"ĵ\\\",\\\"Jcy\\\":\\\"Й\\\",\\\"jcy\\\":\\\"й\\\",\\\"Jfr\\\":\\\"𝔍\\\",\\\"jfr\\\":\\\"𝔧\\\",\\\"jmath\\\":\\\"ȷ\\\",\\\"Jopf\\\":\\\"𝕁\\\",\\\"jopf\\\":\\\"𝕛\\\",\\\"Jscr\\\":\\\"𝒥\\\",\\\"jscr\\\":\\\"𝒿\\\",\\\"Jsercy\\\":\\\"Ј\\\",\\\"jsercy\\\":\\\"ј\\\",\\\"Jukcy\\\":\\\"Є\\\",\\\"jukcy\\\":\\\"є\\\",\\\"Kappa\\\":\\\"Κ\\\",\\\"kappa\\\":\\\"κ\\\",\\\"kappav\\\":\\\"ϰ\\\",\\\"Kcedil\\\":\\\"Ķ\\\",\\\"kcedil\\\":\\\"ķ\\\",\\\"Kcy\\\":\\\"К\\\",\\\"kcy\\\":\\\"к\\\",\\\"Kfr\\\":\\\"𝔎\\\",\\\"kfr\\\":\\\"𝔨\\\",\\\"kgreen\\\":\\\"ĸ\\\",\\\"KHcy\\\":\\\"Х\\\",\\\"khcy\\\":\\\"х\\\",\\\"KJcy\\\":\\\"Ќ\\\",\\\"kjcy\\\":\\\"ќ\\\",\\\"Kopf\\\":\\\"𝕂\\\",\\\"kopf\\\":\\\"𝕜\\\",\\\"Kscr\\\":\\\"𝒦\\\",\\\"kscr\\\":\\\"𝓀\\\",\\\"lAarr\\\":\\\"⇚\\\",\\\"Lacute\\\":\\\"Ĺ\\\",\\\"lacute\\\":\\\"ĺ\\\",\\\"laemptyv\\\":\\\"⦴\\\",\\\"lagran\\\":\\\"ℒ\\\",\\\"Lambda\\\":\\\"Λ\\\",\\\"lambda\\\":\\\"λ\\\",\\\"lang\\\":\\\"⟨\\\",\\\"Lang\\\":\\\"⟪\\\",\\\"langd\\\":\\\"⦑\\\",\\\"langle\\\":\\\"⟨\\\",\\\"lap\\\":\\\"⪅\\\",\\\"Laplacetrf\\\":\\\"ℒ\\\",\\\"laquo\\\":\\\"«\\\",\\\"larrb\\\":\\\"⇤\\\",\\\"larrbfs\\\":\\\"⤟\\\",\\\"larr\\\":\\\"←\\\",\\\"Larr\\\":\\\"↞\\\",\\\"lArr\\\":\\\"⇐\\\",\\\"larrfs\\\":\\\"⤝\\\",\\\"larrhk\\\":\\\"↩\\\",\\\"larrlp\\\":\\\"↫\\\",\\\"larrpl\\\":\\\"⤹\\\",\\\"larrsim\\\":\\\"⥳\\\",\\\"larrtl\\\":\\\"↢\\\",\\\"latail\\\":\\\"⤙\\\",\\\"lAtail\\\":\\\"⤛\\\",\\\"lat\\\":\\\"⪫\\\",\\\"late\\\":\\\"⪭\\\",\\\"lates\\\":\\\"⪭︀\\\",\\\"lbarr\\\":\\\"⤌\\\",\\\"lBarr\\\":\\\"⤎\\\",\\\"lbbrk\\\":\\\"❲\\\",\\\"lbrace\\\":\\\"{\\\",\\\"lbrack\\\":\\\"[\\\",\\\"lbrke\\\":\\\"⦋\\\",\\\"lbrksld\\\":\\\"⦏\\\",\\\"lbrkslu\\\":\\\"⦍\\\",\\\"Lcaron\\\":\\\"Ľ\\\",\\\"lcaron\\\":\\\"ľ\\\",\\\"Lcedil\\\":\\\"Ļ\\\",\\\"lcedil\\\":\\\"ļ\\\",\\\"lceil\\\":\\\"⌈\\\",\\\"lcub\\\":\\\"{\\\",\\\"Lcy\\\":\\\"Л\\\",\\\"lcy\\\":\\\"л\\\",\\\"ldca\\\":\\\"⤶\\\",\\\"ldquo\\\":\\\"“\\\",\\\"ldquor\\\":\\\"„\\\",\\\"ldrdhar\\\":\\\"⥧\\\",\\\"ldrushar\\\":\\\"⥋\\\",\\\"ldsh\\\":\\\"↲\\\",\\\"le\\\":\\\"≤\\\",\\\"lE\\\":\\\"≦\\\",\\\"LeftAngleBracket\\\":\\\"⟨\\\",\\\"LeftArrowBar\\\":\\\"⇤\\\",\\\"leftarrow\\\":\\\"←\\\",\\\"LeftArrow\\\":\\\"←\\\",\\\"Leftarrow\\\":\\\"⇐\\\",\\\"LeftArrowRightArrow\\\":\\\"⇆\\\",\\\"leftarrowtail\\\":\\\"↢\\\",\\\"LeftCeiling\\\":\\\"⌈\\\",\\\"LeftDoubleBracket\\\":\\\"⟦\\\",\\\"LeftDownTeeVector\\\":\\\"⥡\\\",\\\"LeftDownVectorBar\\\":\\\"⥙\\\",\\\"LeftDownVector\\\":\\\"⇃\\\",\\\"LeftFloor\\\":\\\"⌊\\\",\\\"leftharpoondown\\\":\\\"↽\\\",\\\"leftharpoonup\\\":\\\"↼\\\",\\\"leftleftarrows\\\":\\\"⇇\\\",\\\"leftrightarrow\\\":\\\"↔\\\",\\\"LeftRightArrow\\\":\\\"↔\\\",\\\"Leftrightarrow\\\":\\\"⇔\\\",\\\"leftrightarrows\\\":\\\"⇆\\\",\\\"leftrightharpoons\\\":\\\"⇋\\\",\\\"leftrightsquigarrow\\\":\\\"↭\\\",\\\"LeftRightVector\\\":\\\"⥎\\\",\\\"LeftTeeArrow\\\":\\\"↤\\\",\\\"LeftTee\\\":\\\"⊣\\\",\\\"LeftTeeVector\\\":\\\"⥚\\\",\\\"leftthreetimes\\\":\\\"⋋\\\",\\\"LeftTriangleBar\\\":\\\"⧏\\\",\\\"LeftTriangle\\\":\\\"⊲\\\",\\\"LeftTriangleEqual\\\":\\\"⊴\\\",\\\"LeftUpDownVector\\\":\\\"⥑\\\",\\\"LeftUpTeeVector\\\":\\\"⥠\\\",\\\"LeftUpVectorBar\\\":\\\"⥘\\\",\\\"LeftUpVector\\\":\\\"↿\\\",\\\"LeftVectorBar\\\":\\\"⥒\\\",\\\"LeftVector\\\":\\\"↼\\\",\\\"lEg\\\":\\\"⪋\\\",\\\"leg\\\":\\\"⋚\\\",\\\"leq\\\":\\\"≤\\\",\\\"leqq\\\":\\\"≦\\\",\\\"leqslant\\\":\\\"⩽\\\",\\\"lescc\\\":\\\"⪨\\\",\\\"les\\\":\\\"⩽\\\",\\\"lesdot\\\":\\\"⩿\\\",\\\"lesdoto\\\":\\\"⪁\\\",\\\"lesdotor\\\":\\\"⪃\\\",\\\"lesg\\\":\\\"⋚︀\\\",\\\"lesges\\\":\\\"⪓\\\",\\\"lessapprox\\\":\\\"⪅\\\",\\\"lessdot\\\":\\\"⋖\\\",\\\"lesseqgtr\\\":\\\"⋚\\\",\\\"lesseqqgtr\\\":\\\"⪋\\\",\\\"LessEqualGreater\\\":\\\"⋚\\\",\\\"LessFullEqual\\\":\\\"≦\\\",\\\"LessGreater\\\":\\\"≶\\\",\\\"lessgtr\\\":\\\"≶\\\",\\\"LessLess\\\":\\\"⪡\\\",\\\"lesssim\\\":\\\"≲\\\",\\\"LessSlantEqual\\\":\\\"⩽\\\",\\\"LessTilde\\\":\\\"≲\\\",\\\"lfisht\\\":\\\"⥼\\\",\\\"lfloor\\\":\\\"⌊\\\",\\\"Lfr\\\":\\\"𝔏\\\",\\\"lfr\\\":\\\"𝔩\\\",\\\"lg\\\":\\\"≶\\\",\\\"lgE\\\":\\\"⪑\\\",\\\"lHar\\\":\\\"⥢\\\",\\\"lhard\\\":\\\"↽\\\",\\\"lharu\\\":\\\"↼\\\",\\\"lharul\\\":\\\"⥪\\\",\\\"lhblk\\\":\\\"▄\\\",\\\"LJcy\\\":\\\"Љ\\\",\\\"ljcy\\\":\\\"љ\\\",\\\"llarr\\\":\\\"⇇\\\",\\\"ll\\\":\\\"≪\\\",\\\"Ll\\\":\\\"⋘\\\",\\\"llcorner\\\":\\\"⌞\\\",\\\"Lleftarrow\\\":\\\"⇚\\\",\\\"llhard\\\":\\\"⥫\\\",\\\"lltri\\\":\\\"◺\\\",\\\"Lmidot\\\":\\\"Ŀ\\\",\\\"lmidot\\\":\\\"ŀ\\\",\\\"lmoustache\\\":\\\"⎰\\\",\\\"lmoust\\\":\\\"⎰\\\",\\\"lnap\\\":\\\"⪉\\\",\\\"lnapprox\\\":\\\"⪉\\\",\\\"lne\\\":\\\"⪇\\\",\\\"lnE\\\":\\\"≨\\\",\\\"lneq\\\":\\\"⪇\\\",\\\"lneqq\\\":\\\"≨\\\",\\\"lnsim\\\":\\\"⋦\\\",\\\"loang\\\":\\\"⟬\\\",\\\"loarr\\\":\\\"⇽\\\",\\\"lobrk\\\":\\\"⟦\\\",\\\"longleftarrow\\\":\\\"⟵\\\",\\\"LongLeftArrow\\\":\\\"⟵\\\",\\\"Longleftarrow\\\":\\\"⟸\\\",\\\"longleftrightarrow\\\":\\\"⟷\\\",\\\"LongLeftRightArrow\\\":\\\"⟷\\\",\\\"Longleftrightarrow\\\":\\\"⟺\\\",\\\"longmapsto\\\":\\\"⟼\\\",\\\"longrightarrow\\\":\\\"⟶\\\",\\\"LongRightArrow\\\":\\\"⟶\\\",\\\"Longrightarrow\\\":\\\"⟹\\\",\\\"looparrowleft\\\":\\\"↫\\\",\\\"looparrowright\\\":\\\"↬\\\",\\\"lopar\\\":\\\"⦅\\\",\\\"Lopf\\\":\\\"𝕃\\\",\\\"lopf\\\":\\\"𝕝\\\",\\\"loplus\\\":\\\"⨭\\\",\\\"lotimes\\\":\\\"⨴\\\",\\\"lowast\\\":\\\"∗\\\",\\\"lowbar\\\":\\\"_\\\",\\\"LowerLeftArrow\\\":\\\"↙\\\",\\\"LowerRightArrow\\\":\\\"↘\\\",\\\"loz\\\":\\\"◊\\\",\\\"lozenge\\\":\\\"◊\\\",\\\"lozf\\\":\\\"⧫\\\",\\\"lpar\\\":\\\"(\\\",\\\"lparlt\\\":\\\"⦓\\\",\\\"lrarr\\\":\\\"⇆\\\",\\\"lrcorner\\\":\\\"⌟\\\",\\\"lrhar\\\":\\\"⇋\\\",\\\"lrhard\\\":\\\"⥭\\\",\\\"lrm\\\":\\\"‎\\\",\\\"lrtri\\\":\\\"⊿\\\",\\\"lsaquo\\\":\\\"‹\\\",\\\"lscr\\\":\\\"𝓁\\\",\\\"Lscr\\\":\\\"ℒ\\\",\\\"lsh\\\":\\\"↰\\\",\\\"Lsh\\\":\\\"↰\\\",\\\"lsim\\\":\\\"≲\\\",\\\"lsime\\\":\\\"⪍\\\",\\\"lsimg\\\":\\\"⪏\\\",\\\"lsqb\\\":\\\"[\\\",\\\"lsquo\\\":\\\"‘\\\",\\\"lsquor\\\":\\\"‚\\\",\\\"Lstrok\\\":\\\"Ł\\\",\\\"lstrok\\\":\\\"ł\\\",\\\"ltcc\\\":\\\"⪦\\\",\\\"ltcir\\\":\\\"⩹\\\",\\\"lt\\\":\\\"<\\\",\\\"LT\\\":\\\"<\\\",\\\"Lt\\\":\\\"≪\\\",\\\"ltdot\\\":\\\"⋖\\\",\\\"lthree\\\":\\\"⋋\\\",\\\"ltimes\\\":\\\"⋉\\\",\\\"ltlarr\\\":\\\"⥶\\\",\\\"ltquest\\\":\\\"⩻\\\",\\\"ltri\\\":\\\"◃\\\",\\\"ltrie\\\":\\\"⊴\\\",\\\"ltrif\\\":\\\"◂\\\",\\\"ltrPar\\\":\\\"⦖\\\",\\\"lurdshar\\\":\\\"⥊\\\",\\\"luruhar\\\":\\\"⥦\\\",\\\"lvertneqq\\\":\\\"≨︀\\\",\\\"lvnE\\\":\\\"≨︀\\\",\\\"macr\\\":\\\"¯\\\",\\\"male\\\":\\\"♂\\\",\\\"malt\\\":\\\"✠\\\",\\\"maltese\\\":\\\"✠\\\",\\\"Map\\\":\\\"⤅\\\",\\\"map\\\":\\\"↦\\\",\\\"mapsto\\\":\\\"↦\\\",\\\"mapstodown\\\":\\\"↧\\\",\\\"mapstoleft\\\":\\\"↤\\\",\\\"mapstoup\\\":\\\"↥\\\",\\\"marker\\\":\\\"▮\\\",\\\"mcomma\\\":\\\"⨩\\\",\\\"Mcy\\\":\\\"М\\\",\\\"mcy\\\":\\\"м\\\",\\\"mdash\\\":\\\"—\\\",\\\"mDDot\\\":\\\"∺\\\",\\\"measuredangle\\\":\\\"∡\\\",\\\"MediumSpace\\\":\\\" \\\",\\\"Mellintrf\\\":\\\"ℳ\\\",\\\"Mfr\\\":\\\"𝔐\\\",\\\"mfr\\\":\\\"𝔪\\\",\\\"mho\\\":\\\"℧\\\",\\\"micro\\\":\\\"µ\\\",\\\"midast\\\":\\\"*\\\",\\\"midcir\\\":\\\"⫰\\\",\\\"mid\\\":\\\"∣\\\",\\\"middot\\\":\\\"·\\\",\\\"minusb\\\":\\\"⊟\\\",\\\"minus\\\":\\\"−\\\",\\\"minusd\\\":\\\"∸\\\",\\\"minusdu\\\":\\\"⨪\\\",\\\"MinusPlus\\\":\\\"∓\\\",\\\"mlcp\\\":\\\"⫛\\\",\\\"mldr\\\":\\\"…\\\",\\\"mnplus\\\":\\\"∓\\\",\\\"models\\\":\\\"⊧\\\",\\\"Mopf\\\":\\\"𝕄\\\",\\\"mopf\\\":\\\"𝕞\\\",\\\"mp\\\":\\\"∓\\\",\\\"mscr\\\":\\\"𝓂\\\",\\\"Mscr\\\":\\\"ℳ\\\",\\\"mstpos\\\":\\\"∾\\\",\\\"Mu\\\":\\\"Μ\\\",\\\"mu\\\":\\\"μ\\\",\\\"multimap\\\":\\\"⊸\\\",\\\"mumap\\\":\\\"⊸\\\",\\\"nabla\\\":\\\"∇\\\",\\\"Nacute\\\":\\\"Ń\\\",\\\"nacute\\\":\\\"ń\\\",\\\"nang\\\":\\\"∠⃒\\\",\\\"nap\\\":\\\"≉\\\",\\\"napE\\\":\\\"⩰̸\\\",\\\"napid\\\":\\\"≋̸\\\",\\\"napos\\\":\\\"ŉ\\\",\\\"napprox\\\":\\\"≉\\\",\\\"natural\\\":\\\"♮\\\",\\\"naturals\\\":\\\"ℕ\\\",\\\"natur\\\":\\\"♮\\\",\\\"nbsp\\\":\\\" \\\",\\\"nbump\\\":\\\"≎̸\\\",\\\"nbumpe\\\":\\\"≏̸\\\",\\\"ncap\\\":\\\"⩃\\\",\\\"Ncaron\\\":\\\"Ň\\\",\\\"ncaron\\\":\\\"ň\\\",\\\"Ncedil\\\":\\\"Ņ\\\",\\\"ncedil\\\":\\\"ņ\\\",\\\"ncong\\\":\\\"≇\\\",\\\"ncongdot\\\":\\\"⩭̸\\\",\\\"ncup\\\":\\\"⩂\\\",\\\"Ncy\\\":\\\"Н\\\",\\\"ncy\\\":\\\"н\\\",\\\"ndash\\\":\\\"–\\\",\\\"nearhk\\\":\\\"⤤\\\",\\\"nearr\\\":\\\"↗\\\",\\\"neArr\\\":\\\"⇗\\\",\\\"nearrow\\\":\\\"↗\\\",\\\"ne\\\":\\\"≠\\\",\\\"nedot\\\":\\\"≐̸\\\",\\\"NegativeMediumSpace\\\":\\\"​\\\",\\\"NegativeThickSpace\\\":\\\"​\\\",\\\"NegativeThinSpace\\\":\\\"​\\\",\\\"NegativeVeryThinSpace\\\":\\\"​\\\",\\\"nequiv\\\":\\\"≢\\\",\\\"nesear\\\":\\\"⤨\\\",\\\"nesim\\\":\\\"≂̸\\\",\\\"NestedGreaterGreater\\\":\\\"≫\\\",\\\"NestedLessLess\\\":\\\"≪\\\",\\\"NewLine\\\":\\\"\\\\n\\\",\\\"nexist\\\":\\\"∄\\\",\\\"nexists\\\":\\\"∄\\\",\\\"Nfr\\\":\\\"𝔑\\\",\\\"nfr\\\":\\\"𝔫\\\",\\\"ngE\\\":\\\"≧̸\\\",\\\"nge\\\":\\\"≱\\\",\\\"ngeq\\\":\\\"≱\\\",\\\"ngeqq\\\":\\\"≧̸\\\",\\\"ngeqslant\\\":\\\"⩾̸\\\",\\\"nges\\\":\\\"⩾̸\\\",\\\"nGg\\\":\\\"⋙̸\\\",\\\"ngsim\\\":\\\"≵\\\",\\\"nGt\\\":\\\"≫⃒\\\",\\\"ngt\\\":\\\"≯\\\",\\\"ngtr\\\":\\\"≯\\\",\\\"nGtv\\\":\\\"≫̸\\\",\\\"nharr\\\":\\\"↮\\\",\\\"nhArr\\\":\\\"⇎\\\",\\\"nhpar\\\":\\\"⫲\\\",\\\"ni\\\":\\\"∋\\\",\\\"nis\\\":\\\"⋼\\\",\\\"nisd\\\":\\\"⋺\\\",\\\"niv\\\":\\\"∋\\\",\\\"NJcy\\\":\\\"Њ\\\",\\\"njcy\\\":\\\"њ\\\",\\\"nlarr\\\":\\\"↚\\\",\\\"nlArr\\\":\\\"⇍\\\",\\\"nldr\\\":\\\"‥\\\",\\\"nlE\\\":\\\"≦̸\\\",\\\"nle\\\":\\\"≰\\\",\\\"nleftarrow\\\":\\\"↚\\\",\\\"nLeftarrow\\\":\\\"⇍\\\",\\\"nleftrightarrow\\\":\\\"↮\\\",\\\"nLeftrightarrow\\\":\\\"⇎\\\",\\\"nleq\\\":\\\"≰\\\",\\\"nleqq\\\":\\\"≦̸\\\",\\\"nleqslant\\\":\\\"⩽̸\\\",\\\"nles\\\":\\\"⩽̸\\\",\\\"nless\\\":\\\"≮\\\",\\\"nLl\\\":\\\"⋘̸\\\",\\\"nlsim\\\":\\\"≴\\\",\\\"nLt\\\":\\\"≪⃒\\\",\\\"nlt\\\":\\\"≮\\\",\\\"nltri\\\":\\\"⋪\\\",\\\"nltrie\\\":\\\"⋬\\\",\\\"nLtv\\\":\\\"≪̸\\\",\\\"nmid\\\":\\\"∤\\\",\\\"NoBreak\\\":\\\"⁠\\\",\\\"NonBreakingSpace\\\":\\\" \\\",\\\"nopf\\\":\\\"𝕟\\\",\\\"Nopf\\\":\\\"ℕ\\\",\\\"Not\\\":\\\"⫬\\\",\\\"not\\\":\\\"¬\\\",\\\"NotCongruent\\\":\\\"≢\\\",\\\"NotCupCap\\\":\\\"≭\\\",\\\"NotDoubleVerticalBar\\\":\\\"∦\\\",\\\"NotElement\\\":\\\"∉\\\",\\\"NotEqual\\\":\\\"≠\\\",\\\"NotEqualTilde\\\":\\\"≂̸\\\",\\\"NotExists\\\":\\\"∄\\\",\\\"NotGreater\\\":\\\"≯\\\",\\\"NotGreaterEqual\\\":\\\"≱\\\",\\\"NotGreaterFullEqual\\\":\\\"≧̸\\\",\\\"NotGreaterGreater\\\":\\\"≫̸\\\",\\\"NotGreaterLess\\\":\\\"≹\\\",\\\"NotGreaterSlantEqual\\\":\\\"⩾̸\\\",\\\"NotGreaterTilde\\\":\\\"≵\\\",\\\"NotHumpDownHump\\\":\\\"≎̸\\\",\\\"NotHumpEqual\\\":\\\"≏̸\\\",\\\"notin\\\":\\\"∉\\\",\\\"notindot\\\":\\\"⋵̸\\\",\\\"notinE\\\":\\\"⋹̸\\\",\\\"notinva\\\":\\\"∉\\\",\\\"notinvb\\\":\\\"⋷\\\",\\\"notinvc\\\":\\\"⋶\\\",\\\"NotLeftTriangleBar\\\":\\\"⧏̸\\\",\\\"NotLeftTriangle\\\":\\\"⋪\\\",\\\"NotLeftTriangleEqual\\\":\\\"⋬\\\",\\\"NotLess\\\":\\\"≮\\\",\\\"NotLessEqual\\\":\\\"≰\\\",\\\"NotLessGreater\\\":\\\"≸\\\",\\\"NotLessLess\\\":\\\"≪̸\\\",\\\"NotLessSlantEqual\\\":\\\"⩽̸\\\",\\\"NotLessTilde\\\":\\\"≴\\\",\\\"NotNestedGreaterGreater\\\":\\\"⪢̸\\\",\\\"NotNestedLessLess\\\":\\\"⪡̸\\\",\\\"notni\\\":\\\"∌\\\",\\\"notniva\\\":\\\"∌\\\",\\\"notnivb\\\":\\\"⋾\\\",\\\"notnivc\\\":\\\"⋽\\\",\\\"NotPrecedes\\\":\\\"⊀\\\",\\\"NotPrecedesEqual\\\":\\\"⪯̸\\\",\\\"NotPrecedesSlantEqual\\\":\\\"⋠\\\",\\\"NotReverseElement\\\":\\\"∌\\\",\\\"NotRightTriangleBar\\\":\\\"⧐̸\\\",\\\"NotRightTriangle\\\":\\\"⋫\\\",\\\"NotRightTriangleEqual\\\":\\\"⋭\\\",\\\"NotSquareSubset\\\":\\\"⊏̸\\\",\\\"NotSquareSubsetEqual\\\":\\\"⋢\\\",\\\"NotSquareSuperset\\\":\\\"⊐̸\\\",\\\"NotSquareSupersetEqual\\\":\\\"⋣\\\",\\\"NotSubset\\\":\\\"⊂⃒\\\",\\\"NotSubsetEqual\\\":\\\"⊈\\\",\\\"NotSucceeds\\\":\\\"⊁\\\",\\\"NotSucceedsEqual\\\":\\\"⪰̸\\\",\\\"NotSucceedsSlantEqual\\\":\\\"⋡\\\",\\\"NotSucceedsTilde\\\":\\\"≿̸\\\",\\\"NotSuperset\\\":\\\"⊃⃒\\\",\\\"NotSupersetEqual\\\":\\\"⊉\\\",\\\"NotTilde\\\":\\\"≁\\\",\\\"NotTildeEqual\\\":\\\"≄\\\",\\\"NotTildeFullEqual\\\":\\\"≇\\\",\\\"NotTildeTilde\\\":\\\"≉\\\",\\\"NotVerticalBar\\\":\\\"∤\\\",\\\"nparallel\\\":\\\"∦\\\",\\\"npar\\\":\\\"∦\\\",\\\"nparsl\\\":\\\"⫽⃥\\\",\\\"npart\\\":\\\"∂̸\\\",\\\"npolint\\\":\\\"⨔\\\",\\\"npr\\\":\\\"⊀\\\",\\\"nprcue\\\":\\\"⋠\\\",\\\"nprec\\\":\\\"⊀\\\",\\\"npreceq\\\":\\\"⪯̸\\\",\\\"npre\\\":\\\"⪯̸\\\",\\\"nrarrc\\\":\\\"⤳̸\\\",\\\"nrarr\\\":\\\"↛\\\",\\\"nrArr\\\":\\\"⇏\\\",\\\"nrarrw\\\":\\\"↝̸\\\",\\\"nrightarrow\\\":\\\"↛\\\",\\\"nRightarrow\\\":\\\"⇏\\\",\\\"nrtri\\\":\\\"⋫\\\",\\\"nrtrie\\\":\\\"⋭\\\",\\\"nsc\\\":\\\"⊁\\\",\\\"nsccue\\\":\\\"⋡\\\",\\\"nsce\\\":\\\"⪰̸\\\",\\\"Nscr\\\":\\\"𝒩\\\",\\\"nscr\\\":\\\"𝓃\\\",\\\"nshortmid\\\":\\\"∤\\\",\\\"nshortparallel\\\":\\\"∦\\\",\\\"nsim\\\":\\\"≁\\\",\\\"nsime\\\":\\\"≄\\\",\\\"nsimeq\\\":\\\"≄\\\",\\\"nsmid\\\":\\\"∤\\\",\\\"nspar\\\":\\\"∦\\\",\\\"nsqsube\\\":\\\"⋢\\\",\\\"nsqsupe\\\":\\\"⋣\\\",\\\"nsub\\\":\\\"⊄\\\",\\\"nsubE\\\":\\\"⫅̸\\\",\\\"nsube\\\":\\\"⊈\\\",\\\"nsubset\\\":\\\"⊂⃒\\\",\\\"nsubseteq\\\":\\\"⊈\\\",\\\"nsubseteqq\\\":\\\"⫅̸\\\",\\\"nsucc\\\":\\\"⊁\\\",\\\"nsucceq\\\":\\\"⪰̸\\\",\\\"nsup\\\":\\\"⊅\\\",\\\"nsupE\\\":\\\"⫆̸\\\",\\\"nsupe\\\":\\\"⊉\\\",\\\"nsupset\\\":\\\"⊃⃒\\\",\\\"nsupseteq\\\":\\\"⊉\\\",\\\"nsupseteqq\\\":\\\"⫆̸\\\",\\\"ntgl\\\":\\\"≹\\\",\\\"Ntilde\\\":\\\"Ñ\\\",\\\"ntilde\\\":\\\"ñ\\\",\\\"ntlg\\\":\\\"≸\\\",\\\"ntriangleleft\\\":\\\"⋪\\\",\\\"ntrianglelefteq\\\":\\\"⋬\\\",\\\"ntriangleright\\\":\\\"⋫\\\",\\\"ntrianglerighteq\\\":\\\"⋭\\\",\\\"Nu\\\":\\\"Ν\\\",\\\"nu\\\":\\\"ν\\\",\\\"num\\\":\\\"#\\\",\\\"numero\\\":\\\"№\\\",\\\"numsp\\\":\\\" \\\",\\\"nvap\\\":\\\"≍⃒\\\",\\\"nvdash\\\":\\\"⊬\\\",\\\"nvDash\\\":\\\"⊭\\\",\\\"nVdash\\\":\\\"⊮\\\",\\\"nVDash\\\":\\\"⊯\\\",\\\"nvge\\\":\\\"≥⃒\\\",\\\"nvgt\\\":\\\">⃒\\\",\\\"nvHarr\\\":\\\"⤄\\\",\\\"nvinfin\\\":\\\"⧞\\\",\\\"nvlArr\\\":\\\"⤂\\\",\\\"nvle\\\":\\\"≤⃒\\\",\\\"nvlt\\\":\\\"<⃒\\\",\\\"nvltrie\\\":\\\"⊴⃒\\\",\\\"nvrArr\\\":\\\"⤃\\\",\\\"nvrtrie\\\":\\\"⊵⃒\\\",\\\"nvsim\\\":\\\"∼⃒\\\",\\\"nwarhk\\\":\\\"⤣\\\",\\\"nwarr\\\":\\\"↖\\\",\\\"nwArr\\\":\\\"⇖\\\",\\\"nwarrow\\\":\\\"↖\\\",\\\"nwnear\\\":\\\"⤧\\\",\\\"Oacute\\\":\\\"Ó\\\",\\\"oacute\\\":\\\"ó\\\",\\\"oast\\\":\\\"⊛\\\",\\\"Ocirc\\\":\\\"Ô\\\",\\\"ocirc\\\":\\\"ô\\\",\\\"ocir\\\":\\\"⊚\\\",\\\"Ocy\\\":\\\"О\\\",\\\"ocy\\\":\\\"о\\\",\\\"odash\\\":\\\"⊝\\\",\\\"Odblac\\\":\\\"Ő\\\",\\\"odblac\\\":\\\"ő\\\",\\\"odiv\\\":\\\"⨸\\\",\\\"odot\\\":\\\"⊙\\\",\\\"odsold\\\":\\\"⦼\\\",\\\"OElig\\\":\\\"Œ\\\",\\\"oelig\\\":\\\"œ\\\",\\\"ofcir\\\":\\\"⦿\\\",\\\"Ofr\\\":\\\"𝔒\\\",\\\"ofr\\\":\\\"𝔬\\\",\\\"ogon\\\":\\\"˛\\\",\\\"Ograve\\\":\\\"Ò\\\",\\\"ograve\\\":\\\"ò\\\",\\\"ogt\\\":\\\"⧁\\\",\\\"ohbar\\\":\\\"⦵\\\",\\\"ohm\\\":\\\"Ω\\\",\\\"oint\\\":\\\"∮\\\",\\\"olarr\\\":\\\"↺\\\",\\\"olcir\\\":\\\"⦾\\\",\\\"olcross\\\":\\\"⦻\\\",\\\"oline\\\":\\\"‾\\\",\\\"olt\\\":\\\"⧀\\\",\\\"Omacr\\\":\\\"Ō\\\",\\\"omacr\\\":\\\"ō\\\",\\\"Omega\\\":\\\"Ω\\\",\\\"omega\\\":\\\"ω\\\",\\\"Omicron\\\":\\\"Ο\\\",\\\"omicron\\\":\\\"ο\\\",\\\"omid\\\":\\\"⦶\\\",\\\"ominus\\\":\\\"⊖\\\",\\\"Oopf\\\":\\\"𝕆\\\",\\\"oopf\\\":\\\"𝕠\\\",\\\"opar\\\":\\\"⦷\\\",\\\"OpenCurlyDoubleQuote\\\":\\\"“\\\",\\\"OpenCurlyQuote\\\":\\\"‘\\\",\\\"operp\\\":\\\"⦹\\\",\\\"oplus\\\":\\\"⊕\\\",\\\"orarr\\\":\\\"↻\\\",\\\"Or\\\":\\\"⩔\\\",\\\"or\\\":\\\"∨\\\",\\\"ord\\\":\\\"⩝\\\",\\\"order\\\":\\\"ℴ\\\",\\\"orderof\\\":\\\"ℴ\\\",\\\"ordf\\\":\\\"ª\\\",\\\"ordm\\\":\\\"º\\\",\\\"origof\\\":\\\"⊶\\\",\\\"oror\\\":\\\"⩖\\\",\\\"orslope\\\":\\\"⩗\\\",\\\"orv\\\":\\\"⩛\\\",\\\"oS\\\":\\\"Ⓢ\\\",\\\"Oscr\\\":\\\"𝒪\\\",\\\"oscr\\\":\\\"ℴ\\\",\\\"Oslash\\\":\\\"Ø\\\",\\\"oslash\\\":\\\"ø\\\",\\\"osol\\\":\\\"⊘\\\",\\\"Otilde\\\":\\\"Õ\\\",\\\"otilde\\\":\\\"õ\\\",\\\"otimesas\\\":\\\"⨶\\\",\\\"Otimes\\\":\\\"⨷\\\",\\\"otimes\\\":\\\"⊗\\\",\\\"Ouml\\\":\\\"Ö\\\",\\\"ouml\\\":\\\"ö\\\",\\\"ovbar\\\":\\\"⌽\\\",\\\"OverBar\\\":\\\"‾\\\",\\\"OverBrace\\\":\\\"⏞\\\",\\\"OverBracket\\\":\\\"⎴\\\",\\\"OverParenthesis\\\":\\\"⏜\\\",\\\"para\\\":\\\"¶\\\",\\\"parallel\\\":\\\"∥\\\",\\\"par\\\":\\\"∥\\\",\\\"parsim\\\":\\\"⫳\\\",\\\"parsl\\\":\\\"⫽\\\",\\\"part\\\":\\\"∂\\\",\\\"PartialD\\\":\\\"∂\\\",\\\"Pcy\\\":\\\"П\\\",\\\"pcy\\\":\\\"п\\\",\\\"percnt\\\":\\\"%\\\",\\\"period\\\":\\\".\\\",\\\"permil\\\":\\\"‰\\\",\\\"perp\\\":\\\"⊥\\\",\\\"pertenk\\\":\\\"‱\\\",\\\"Pfr\\\":\\\"𝔓\\\",\\\"pfr\\\":\\\"𝔭\\\",\\\"Phi\\\":\\\"Φ\\\",\\\"phi\\\":\\\"φ\\\",\\\"phiv\\\":\\\"ϕ\\\",\\\"phmmat\\\":\\\"ℳ\\\",\\\"phone\\\":\\\"☎\\\",\\\"Pi\\\":\\\"Π\\\",\\\"pi\\\":\\\"π\\\",\\\"pitchfork\\\":\\\"⋔\\\",\\\"piv\\\":\\\"ϖ\\\",\\\"planck\\\":\\\"ℏ\\\",\\\"planckh\\\":\\\"ℎ\\\",\\\"plankv\\\":\\\"ℏ\\\",\\\"plusacir\\\":\\\"⨣\\\",\\\"plusb\\\":\\\"⊞\\\",\\\"pluscir\\\":\\\"⨢\\\",\\\"plus\\\":\\\"+\\\",\\\"plusdo\\\":\\\"∔\\\",\\\"plusdu\\\":\\\"⨥\\\",\\\"pluse\\\":\\\"⩲\\\",\\\"PlusMinus\\\":\\\"±\\\",\\\"plusmn\\\":\\\"±\\\",\\\"plussim\\\":\\\"⨦\\\",\\\"plustwo\\\":\\\"⨧\\\",\\\"pm\\\":\\\"±\\\",\\\"Poincareplane\\\":\\\"ℌ\\\",\\\"pointint\\\":\\\"⨕\\\",\\\"popf\\\":\\\"𝕡\\\",\\\"Popf\\\":\\\"ℙ\\\",\\\"pound\\\":\\\"£\\\",\\\"prap\\\":\\\"⪷\\\",\\\"Pr\\\":\\\"⪻\\\",\\\"pr\\\":\\\"≺\\\",\\\"prcue\\\":\\\"≼\\\",\\\"precapprox\\\":\\\"⪷\\\",\\\"prec\\\":\\\"≺\\\",\\\"preccurlyeq\\\":\\\"≼\\\",\\\"Precedes\\\":\\\"≺\\\",\\\"PrecedesEqual\\\":\\\"⪯\\\",\\\"PrecedesSlantEqual\\\":\\\"≼\\\",\\\"PrecedesTilde\\\":\\\"≾\\\",\\\"preceq\\\":\\\"⪯\\\",\\\"precnapprox\\\":\\\"⪹\\\",\\\"precneqq\\\":\\\"⪵\\\",\\\"precnsim\\\":\\\"⋨\\\",\\\"pre\\\":\\\"⪯\\\",\\\"prE\\\":\\\"⪳\\\",\\\"precsim\\\":\\\"≾\\\",\\\"prime\\\":\\\"′\\\",\\\"Prime\\\":\\\"″\\\",\\\"primes\\\":\\\"ℙ\\\",\\\"prnap\\\":\\\"⪹\\\",\\\"prnE\\\":\\\"⪵\\\",\\\"prnsim\\\":\\\"⋨\\\",\\\"prod\\\":\\\"∏\\\",\\\"Product\\\":\\\"∏\\\",\\\"profalar\\\":\\\"⌮\\\",\\\"profline\\\":\\\"⌒\\\",\\\"profsurf\\\":\\\"⌓\\\",\\\"prop\\\":\\\"∝\\\",\\\"Proportional\\\":\\\"∝\\\",\\\"Proportion\\\":\\\"∷\\\",\\\"propto\\\":\\\"∝\\\",\\\"prsim\\\":\\\"≾\\\",\\\"prurel\\\":\\\"⊰\\\",\\\"Pscr\\\":\\\"𝒫\\\",\\\"pscr\\\":\\\"𝓅\\\",\\\"Psi\\\":\\\"Ψ\\\",\\\"psi\\\":\\\"ψ\\\",\\\"puncsp\\\":\\\" \\\",\\\"Qfr\\\":\\\"𝔔\\\",\\\"qfr\\\":\\\"𝔮\\\",\\\"qint\\\":\\\"⨌\\\",\\\"qopf\\\":\\\"𝕢\\\",\\\"Qopf\\\":\\\"ℚ\\\",\\\"qprime\\\":\\\"⁗\\\",\\\"Qscr\\\":\\\"𝒬\\\",\\\"qscr\\\":\\\"𝓆\\\",\\\"quaternions\\\":\\\"ℍ\\\",\\\"quatint\\\":\\\"⨖\\\",\\\"quest\\\":\\\"?\\\",\\\"questeq\\\":\\\"≟\\\",\\\"quot\\\":\\\"\\\\\\\"\\\",\\\"QUOT\\\":\\\"\\\\\\\"\\\",\\\"rAarr\\\":\\\"⇛\\\",\\\"race\\\":\\\"∽̱\\\",\\\"Racute\\\":\\\"Ŕ\\\",\\\"racute\\\":\\\"ŕ\\\",\\\"radic\\\":\\\"√\\\",\\\"raemptyv\\\":\\\"⦳\\\",\\\"rang\\\":\\\"⟩\\\",\\\"Rang\\\":\\\"⟫\\\",\\\"rangd\\\":\\\"⦒\\\",\\\"range\\\":\\\"⦥\\\",\\\"rangle\\\":\\\"⟩\\\",\\\"raquo\\\":\\\"»\\\",\\\"rarrap\\\":\\\"⥵\\\",\\\"rarrb\\\":\\\"⇥\\\",\\\"rarrbfs\\\":\\\"⤠\\\",\\\"rarrc\\\":\\\"⤳\\\",\\\"rarr\\\":\\\"→\\\",\\\"Rarr\\\":\\\"↠\\\",\\\"rArr\\\":\\\"⇒\\\",\\\"rarrfs\\\":\\\"⤞\\\",\\\"rarrhk\\\":\\\"↪\\\",\\\"rarrlp\\\":\\\"↬\\\",\\\"rarrpl\\\":\\\"⥅\\\",\\\"rarrsim\\\":\\\"⥴\\\",\\\"Rarrtl\\\":\\\"⤖\\\",\\\"rarrtl\\\":\\\"↣\\\",\\\"rarrw\\\":\\\"↝\\\",\\\"ratail\\\":\\\"⤚\\\",\\\"rAtail\\\":\\\"⤜\\\",\\\"ratio\\\":\\\"∶\\\",\\\"rationals\\\":\\\"ℚ\\\",\\\"rbarr\\\":\\\"⤍\\\",\\\"rBarr\\\":\\\"⤏\\\",\\\"RBarr\\\":\\\"⤐\\\",\\\"rbbrk\\\":\\\"❳\\\",\\\"rbrace\\\":\\\"}\\\",\\\"rbrack\\\":\\\"]\\\",\\\"rbrke\\\":\\\"⦌\\\",\\\"rbrksld\\\":\\\"⦎\\\",\\\"rbrkslu\\\":\\\"⦐\\\",\\\"Rcaron\\\":\\\"Ř\\\",\\\"rcaron\\\":\\\"ř\\\",\\\"Rcedil\\\":\\\"Ŗ\\\",\\\"rcedil\\\":\\\"ŗ\\\",\\\"rceil\\\":\\\"⌉\\\",\\\"rcub\\\":\\\"}\\\",\\\"Rcy\\\":\\\"Р\\\",\\\"rcy\\\":\\\"р\\\",\\\"rdca\\\":\\\"⤷\\\",\\\"rdldhar\\\":\\\"⥩\\\",\\\"rdquo\\\":\\\"”\\\",\\\"rdquor\\\":\\\"”\\\",\\\"rdsh\\\":\\\"↳\\\",\\\"real\\\":\\\"ℜ\\\",\\\"realine\\\":\\\"ℛ\\\",\\\"realpart\\\":\\\"ℜ\\\",\\\"reals\\\":\\\"ℝ\\\",\\\"Re\\\":\\\"ℜ\\\",\\\"rect\\\":\\\"▭\\\",\\\"reg\\\":\\\"®\\\",\\\"REG\\\":\\\"®\\\",\\\"ReverseElement\\\":\\\"∋\\\",\\\"ReverseEquilibrium\\\":\\\"⇋\\\",\\\"ReverseUpEquilibrium\\\":\\\"⥯\\\",\\\"rfisht\\\":\\\"⥽\\\",\\\"rfloor\\\":\\\"⌋\\\",\\\"rfr\\\":\\\"𝔯\\\",\\\"Rfr\\\":\\\"ℜ\\\",\\\"rHar\\\":\\\"⥤\\\",\\\"rhard\\\":\\\"⇁\\\",\\\"rharu\\\":\\\"⇀\\\",\\\"rharul\\\":\\\"⥬\\\",\\\"Rho\\\":\\\"Ρ\\\",\\\"rho\\\":\\\"ρ\\\",\\\"rhov\\\":\\\"ϱ\\\",\\\"RightAngleBracket\\\":\\\"⟩\\\",\\\"RightArrowBar\\\":\\\"⇥\\\",\\\"rightarrow\\\":\\\"→\\\",\\\"RightArrow\\\":\\\"→\\\",\\\"Rightarrow\\\":\\\"⇒\\\",\\\"RightArrowLeftArrow\\\":\\\"⇄\\\",\\\"rightarrowtail\\\":\\\"↣\\\",\\\"RightCeiling\\\":\\\"⌉\\\",\\\"RightDoubleBracket\\\":\\\"⟧\\\",\\\"RightDownTeeVector\\\":\\\"⥝\\\",\\\"RightDownVectorBar\\\":\\\"⥕\\\",\\\"RightDownVector\\\":\\\"⇂\\\",\\\"RightFloor\\\":\\\"⌋\\\",\\\"rightharpoondown\\\":\\\"⇁\\\",\\\"rightharpoonup\\\":\\\"⇀\\\",\\\"rightleftarrows\\\":\\\"⇄\\\",\\\"rightleftharpoons\\\":\\\"⇌\\\",\\\"rightrightarrows\\\":\\\"⇉\\\",\\\"rightsquigarrow\\\":\\\"↝\\\",\\\"RightTeeArrow\\\":\\\"↦\\\",\\\"RightTee\\\":\\\"⊢\\\",\\\"RightTeeVector\\\":\\\"⥛\\\",\\\"rightthreetimes\\\":\\\"⋌\\\",\\\"RightTriangleBar\\\":\\\"⧐\\\",\\\"RightTriangle\\\":\\\"⊳\\\",\\\"RightTriangleEqual\\\":\\\"⊵\\\",\\\"RightUpDownVector\\\":\\\"⥏\\\",\\\"RightUpTeeVector\\\":\\\"⥜\\\",\\\"RightUpVectorBar\\\":\\\"⥔\\\",\\\"RightUpVector\\\":\\\"↾\\\",\\\"RightVectorBar\\\":\\\"⥓\\\",\\\"RightVector\\\":\\\"⇀\\\",\\\"ring\\\":\\\"˚\\\",\\\"risingdotseq\\\":\\\"≓\\\",\\\"rlarr\\\":\\\"⇄\\\",\\\"rlhar\\\":\\\"⇌\\\",\\\"rlm\\\":\\\"‏\\\",\\\"rmoustache\\\":\\\"⎱\\\",\\\"rmoust\\\":\\\"⎱\\\",\\\"rnmid\\\":\\\"⫮\\\",\\\"roang\\\":\\\"⟭\\\",\\\"roarr\\\":\\\"⇾\\\",\\\"robrk\\\":\\\"⟧\\\",\\\"ropar\\\":\\\"⦆\\\",\\\"ropf\\\":\\\"𝕣\\\",\\\"Ropf\\\":\\\"ℝ\\\",\\\"roplus\\\":\\\"⨮\\\",\\\"rotimes\\\":\\\"⨵\\\",\\\"RoundImplies\\\":\\\"⥰\\\",\\\"rpar\\\":\\\")\\\",\\\"rpargt\\\":\\\"⦔\\\",\\\"rppolint\\\":\\\"⨒\\\",\\\"rrarr\\\":\\\"⇉\\\",\\\"Rrightarrow\\\":\\\"⇛\\\",\\\"rsaquo\\\":\\\"›\\\",\\\"rscr\\\":\\\"𝓇\\\",\\\"Rscr\\\":\\\"ℛ\\\",\\\"rsh\\\":\\\"↱\\\",\\\"Rsh\\\":\\\"↱\\\",\\\"rsqb\\\":\\\"]\\\",\\\"rsquo\\\":\\\"’\\\",\\\"rsquor\\\":\\\"’\\\",\\\"rthree\\\":\\\"⋌\\\",\\\"rtimes\\\":\\\"⋊\\\",\\\"rtri\\\":\\\"▹\\\",\\\"rtrie\\\":\\\"⊵\\\",\\\"rtrif\\\":\\\"▸\\\",\\\"rtriltri\\\":\\\"⧎\\\",\\\"RuleDelayed\\\":\\\"⧴\\\",\\\"ruluhar\\\":\\\"⥨\\\",\\\"rx\\\":\\\"℞\\\",\\\"Sacute\\\":\\\"Ś\\\",\\\"sacute\\\":\\\"ś\\\",\\\"sbquo\\\":\\\"‚\\\",\\\"scap\\\":\\\"⪸\\\",\\\"Scaron\\\":\\\"Š\\\",\\\"scaron\\\":\\\"š\\\",\\\"Sc\\\":\\\"⪼\\\",\\\"sc\\\":\\\"≻\\\",\\\"sccue\\\":\\\"≽\\\",\\\"sce\\\":\\\"⪰\\\",\\\"scE\\\":\\\"⪴\\\",\\\"Scedil\\\":\\\"Ş\\\",\\\"scedil\\\":\\\"ş\\\",\\\"Scirc\\\":\\\"Ŝ\\\",\\\"scirc\\\":\\\"ŝ\\\",\\\"scnap\\\":\\\"⪺\\\",\\\"scnE\\\":\\\"⪶\\\",\\\"scnsim\\\":\\\"⋩\\\",\\\"scpolint\\\":\\\"⨓\\\",\\\"scsim\\\":\\\"≿\\\",\\\"Scy\\\":\\\"С\\\",\\\"scy\\\":\\\"с\\\",\\\"sdotb\\\":\\\"⊡\\\",\\\"sdot\\\":\\\"⋅\\\",\\\"sdote\\\":\\\"⩦\\\",\\\"searhk\\\":\\\"⤥\\\",\\\"searr\\\":\\\"↘\\\",\\\"seArr\\\":\\\"⇘\\\",\\\"searrow\\\":\\\"↘\\\",\\\"sect\\\":\\\"§\\\",\\\"semi\\\":\\\";\\\",\\\"seswar\\\":\\\"⤩\\\",\\\"setminus\\\":\\\"∖\\\",\\\"setmn\\\":\\\"∖\\\",\\\"sext\\\":\\\"✶\\\",\\\"Sfr\\\":\\\"𝔖\\\",\\\"sfr\\\":\\\"𝔰\\\",\\\"sfrown\\\":\\\"⌢\\\",\\\"sharp\\\":\\\"♯\\\",\\\"SHCHcy\\\":\\\"Щ\\\",\\\"shchcy\\\":\\\"щ\\\",\\\"SHcy\\\":\\\"Ш\\\",\\\"shcy\\\":\\\"ш\\\",\\\"ShortDownArrow\\\":\\\"↓\\\",\\\"ShortLeftArrow\\\":\\\"←\\\",\\\"shortmid\\\":\\\"∣\\\",\\\"shortparallel\\\":\\\"∥\\\",\\\"ShortRightArrow\\\":\\\"→\\\",\\\"ShortUpArrow\\\":\\\"↑\\\",\\\"shy\\\":\\\"­\\\",\\\"Sigma\\\":\\\"Σ\\\",\\\"sigma\\\":\\\"σ\\\",\\\"sigmaf\\\":\\\"ς\\\",\\\"sigmav\\\":\\\"ς\\\",\\\"sim\\\":\\\"∼\\\",\\\"simdot\\\":\\\"⩪\\\",\\\"sime\\\":\\\"≃\\\",\\\"simeq\\\":\\\"≃\\\",\\\"simg\\\":\\\"⪞\\\",\\\"simgE\\\":\\\"⪠\\\",\\\"siml\\\":\\\"⪝\\\",\\\"simlE\\\":\\\"⪟\\\",\\\"simne\\\":\\\"≆\\\",\\\"simplus\\\":\\\"⨤\\\",\\\"simrarr\\\":\\\"⥲\\\",\\\"slarr\\\":\\\"←\\\",\\\"SmallCircle\\\":\\\"∘\\\",\\\"smallsetminus\\\":\\\"∖\\\",\\\"smashp\\\":\\\"⨳\\\",\\\"smeparsl\\\":\\\"⧤\\\",\\\"smid\\\":\\\"∣\\\",\\\"smile\\\":\\\"⌣\\\",\\\"smt\\\":\\\"⪪\\\",\\\"smte\\\":\\\"⪬\\\",\\\"smtes\\\":\\\"⪬︀\\\",\\\"SOFTcy\\\":\\\"Ь\\\",\\\"softcy\\\":\\\"ь\\\",\\\"solbar\\\":\\\"⌿\\\",\\\"solb\\\":\\\"⧄\\\",\\\"sol\\\":\\\"/\\\",\\\"Sopf\\\":\\\"𝕊\\\",\\\"sopf\\\":\\\"𝕤\\\",\\\"spades\\\":\\\"♠\\\",\\\"spadesuit\\\":\\\"♠\\\",\\\"spar\\\":\\\"∥\\\",\\\"sqcap\\\":\\\"⊓\\\",\\\"sqcaps\\\":\\\"⊓︀\\\",\\\"sqcup\\\":\\\"⊔\\\",\\\"sqcups\\\":\\\"⊔︀\\\",\\\"Sqrt\\\":\\\"√\\\",\\\"sqsub\\\":\\\"⊏\\\",\\\"sqsube\\\":\\\"⊑\\\",\\\"sqsubset\\\":\\\"⊏\\\",\\\"sqsubseteq\\\":\\\"⊑\\\",\\\"sqsup\\\":\\\"⊐\\\",\\\"sqsupe\\\":\\\"⊒\\\",\\\"sqsupset\\\":\\\"⊐\\\",\\\"sqsupseteq\\\":\\\"⊒\\\",\\\"square\\\":\\\"□\\\",\\\"Square\\\":\\\"□\\\",\\\"SquareIntersection\\\":\\\"⊓\\\",\\\"SquareSubset\\\":\\\"⊏\\\",\\\"SquareSubsetEqual\\\":\\\"⊑\\\",\\\"SquareSuperset\\\":\\\"⊐\\\",\\\"SquareSupersetEqual\\\":\\\"⊒\\\",\\\"SquareUnion\\\":\\\"⊔\\\",\\\"squarf\\\":\\\"▪\\\",\\\"squ\\\":\\\"□\\\",\\\"squf\\\":\\\"▪\\\",\\\"srarr\\\":\\\"→\\\",\\\"Sscr\\\":\\\"𝒮\\\",\\\"sscr\\\":\\\"𝓈\\\",\\\"ssetmn\\\":\\\"∖\\\",\\\"ssmile\\\":\\\"⌣\\\",\\\"sstarf\\\":\\\"⋆\\\",\\\"Star\\\":\\\"⋆\\\",\\\"star\\\":\\\"☆\\\",\\\"starf\\\":\\\"★\\\",\\\"straightepsilon\\\":\\\"ϵ\\\",\\\"straightphi\\\":\\\"ϕ\\\",\\\"strns\\\":\\\"¯\\\",\\\"sub\\\":\\\"⊂\\\",\\\"Sub\\\":\\\"⋐\\\",\\\"subdot\\\":\\\"⪽\\\",\\\"subE\\\":\\\"⫅\\\",\\\"sube\\\":\\\"⊆\\\",\\\"subedot\\\":\\\"⫃\\\",\\\"submult\\\":\\\"⫁\\\",\\\"subnE\\\":\\\"⫋\\\",\\\"subne\\\":\\\"⊊\\\",\\\"subplus\\\":\\\"⪿\\\",\\\"subrarr\\\":\\\"⥹\\\",\\\"subset\\\":\\\"⊂\\\",\\\"Subset\\\":\\\"⋐\\\",\\\"subseteq\\\":\\\"⊆\\\",\\\"subseteqq\\\":\\\"⫅\\\",\\\"SubsetEqual\\\":\\\"⊆\\\",\\\"subsetneq\\\":\\\"⊊\\\",\\\"subsetneqq\\\":\\\"⫋\\\",\\\"subsim\\\":\\\"⫇\\\",\\\"subsub\\\":\\\"⫕\\\",\\\"subsup\\\":\\\"⫓\\\",\\\"succapprox\\\":\\\"⪸\\\",\\\"succ\\\":\\\"≻\\\",\\\"succcurlyeq\\\":\\\"≽\\\",\\\"Succeeds\\\":\\\"≻\\\",\\\"SucceedsEqual\\\":\\\"⪰\\\",\\\"SucceedsSlantEqual\\\":\\\"≽\\\",\\\"SucceedsTilde\\\":\\\"≿\\\",\\\"succeq\\\":\\\"⪰\\\",\\\"succnapprox\\\":\\\"⪺\\\",\\\"succneqq\\\":\\\"⪶\\\",\\\"succnsim\\\":\\\"⋩\\\",\\\"succsim\\\":\\\"≿\\\",\\\"SuchThat\\\":\\\"∋\\\",\\\"sum\\\":\\\"∑\\\",\\\"Sum\\\":\\\"∑\\\",\\\"sung\\\":\\\"♪\\\",\\\"sup1\\\":\\\"¹\\\",\\\"sup2\\\":\\\"²\\\",\\\"sup3\\\":\\\"³\\\",\\\"sup\\\":\\\"⊃\\\",\\\"Sup\\\":\\\"⋑\\\",\\\"supdot\\\":\\\"⪾\\\",\\\"supdsub\\\":\\\"⫘\\\",\\\"supE\\\":\\\"⫆\\\",\\\"supe\\\":\\\"⊇\\\",\\\"supedot\\\":\\\"⫄\\\",\\\"Superset\\\":\\\"⊃\\\",\\\"SupersetEqual\\\":\\\"⊇\\\",\\\"suphsol\\\":\\\"⟉\\\",\\\"suphsub\\\":\\\"⫗\\\",\\\"suplarr\\\":\\\"⥻\\\",\\\"supmult\\\":\\\"⫂\\\",\\\"supnE\\\":\\\"⫌\\\",\\\"supne\\\":\\\"⊋\\\",\\\"supplus\\\":\\\"⫀\\\",\\\"supset\\\":\\\"⊃\\\",\\\"Supset\\\":\\\"⋑\\\",\\\"supseteq\\\":\\\"⊇\\\",\\\"supseteqq\\\":\\\"⫆\\\",\\\"supsetneq\\\":\\\"⊋\\\",\\\"supsetneqq\\\":\\\"⫌\\\",\\\"supsim\\\":\\\"⫈\\\",\\\"supsub\\\":\\\"⫔\\\",\\\"supsup\\\":\\\"⫖\\\",\\\"swarhk\\\":\\\"⤦\\\",\\\"swarr\\\":\\\"↙\\\",\\\"swArr\\\":\\\"⇙\\\",\\\"swarrow\\\":\\\"↙\\\",\\\"swnwar\\\":\\\"⤪\\\",\\\"szlig\\\":\\\"ß\\\",\\\"Tab\\\":\\\"\\\\t\\\",\\\"target\\\":\\\"⌖\\\",\\\"Tau\\\":\\\"Τ\\\",\\\"tau\\\":\\\"τ\\\",\\\"tbrk\\\":\\\"⎴\\\",\\\"Tcaron\\\":\\\"Ť\\\",\\\"tcaron\\\":\\\"ť\\\",\\\"Tcedil\\\":\\\"Ţ\\\",\\\"tcedil\\\":\\\"ţ\\\",\\\"Tcy\\\":\\\"Т\\\",\\\"tcy\\\":\\\"т\\\",\\\"tdot\\\":\\\"⃛\\\",\\\"telrec\\\":\\\"⌕\\\",\\\"Tfr\\\":\\\"𝔗\\\",\\\"tfr\\\":\\\"𝔱\\\",\\\"there4\\\":\\\"∴\\\",\\\"therefore\\\":\\\"∴\\\",\\\"Therefore\\\":\\\"∴\\\",\\\"Theta\\\":\\\"Θ\\\",\\\"theta\\\":\\\"θ\\\",\\\"thetasym\\\":\\\"ϑ\\\",\\\"thetav\\\":\\\"ϑ\\\",\\\"thickapprox\\\":\\\"≈\\\",\\\"thicksim\\\":\\\"∼\\\",\\\"ThickSpace\\\":\\\"  \\\",\\\"ThinSpace\\\":\\\" \\\",\\\"thinsp\\\":\\\" \\\",\\\"thkap\\\":\\\"≈\\\",\\\"thksim\\\":\\\"∼\\\",\\\"THORN\\\":\\\"Þ\\\",\\\"thorn\\\":\\\"þ\\\",\\\"tilde\\\":\\\"˜\\\",\\\"Tilde\\\":\\\"∼\\\",\\\"TildeEqual\\\":\\\"≃\\\",\\\"TildeFullEqual\\\":\\\"≅\\\",\\\"TildeTilde\\\":\\\"≈\\\",\\\"timesbar\\\":\\\"⨱\\\",\\\"timesb\\\":\\\"⊠\\\",\\\"times\\\":\\\"×\\\",\\\"timesd\\\":\\\"⨰\\\",\\\"tint\\\":\\\"∭\\\",\\\"toea\\\":\\\"⤨\\\",\\\"topbot\\\":\\\"⌶\\\",\\\"topcir\\\":\\\"⫱\\\",\\\"top\\\":\\\"⊤\\\",\\\"Topf\\\":\\\"𝕋\\\",\\\"topf\\\":\\\"𝕥\\\",\\\"topfork\\\":\\\"⫚\\\",\\\"tosa\\\":\\\"⤩\\\",\\\"tprime\\\":\\\"‴\\\",\\\"trade\\\":\\\"™\\\",\\\"TRADE\\\":\\\"™\\\",\\\"triangle\\\":\\\"▵\\\",\\\"triangledown\\\":\\\"▿\\\",\\\"triangleleft\\\":\\\"◃\\\",\\\"trianglelefteq\\\":\\\"⊴\\\",\\\"triangleq\\\":\\\"≜\\\",\\\"triangleright\\\":\\\"▹\\\",\\\"trianglerighteq\\\":\\\"⊵\\\",\\\"tridot\\\":\\\"◬\\\",\\\"trie\\\":\\\"≜\\\",\\\"triminus\\\":\\\"⨺\\\",\\\"TripleDot\\\":\\\"⃛\\\",\\\"triplus\\\":\\\"⨹\\\",\\\"trisb\\\":\\\"⧍\\\",\\\"tritime\\\":\\\"⨻\\\",\\\"trpezium\\\":\\\"⏢\\\",\\\"Tscr\\\":\\\"𝒯\\\",\\\"tscr\\\":\\\"𝓉\\\",\\\"TScy\\\":\\\"Ц\\\",\\\"tscy\\\":\\\"ц\\\",\\\"TSHcy\\\":\\\"Ћ\\\",\\\"tshcy\\\":\\\"ћ\\\",\\\"Tstrok\\\":\\\"Ŧ\\\",\\\"tstrok\\\":\\\"ŧ\\\",\\\"twixt\\\":\\\"≬\\\",\\\"twoheadleftarrow\\\":\\\"↞\\\",\\\"twoheadrightarrow\\\":\\\"↠\\\",\\\"Uacute\\\":\\\"Ú\\\",\\\"uacute\\\":\\\"ú\\\",\\\"uarr\\\":\\\"↑\\\",\\\"Uarr\\\":\\\"↟\\\",\\\"uArr\\\":\\\"⇑\\\",\\\"Uarrocir\\\":\\\"⥉\\\",\\\"Ubrcy\\\":\\\"Ў\\\",\\\"ubrcy\\\":\\\"ў\\\",\\\"Ubreve\\\":\\\"Ŭ\\\",\\\"ubreve\\\":\\\"ŭ\\\",\\\"Ucirc\\\":\\\"Û\\\",\\\"ucirc\\\":\\\"û\\\",\\\"Ucy\\\":\\\"У\\\",\\\"ucy\\\":\\\"у\\\",\\\"udarr\\\":\\\"⇅\\\",\\\"Udblac\\\":\\\"Ű\\\",\\\"udblac\\\":\\\"ű\\\",\\\"udhar\\\":\\\"⥮\\\",\\\"ufisht\\\":\\\"⥾\\\",\\\"Ufr\\\":\\\"𝔘\\\",\\\"ufr\\\":\\\"𝔲\\\",\\\"Ugrave\\\":\\\"Ù\\\",\\\"ugrave\\\":\\\"ù\\\",\\\"uHar\\\":\\\"⥣\\\",\\\"uharl\\\":\\\"↿\\\",\\\"uharr\\\":\\\"↾\\\",\\\"uhblk\\\":\\\"▀\\\",\\\"ulcorn\\\":\\\"⌜\\\",\\\"ulcorner\\\":\\\"⌜\\\",\\\"ulcrop\\\":\\\"⌏\\\",\\\"ultri\\\":\\\"◸\\\",\\\"Umacr\\\":\\\"Ū\\\",\\\"umacr\\\":\\\"ū\\\",\\\"uml\\\":\\\"¨\\\",\\\"UnderBar\\\":\\\"_\\\",\\\"UnderBrace\\\":\\\"⏟\\\",\\\"UnderBracket\\\":\\\"⎵\\\",\\\"UnderParenthesis\\\":\\\"⏝\\\",\\\"Union\\\":\\\"⋃\\\",\\\"UnionPlus\\\":\\\"⊎\\\",\\\"Uogon\\\":\\\"Ų\\\",\\\"uogon\\\":\\\"ų\\\",\\\"Uopf\\\":\\\"𝕌\\\",\\\"uopf\\\":\\\"𝕦\\\",\\\"UpArrowBar\\\":\\\"⤒\\\",\\\"uparrow\\\":\\\"↑\\\",\\\"UpArrow\\\":\\\"↑\\\",\\\"Uparrow\\\":\\\"⇑\\\",\\\"UpArrowDownArrow\\\":\\\"⇅\\\",\\\"updownarrow\\\":\\\"↕\\\",\\\"UpDownArrow\\\":\\\"↕\\\",\\\"Updownarrow\\\":\\\"⇕\\\",\\\"UpEquilibrium\\\":\\\"⥮\\\",\\\"upharpoonleft\\\":\\\"↿\\\",\\\"upharpoonright\\\":\\\"↾\\\",\\\"uplus\\\":\\\"⊎\\\",\\\"UpperLeftArrow\\\":\\\"↖\\\",\\\"UpperRightArrow\\\":\\\"↗\\\",\\\"upsi\\\":\\\"υ\\\",\\\"Upsi\\\":\\\"ϒ\\\",\\\"upsih\\\":\\\"ϒ\\\",\\\"Upsilon\\\":\\\"Υ\\\",\\\"upsilon\\\":\\\"υ\\\",\\\"UpTeeArrow\\\":\\\"↥\\\",\\\"UpTee\\\":\\\"⊥\\\",\\\"upuparrows\\\":\\\"⇈\\\",\\\"urcorn\\\":\\\"⌝\\\",\\\"urcorner\\\":\\\"⌝\\\",\\\"urcrop\\\":\\\"⌎\\\",\\\"Uring\\\":\\\"Ů\\\",\\\"uring\\\":\\\"ů\\\",\\\"urtri\\\":\\\"◹\\\",\\\"Uscr\\\":\\\"𝒰\\\",\\\"uscr\\\":\\\"𝓊\\\",\\\"utdot\\\":\\\"⋰\\\",\\\"Utilde\\\":\\\"Ũ\\\",\\\"utilde\\\":\\\"ũ\\\",\\\"utri\\\":\\\"▵\\\",\\\"utrif\\\":\\\"▴\\\",\\\"uuarr\\\":\\\"⇈\\\",\\\"Uuml\\\":\\\"Ü\\\",\\\"uuml\\\":\\\"ü\\\",\\\"uwangle\\\":\\\"⦧\\\",\\\"vangrt\\\":\\\"⦜\\\",\\\"varepsilon\\\":\\\"ϵ\\\",\\\"varkappa\\\":\\\"ϰ\\\",\\\"varnothing\\\":\\\"∅\\\",\\\"varphi\\\":\\\"ϕ\\\",\\\"varpi\\\":\\\"ϖ\\\",\\\"varpropto\\\":\\\"∝\\\",\\\"varr\\\":\\\"↕\\\",\\\"vArr\\\":\\\"⇕\\\",\\\"varrho\\\":\\\"ϱ\\\",\\\"varsigma\\\":\\\"ς\\\",\\\"varsubsetneq\\\":\\\"⊊︀\\\",\\\"varsubsetneqq\\\":\\\"⫋︀\\\",\\\"varsupsetneq\\\":\\\"⊋︀\\\",\\\"varsupsetneqq\\\":\\\"⫌︀\\\",\\\"vartheta\\\":\\\"ϑ\\\",\\\"vartriangleleft\\\":\\\"⊲\\\",\\\"vartriangleright\\\":\\\"⊳\\\",\\\"vBar\\\":\\\"⫨\\\",\\\"Vbar\\\":\\\"⫫\\\",\\\"vBarv\\\":\\\"⫩\\\",\\\"Vcy\\\":\\\"В\\\",\\\"vcy\\\":\\\"в\\\",\\\"vdash\\\":\\\"⊢\\\",\\\"vDash\\\":\\\"⊨\\\",\\\"Vdash\\\":\\\"⊩\\\",\\\"VDash\\\":\\\"⊫\\\",\\\"Vdashl\\\":\\\"⫦\\\",\\\"veebar\\\":\\\"⊻\\\",\\\"vee\\\":\\\"∨\\\",\\\"Vee\\\":\\\"⋁\\\",\\\"veeeq\\\":\\\"≚\\\",\\\"vellip\\\":\\\"⋮\\\",\\\"verbar\\\":\\\"|\\\",\\\"Verbar\\\":\\\"‖\\\",\\\"vert\\\":\\\"|\\\",\\\"Vert\\\":\\\"‖\\\",\\\"VerticalBar\\\":\\\"∣\\\",\\\"VerticalLine\\\":\\\"|\\\",\\\"VerticalSeparator\\\":\\\"❘\\\",\\\"VerticalTilde\\\":\\\"≀\\\",\\\"VeryThinSpace\\\":\\\" \\\",\\\"Vfr\\\":\\\"𝔙\\\",\\\"vfr\\\":\\\"𝔳\\\",\\\"vltri\\\":\\\"⊲\\\",\\\"vnsub\\\":\\\"⊂⃒\\\",\\\"vnsup\\\":\\\"⊃⃒\\\",\\\"Vopf\\\":\\\"𝕍\\\",\\\"vopf\\\":\\\"𝕧\\\",\\\"vprop\\\":\\\"∝\\\",\\\"vrtri\\\":\\\"⊳\\\",\\\"Vscr\\\":\\\"𝒱\\\",\\\"vscr\\\":\\\"𝓋\\\",\\\"vsubnE\\\":\\\"⫋︀\\\",\\\"vsubne\\\":\\\"⊊︀\\\",\\\"vsupnE\\\":\\\"⫌︀\\\",\\\"vsupne\\\":\\\"⊋︀\\\",\\\"Vvdash\\\":\\\"⊪\\\",\\\"vzigzag\\\":\\\"⦚\\\",\\\"Wcirc\\\":\\\"Ŵ\\\",\\\"wcirc\\\":\\\"ŵ\\\",\\\"wedbar\\\":\\\"⩟\\\",\\\"wedge\\\":\\\"∧\\\",\\\"Wedge\\\":\\\"⋀\\\",\\\"wedgeq\\\":\\\"≙\\\",\\\"weierp\\\":\\\"℘\\\",\\\"Wfr\\\":\\\"𝔚\\\",\\\"wfr\\\":\\\"𝔴\\\",\\\"Wopf\\\":\\\"𝕎\\\",\\\"wopf\\\":\\\"𝕨\\\",\\\"wp\\\":\\\"℘\\\",\\\"wr\\\":\\\"≀\\\",\\\"wreath\\\":\\\"≀\\\",\\\"Wscr\\\":\\\"𝒲\\\",\\\"wscr\\\":\\\"𝓌\\\",\\\"xcap\\\":\\\"⋂\\\",\\\"xcirc\\\":\\\"◯\\\",\\\"xcup\\\":\\\"⋃\\\",\\\"xdtri\\\":\\\"▽\\\",\\\"Xfr\\\":\\\"𝔛\\\",\\\"xfr\\\":\\\"𝔵\\\",\\\"xharr\\\":\\\"⟷\\\",\\\"xhArr\\\":\\\"⟺\\\",\\\"Xi\\\":\\\"Ξ\\\",\\\"xi\\\":\\\"ξ\\\",\\\"xlarr\\\":\\\"⟵\\\",\\\"xlArr\\\":\\\"⟸\\\",\\\"xmap\\\":\\\"⟼\\\",\\\"xnis\\\":\\\"⋻\\\",\\\"xodot\\\":\\\"⨀\\\",\\\"Xopf\\\":\\\"𝕏\\\",\\\"xopf\\\":\\\"𝕩\\\",\\\"xoplus\\\":\\\"⨁\\\",\\\"xotime\\\":\\\"⨂\\\",\\\"xrarr\\\":\\\"⟶\\\",\\\"xrArr\\\":\\\"⟹\\\",\\\"Xscr\\\":\\\"𝒳\\\",\\\"xscr\\\":\\\"𝓍\\\",\\\"xsqcup\\\":\\\"⨆\\\",\\\"xuplus\\\":\\\"⨄\\\",\\\"xutri\\\":\\\"△\\\",\\\"xvee\\\":\\\"⋁\\\",\\\"xwedge\\\":\\\"⋀\\\",\\\"Yacute\\\":\\\"Ý\\\",\\\"yacute\\\":\\\"ý\\\",\\\"YAcy\\\":\\\"Я\\\",\\\"yacy\\\":\\\"я\\\",\\\"Ycirc\\\":\\\"Ŷ\\\",\\\"ycirc\\\":\\\"ŷ\\\",\\\"Ycy\\\":\\\"Ы\\\",\\\"ycy\\\":\\\"ы\\\",\\\"yen\\\":\\\"¥\\\",\\\"Yfr\\\":\\\"𝔜\\\",\\\"yfr\\\":\\\"𝔶\\\",\\\"YIcy\\\":\\\"Ї\\\",\\\"yicy\\\":\\\"ї\\\",\\\"Yopf\\\":\\\"𝕐\\\",\\\"yopf\\\":\\\"𝕪\\\",\\\"Yscr\\\":\\\"𝒴\\\",\\\"yscr\\\":\\\"𝓎\\\",\\\"YUcy\\\":\\\"Ю\\\",\\\"yucy\\\":\\\"ю\\\",\\\"yuml\\\":\\\"ÿ\\\",\\\"Yuml\\\":\\\"Ÿ\\\",\\\"Zacute\\\":\\\"Ź\\\",\\\"zacute\\\":\\\"ź\\\",\\\"Zcaron\\\":\\\"Ž\\\",\\\"zcaron\\\":\\\"ž\\\",\\\"Zcy\\\":\\\"З\\\",\\\"zcy\\\":\\\"з\\\",\\\"Zdot\\\":\\\"Ż\\\",\\\"zdot\\\":\\\"ż\\\",\\\"zeetrf\\\":\\\"ℨ\\\",\\\"ZeroWidthSpace\\\":\\\"​\\\",\\\"Zeta\\\":\\\"Ζ\\\",\\\"zeta\\\":\\\"ζ\\\",\\\"zfr\\\":\\\"𝔷\\\",\\\"Zfr\\\":\\\"ℨ\\\",\\\"ZHcy\\\":\\\"Ж\\\",\\\"zhcy\\\":\\\"ж\\\",\\\"zigrarr\\\":\\\"⇝\\\",\\\"zopf\\\":\\\"𝕫\\\",\\\"Zopf\\\":\\\"ℤ\\\",\\\"Zscr\\\":\\\"𝒵\\\",\\\"zscr\\\":\\\"𝓏\\\",\\\"zwj\\\":\\\"‍\\\",\\\"zwnj\\\":\\\"‌\\\"}\");\n\n/***/ }),\n\n/***/ 1819:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;\n\n/***/ }),\n\n/***/ 1820:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;\n\n/***/ }),\n\n/***/ 1821:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function format(url) {\n  var result = '';\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n  return result;\n};\n\n/***/ }),\n\n/***/ 1822:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n //\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\n/* eslint-disable no-script-url */\n// protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n/* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) {\n    return url;\n  }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  var i,\n      l,\n      lowerProto,\n      hec,\n      slashes,\n      rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') {\n      hostEnd--;\n    }\n\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(host); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n\n        if (!part) {\n          continue;\n        }\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n\n  if (rest) {\n    this.pathname = rest;\n  }\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function (host) {\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) {\n    this.hostname = host;\n  }\n};\n\nmodule.exports = urlParse;\n\n/***/ }),\n\n/***/ 1823:\n/***/ (function(module, exports) {\n\nmodule.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;\n\n/***/ }),\n\n/***/ 1824:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Just a shortcut for bulk export\n\n\nexports.parseLinkLabel = __webpack_require__(1825);\nexports.parseLinkDestination = __webpack_require__(1826);\nexports.parseLinkTitle = __webpack_require__(1827);\n\n/***/ }),\n\n/***/ 1825:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  return labelEnd;\n};\n\n/***/ }),\n\n/***/ 1826:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Parse link destination\n//\n\n\nvar unescapeAll = __webpack_require__(57).unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code,\n      level,\n      pos = start,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3C\n        /* < */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            result.pos = pos + 1;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return result;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) {\n        break;\n      }\n\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n\n        if (level > 32) {\n          return result;\n        }\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        if (level === 0) {\n          break;\n        }\n\n        level--;\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n\n/***/ }),\n\n/***/ 1827:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Parse link title\n//\n\n\nvar unescapeAll = __webpack_require__(57).unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return result;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28\n    /* ( */\n    && marker === 0x29\n    /* ) */\n    ) {\n        return result;\n      } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n\n/***/ }),\n\n/***/ 1828:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n\n\nvar assign = __webpack_require__(57).assign;\n\nvar unescapeAll = __webpack_require__(57).unescapeAll;\n\nvar escapeHtml = __webpack_require__(57).escapeHtml; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar default_rules = {};\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(token.content) + '</code>';\n};\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted,\n      i,\n      arr,\n      tmpAttrs,\n      tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  } // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n\n\n  if (info) {\n    i = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    } // Fake token just to render attributes\n\n\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n    return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n  }\n\n  return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n};\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx]; // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\n\ndefault_rules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\ndefault_rules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n\ndefault_rules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n\ndefault_rules.html_block = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\ndefault_rules.html_inline = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\n\n\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\n\n\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) {\n    return '';\n  }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\n\n\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx]; // Tight list paragraphs\n\n  if (token.hidden) {\n    return '';\n  } // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n\n\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  } // Add token name, e.g. `<img`\n\n\n  result += (token.nesting === -1 ? '</' : '<') + token.tag; // Encode attributes, e.g. `<img src=\"foo\"`\n\n  result += this.renderAttrs(token); // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  } // Check if we need to add a newline after this tag\n\n\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\n\n\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n\n/***/ }),\n\n/***/ 1829:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n\n\nvar Ruler = __webpack_require__(326);\n\nvar _rules = [['normalize', __webpack_require__(1830)], ['block', __webpack_require__(1831)], ['inline', __webpack_require__(1832)], ['linkify', __webpack_require__(1833)], ['replacements', __webpack_require__(1834)], ['smartquotes', __webpack_require__(1835)], // `text_join` finds `text_special` tokens (for escape sequences)\n// and joins them with the rest of the text\n['text_join', __webpack_require__(1836)]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = __webpack_require__(1837);\nmodule.exports = Core;\n\n/***/ }),\n\n/***/ 1830:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Normalize input string\n // https://spec.commonmark.org/0.29/#line-ending\n\nvar NEWLINES_RE = /\\r\\n?|\\n/g;\nvar NULL_RE = /\\0/g;\n\nmodule.exports = function normalize(state) {\n  var str; // Normalize newlines\n\n  str = state.src.replace(NEWLINES_RE, '\\n'); // Replace NULL characters\n\n  str = str.replace(NULL_RE, \"\\uFFFD\");\n  state.src = str;\n};\n\n/***/ }),\n\n/***/ 1831:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n\n/***/ }),\n\n/***/ 1832:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 1833:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n\n\nvar arrayReplaceAt = __webpack_require__(57).arrayReplaceAt;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      currentToken,\n      nodes,\n      ln,\n      text,\n      pos,\n      lastPos,\n      level,\n      htmlLinkLevel,\n      url,\n      fullUrl,\n      urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i]; // Skip content of markdown links\n\n      if (currentToken.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        text = currentToken.content;\n        links = state.md.linkify.match(text); // Now split string to nodes\n\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0; // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n\n        if (links.length > 0 && links[0].index === 0 && i > 0 && tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n\n          urlText = links[ln].text; // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new state.Token('link_open', 'a', 1);\n          token.attrs = [['href', fullUrl]];\n          token.level = level++;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level = level;\n          nodes.push(token);\n          token = new state.Token('link_close', 'a', -1);\n          token.level = --level;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          lastPos = links[ln].lastIndex;\n        }\n\n        if (lastPos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 1834:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/; // Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\n\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '±') // .., ..., ....... -> …\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n        .replace(/(^|[^-])---(?=[^-]|$)/mg, \"$1\\u2014\") // en-dash\n        .replace(/(^|\\s)--(?=\\s|$)/mg, \"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, \"$1\\u2013\");\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 1835:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Convert straight quotation marks to typographic ones\n//\n\n\nvar isWhiteSpace = __webpack_require__(57).isWhiteSpace;\n\nvar isPunctChar = __webpack_require__(57).isPunctChar;\n\nvar isMdAsciiPunct = __webpack_require__(57).isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = \"\\u2019\";\n/* ’ */\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n\n    stack.length = j + 1;\n\n    if (token.type !== 'text') {\n      continue;\n    }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n\n      if (!t) {\n        break;\n      }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = t[0] === \"'\"; // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      } // Find next character,\n      // default to space if it's the end of the line\n      //\n\n\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22\n      /* \" */\n      && t[0] === '\"') {\n        if (lastChar >= 0x30\n        /* 0 */\n        && lastChar <= 0x39\n        /* 9 */\n        ) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            } // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n\n\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n\n/***/ }),\n\n/***/ 1836:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n\n\nmodule.exports = function text_join(state) {\n  var j,\n      l,\n      tokens,\n      curr,\n      max,\n      last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) {\n          tokens[last] = tokens[curr];\n        }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 1837:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Core state object\n//\n\n\nvar Token = __webpack_require__(327);\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n} // re-export Token class to use in core rules\n\n\nStateCore.prototype.Token = Token;\nmodule.exports = StateCore;\n\n/***/ }),\n\n/***/ 1838:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n\n\nvar Ruler = __webpack_require__(326);\n\nvar _rules = [// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', __webpack_require__(1839), ['paragraph', 'reference']], ['code', __webpack_require__(1840)], ['fence', __webpack_require__(1841), ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', __webpack_require__(1842), ['paragraph', 'reference', 'blockquote', 'list']], ['hr', __webpack_require__(1843), ['paragraph', 'reference', 'blockquote', 'list']], ['list', __webpack_require__(1844), ['paragraph', 'reference', 'blockquote']], ['reference', __webpack_require__(1845)], ['html_block', __webpack_require__(1846), ['paragraph', 'reference', 'blockquote']], ['heading', __webpack_require__(1848), ['paragraph', 'reference', 'blockquote']], ['lheading', __webpack_require__(1849)], ['paragraph', __webpack_require__(1850)]];\n/**\n * new ParserBlock()\n **/\n\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n} // Generate tokens for input range\n//\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok,\n      i,\n      prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    } // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n\n\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n\n        break;\n      }\n    } // this can only happen if user disables paragraph rule\n\n\n    if (!ok) throw new Error('none of the block rules matched'); // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\n\n\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) {\n    return;\n  }\n\n  state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\nParserBlock.prototype.State = __webpack_require__(1851);\nmodule.exports = ParserBlock;\n\n/***/ }),\n\n/***/ 1839:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// GFM table, https://github.github.com/gfm/#tables-extension-\n\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c\n    /* | */\n    ) {\n        if (!isEscaped) {\n          // pipe separating cells, '|'\n          result.push(current + str.substring(lastPos, pos));\n          current = '';\n          lastPos = pos + 1;\n        } else {\n          // escaped pipe, '\\|'\n          current += str.substring(lastPos, pos - 1);\n          lastPos = pos;\n        }\n      }\n\n    isEscaped = ch === 0x5c\n    /* \\ */\n    ;\n    pos++;\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules, firstCh, secondCh; // should have at least two lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // if it's indented more than 3 spaces, it should be a code block\n\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  firstCh = state.src.charCodeAt(pos++);\n\n  if (firstCh !== 0x7C\n  /* | */\n  && firstCh !== 0x2D\n  /* - */\n  && firstCh !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  secondCh = state.src.charCodeAt(pos++);\n\n  if (secondCh !== 0x7C\n  /* | */\n  && secondCh !== 0x2D\n  /* - */\n  && secondCh !== 0x3A\n  /* : */\n  && !isSpace(secondCh)) {\n    return false;\n  } // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n\n\n  if (firstCh === 0x2D\n  /* - */\n  && isSpace(secondCh)) {\n    return false;\n  }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n  columns = lineText.split('|');\n  aligns = [];\n\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop(); // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n\n  columnCount = columns.length;\n\n  if (columnCount === 0 || columnCount !== aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table'; // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n  token = state.push('thead_open', 'thead', 1);\n  token.map = [startLine, startLine + 1];\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.children = [];\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  token = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (!lineText) {\n      break;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [startLine + 2, 0];\n    }\n\n    token = state.push('tr_open', 'tr', 1);\n    token.map = [nextLine, nextLine + 1];\n\n    for (i = 0; i < columnCount; i++) {\n      token = state.push('td_open', 'td', 1);\n\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n\n      token = state.push('inline', '', 0);\n      token.content = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1840:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Code block (4 spaces padded)\n\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map = [startLine, state.line];\n  return true;\n};\n\n/***/ }),\n\n/***/ 1841:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// fences (``` lang, ~~~ lang)\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      token,\n      markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60\n  /* ` */\n  ) {\n      if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n        return false;\n      }\n    } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n};\n\n/***/ }),\n\n/***/ 1842:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Block quotes\n\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  }\n\n  oldBMarks = [];\n  oldBSCount = [];\n  oldSCount = [];\n  oldTShift = [];\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote'; // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    && !isOutdented) {\n      // This line is inside the blockquote.\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1; // skip one optional space after '>'\n\n      if (state.src.charCodeAt(pos) === 0x20\n      /* space */\n      ) {\n          // ' >   test '\n          //     ^ -- position start of line here:\n          pos++;\n          initial++;\n          adjustTab = false;\n          spaceAfterMarker = true;\n        } else if (state.src.charCodeAt(pos) === 0x09\n      /* tab */\n      ) {\n          spaceAfterMarker = true;\n\n          if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n            // '  >\\t  test '\n            //       ^ -- position start of line here (tab has width===1)\n            pos++;\n            initial++;\n            adjustTab = false;\n          } else {\n            // ' >\\t  test '\n            //    ^ -- position start of line here + shift bsCount slightly\n            //         to make extra space appear\n            adjustTab = true;\n          }\n        } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]); // A negative indentation means that this is a paragraph continuation\n    //\n\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  token = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map = lines = [startLine, 0];\n  state.md.block.tokenize(state, startLine, nextLine);\n  token = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1843:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Horizontal rule\n\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n};\n\n/***/ }),\n\n/***/ 1844:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Lists\n\n\nvar isSpace = __webpack_require__(57).isSpace; // Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine]; // List marker should have at least 2 chars (digit + dot)\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        // List marker should have no more than 9 digits\n        // (prevents integer overflow in browsers)\n        if (pos - start >= 10) {\n          return -1;\n        }\n\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n\n\n  if (state.listIndent >= 0 && state.sCount[nextLine] - state.listIndent >= 4 && state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n\n\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  } // Detect list type and position after marker\n\n\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1)); // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  } // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n\n\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  } // For validation mode we can terminate immediately\n\n\n  if (silent) {\n    return true;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // Start list\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map = listLines = [nextLine, 0];\n  token.markup = String.fromCharCode(markerCharCode); //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = initial + indentAfterMarker; // Run subparser & write tokens\n\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map = itemLines = [nextLine, 0];\n\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    } // change current state, then restore it after parser subcall\n\n\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine]; //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    } // If any of list item is tight, mark list as tight\n\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - nextLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    } // if it's indented more than 3 spaces, it should be a code block\n\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finalize list\n\n\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n\n/***/ }),\n\n/***/ 1845:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar normalizeReference = __webpack_require__(57).normalizeReference;\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    } // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n\n\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    && state.src.charCodeAt(pos - 1) !== 0x5C\n    /* \\ */\n    ) {\n        if (pos + 1 === max) {\n          return false;\n        }\n\n        if (state.src.charCodeAt(pos + 1) !== 0x3A\n        /* : */\n        ) {\n            return false;\n          }\n\n        break;\n      }\n  }\n\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  terminatorRules = state.md.block.ruler.getRules('reference');\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n        return false;\n      } else if (ch === 0x5D\n    /* ] */\n    ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A\n    /* \\n */\n    ) {\n        lines++;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        pos++;\n\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    } // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n\n  if (!res.ok) {\n    return false;\n  }\n\n  href = state.md.normalizeLink(res.str);\n\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n\n  pos = res.pos;\n  lines += res.lines; // save cursor state, we could require to rollback later\n\n  destEndPos = pos;\n  destEndLineNo = lines; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  } // skip trailing spaces until the rest of the line\n\n\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  } // Reference can not terminate anything. This check is for safety only.\n\n  /*istanbul ignore if*/\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  state.parentType = oldParentType;\n  state.line = startLine + lines + 1;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1846:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// HTML block\n\n\nvar block_names = __webpack_require__(1847);\n\nvar HTML_OPEN_CLOSE_TAG_RE = __webpack_require__(376).HTML_OPEN_CLOSE_TAG_RE; // An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\n\n\nvar HTML_SEQUENCES = [[/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i,\n      nextLine,\n      token,\n      lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1; // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n  token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n};\n\n/***/ }),\n\n/***/ 1847:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'section', 'source', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];\n\n/***/ }),\n\n/***/ 1848:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// heading (#, ##, ...)\n\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = state.src.slice(pos, max).trim();\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n  return true;\n};\n\n/***/ }),\n\n/***/ 1849:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// lheading (---, ===)\n\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      pos,\n      max,\n      level,\n      marker,\n      nextLine = startLine + 1,\n      oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'); // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n  // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } //\n    // Check for underline in setext header\n    //\n\n\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D\n        /* - */\n        || marker === 0x3D\n        /* = */\n        ) {\n            pos = state.skipChars(pos, marker);\n            pos = state.skipSpaces(pos);\n\n            if (pos >= max) {\n              level = marker === 0x3D\n              /* = */\n              ? 1 : 2;\n              break;\n            }\n          }\n      }\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = String.fromCharCode(marker);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line - 1];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1850:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Paragraph\n\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  token = state.push('paragraph_open', 'p', 1);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1851:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Parser state class\n\n\nvar Token = __webpack_require__(327);\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n  this.src = src; // link to parser instance\n\n  this.md = md;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n\n  this.sCount = []; // indents for each line (tabs expanded)\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n\n  this.bsCount = []; // block parser variables\n\n  this.blkIndent = 0; // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n\n  this.parentType = 'root';\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n} // Push new token to \"stream\".\n//\n\n\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n  if (nesting < 0) this.level--; // closing tag\n\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip spaces from given position in reverse.\n\n\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      lineIndent,\n      ch,\n      first,\n      last,\n      queue,\n      lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n}; // re-export Token class to use in block rules\n\n\nStateBlock.prototype.Token = Token;\nmodule.exports = StateBlock;\n\n/***/ }),\n\n/***/ 1852:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n\n\nvar Ruler = __webpack_require__(326); ////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\n\nvar _rules = [['text', __webpack_require__(1853)], ['linkify', __webpack_require__(1854)], ['newline', __webpack_require__(1855)], ['escape', __webpack_require__(1856)], ['backticks', __webpack_require__(1857)], ['strikethrough', __webpack_require__(377).tokenize], ['emphasis', __webpack_require__(378).tokenize], ['link', __webpack_require__(1858)], ['image', __webpack_require__(1859)], ['autolink', __webpack_require__(1860)], ['html_inline', __webpack_require__(1861)], ['entity', __webpack_require__(1862)]]; // `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\n\nvar _rules2 = [['balance_pairs', __webpack_require__(1863)], ['strikethrough', __webpack_require__(377).postProcess], ['emphasis', __webpack_require__(378).postProcess], // rules for pairs separate '**' into its own text tokens, which may be left unused,\n// rule below merges unused segments back with the rest of the text\n['fragments_join', __webpack_require__(1864)]];\n/**\n * new ParserInline()\n **/\n\nfunction ParserInline() {\n  var i;\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n\n\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n} // Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\n\n\nParserInline.prototype.skipToken = function (state) {\n  var ok,\n      i,\n      pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) {\n          throw new Error(\"inline rule didn't increment state.pos\");\n        }\n\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) {\n    state.pos++;\n  }\n\n  cache[pos] = state.pos;\n}; // Generate tokens for input range\n//\n\n\nParserInline.prototype.tokenize = function (state) {\n  var ok,\n      i,\n      prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          if (prevPos >= state.pos) {\n            throw new Error(\"inline rule didn't increment state.pos\");\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\n\n\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\nParserInline.prototype.State = __webpack_require__(1865);\nmodule.exports = ParserInline;\n\n/***/ }),\n\n/***/ 1853:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n}; // Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n\n/***/ }),\n\n/***/ 1854:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process links like https://example.org/\n // RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n  pos = state.pos;\n  max = state.posMax;\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A\n  /* : */\n  ) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F\n  /* / */\n  ) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F\n  /* / */\n  ) return false;\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n  proto = match[1];\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n  url = link.url; // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n\n  if (url.length <= proto.length) return false; // disallow '*' at the end of the link (conflicts with emphasis)\n\n  url = url.replace(/\\*+$/, '');\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n    token = state.push('link_open', 'a', 1);\n    token.attrs = [['href', fullUrl]];\n    token.markup = 'linkify';\n    token.info = 'auto';\n    token = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n    token = state.push('link_close', 'a', -1);\n    token.markup = 'linkify';\n    token.info = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1855:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Proceess '\\n'\n\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      ws,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) {\n          ws--;\n        }\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1856:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process escaped chars and hardbreaks\n\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch1,\n      ch2,\n      origStr,\n      escapedStr,\n      token,\n      pos = state.pos,\n      max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) return false;\n  pos++; // '\\' at the end of the inline block\n\n  if (pos >= max) return false;\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++; // skip leading whitespaces from next line\n\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1857:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Parse backticks\n\n\nmodule.exports = function backtick(state, silent) {\n  var start,\n      max,\n      marker,\n      token,\n      matchStart,\n      matchEnd,\n      openerLength,\n      closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax; // scan marker length\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos; // Nothing found in the cache, scan until the end of the line (or until marker is found)\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1; // scan marker length\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/\\n/g, ' ').replace(/^ (.+) $/, '$1');\n      }\n\n      state.pos = matchEnd;\n      return true;\n    } // Some different length found, put it in cache as upper limit of where closer can be found\n\n\n    state.backticks[closerLength] = matchStart;\n  } // Scanned through the end, didn't find anything\n\n\n  state.backticksScanned = true;\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1858:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process [link](<to> \"stuff\")\n\n\nvar normalizeReference = __webpack_require__(57).normalizeReference;\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // might have found a valid shortcut link, disable reference parsing\n      parseReference = false; // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        } // [link](  <href>  \"title\"  )\n        //                ^^ skipping these spaces\n\n\n        start = pos;\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        } // [link](  <href>  \"title\"  )\n        //                  ^^^^^^^ parsing link title\n\n\n        res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n        if (pos < max && start !== pos && res.ok) {\n          title = res.str;\n          pos = res.pos; // [link](  <href>  \"title\"  )\n          //                         ^^ skipping these spaces\n\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n\n            if (!isSpace(code) && code !== 0x0A) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          // parsing a valid shortcut link failed, fallback to reference\n          parseReference = true;\n        }\n\n      pos++;\n    }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1859:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process ![image](<src> \"title\")\n\n\nvar normalizeReference = __webpack_require__(57).normalizeReference;\n\nvar isSpace = __webpack_require__(57).isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1860:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process autolinks '<protocol:...>'\n\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\nmodule.exports = function autolink(state, silent) {\n  var url,\n      fullUrl,\n      token,\n      ch,\n      start,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n    ch = state.src.charCodeAt(pos);\n    if (ch === 0x3C\n    /* < */\n    ) return false;\n    if (ch === 0x3E\n    /* > */\n    ) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};\n\n/***/ }),\n\n/***/ 1861:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process html tags\n\n\nvar HTML_TAG_RE = __webpack_require__(376).HTML_TAG_RE;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function html_inline(state, silent) {\n  var ch,\n      match,\n      max,\n      token,\n      pos = state.pos;\n\n  if (!state.md.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    token = state.push('html_inline', '', 0);\n    token.content = match[0];\n    if (isLinkOpen(token.content)) state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n\n  state.pos += match[0].length;\n  return true;\n};\n\n/***/ }),\n\n/***/ 1862:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n\nvar entities = __webpack_require__(375);\n\nvar has = __webpack_require__(57).has;\n\nvar isValidEntityCode = __webpack_require__(57).isValidEntityCode;\n\nvar fromCodePoint = __webpack_require__(57).fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      token,\n      pos = state.pos,\n      max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) return false;\n  if (pos + 1 >= max) return false;\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23\n  /* # */\n  ) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          token = state.push('text_special', '', 0);\n          token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n/***/ }),\n\n/***/ 1863:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// For each opening emphasis-like marker find a matching closing one\n//\n\n\nfunction processDelimiters(delimiters) {\n  var closerIdx,\n      openerIdx,\n      closer,\n      opener,\n      minOpenerIdx,\n      newMinOpenerIdx,\n      isOddMatch,\n      lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n  if (!max) return; // headerIdx is the first delimiter of the current (where closer is) delimiter run\n\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n    jumps.push(0); // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token; // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n\n    closer.length = closer.length || 0;\n    if (!closer.close) continue; // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n        isOddMatch = false; // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n          closer.open = false;\n          opener.end = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1; // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 1864:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n\n\nmodule.exports = function fragments_join(state) {\n  var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n\n/***/ }),\n\n/***/ 1865:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Inline parser state\n\n\nvar Token = __webpack_require__(327);\n\nvar isWhiteSpace = __webpack_require__(57).isWhiteSpace;\n\nvar isPunctChar = __webpack_require__(57).isPunctChar;\n\nvar isMdAsciiPunct = __webpack_require__(57).isMdAsciiPunct;\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n\n  this.cache = {}; // List of emphasis-like delimiters for current tag\n\n  this.delimiters = []; // Stack of delimiter lists for upper level tags\n\n  this._prev_delimiters = []; // backtick length => last seen position\n\n  this.backticks = {};\n  this.backticksScanned = false; // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n\n  this.linkLevel = 0;\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n\n    this._prev_delimiters.push(this.delimiters);\n\n    this.delimiters = [];\n    token_meta = {\n      delimiters: this.delimiters\n    };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n}; // Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\n\n\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open,\n      can_close,\n      isLastWhiteSpace,\n      isLastPunctChar,\n      isNextWhiteSpace,\n      isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start); // treat beginning of the line as a whitespace\n\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  count = pos - start; // treat end of the line as a whitespace\n\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open = left_flanking && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking || isNextPunctChar);\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    length: count\n  };\n}; // re-export Token class to use in block rules\n\n\nStateInline.prototype.Token = Token;\nmodule.exports = StateInline;\n\n/***/ }),\n\n/***/ 1866:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// markdown-it default options\n\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 100 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n\n/***/ }),\n\n/***/ 1867:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'fragments_join']\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 1868:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Commonmark default options\n\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'fragments_join']\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 286:\n/***/ (function(module, exports) {\n\nmodule.exports = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;\n\n/***/ }),\n\n/***/ 324:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports.encode = __webpack_require__(1819);\nmodule.exports.decode = __webpack_require__(1820);\nmodule.exports.format = __webpack_require__(1821);\nmodule.exports.parse = __webpack_require__(1822);\n\n/***/ }),\n\n/***/ 326:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n\n/**\n * new Ruler()\n **/\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n} ////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n// Find rule index by name\n//\n\n\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Build rules lookup cache\n//\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and enable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\n\n\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n\n  this.enable(list, ignoreInvalid);\n};\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  } // Chain can be empty, if rules disabled. But we still have to return Array.\n\n\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n\n/***/ }),\n\n/***/ 327:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Token class\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\n\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n\n  this.tag = tag;\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n\n  this.attrs = null;\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n\n  this.map = null;\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n\n  this.nesting = nesting;\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n\n  this.level = 0;\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n\n  this.children = null;\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n\n  this.content = '';\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n\n  this.markup = '';\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n\n  this.info = '';\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n\n  this.meta = null;\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n\n  this.block = false;\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n\n  this.hidden = false;\n}\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\n\n\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) {\n    return -1;\n  }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\n\n\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\n\n\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [name, value];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\n\n\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name),\n      value = null;\n\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n\n  return value;\n};\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\n\n\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\nmodule.exports = Token;\n\n/***/ }),\n\n/***/ 354:\n/***/ (function(module, exports) {\n\nmodule.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n\n/***/ }),\n\n/***/ 355:\n/***/ (function(module, exports) {\n\nmodule.exports = /[\\0-\\x1F\\x7F-\\x9F]/;\n\n/***/ }),\n\n/***/ 356:\n/***/ (function(module, exports) {\n\nmodule.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;\n\n/***/ }),\n\n/***/ 374:\n/***/ (function(module, exports) {\n\n/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n\n/* WEBPACK VAR INJECTION */}.call(this, {}))\n\n/***/ }),\n\n/***/ 375:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// HTML5 entities map: { name -> utf16string }\n//\n\n/*eslint quotes:0*/\n\nmodule.exports = __webpack_require__(1818);\n\n/***/ }),\n\n/***/ 376:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Regexps to match html elements\n\n\nvar attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\nvar attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nvar attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nvar open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n\n/***/ }),\n\n/***/ 377:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// ~~strike through~~\n//\n // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i,\n      scanned,\n      token,\n      len,\n      ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) {\n    return false;\n  }\n\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker: marker,\n      length: 0,\n      // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E\n    /* ~ */\n    ) {\n        continue;\n      }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  } // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n\n\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 378:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Process *this* and _that_\n//\n // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F\n    /* _ */\n    && startDelim.marker !== 0x2A\n    /* * */\n    ) {\n        continue;\n      } // Process only opening markers\n\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end]; // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n\n    isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && // check that first two markers match and adjacent\n    delimiters[i - 1].marker === startDelim.marker && delimiters[i - 1].token === startDelim.token - 1 && // check that last two markers are adjacent (we can safely assume they match)\n    delimiters[startDelim.end + 1].token === endDelim.token + 1;\n    ch = String.fromCharCode(startDelim.marker);\n    token = state.tokens[startDelim.token];\n    token.type = isStrong ? 'strong_open' : 'em_open';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = isStrong ? 'strong_close' : 'em_close';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n\n/***/ }),\n\n/***/ 57:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// Utilities\n//\n\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (_typeof(source) !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = __webpack_require__(375);\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\n\n\nvar UNICODE_PUNCT_RE = __webpack_require__(286); // Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' '); // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  } // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n\n\n  return str.toLowerCase().toUpperCase();\n} ////////////////////////////////////////////////////////////////////////////////\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nexports.lib = {};\nexports.lib.mdurl = __webpack_require__(324);\nexports.lib.ucmicro = __webpack_require__(1782);\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.unescapeAll = unescapeAll;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint; // exports.replaceEntities     = replaceEntities;\n\nexports.escapeHtml = escapeHtml;\nexports.arrayReplaceAt = arrayReplaceAt;\nexports.isSpace = isSpace;\nexports.isWhiteSpace = isWhiteSpace;\nexports.isMdAsciiPunct = isMdAsciiPunct;\nexports.isPunctChar = isPunctChar;\nexports.escapeRE = escapeRE;\nexports.normalizeReference = normalizeReference;\n\n/***/ })\n\n}]);","inputSourceMap":{"version":3,"sources":["/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/linkify-it/index.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/uc.micro/index.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/node-libs-browser/node_modules/punycode/punycode.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/index.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/linkify-it/lib/re.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/index.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/mdurl/encode.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/mdurl/decode.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/mdurl/format.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/mdurl/parse.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/uc.micro/categories/Cf/regex.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/helpers/index.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/helpers/parse_link_label.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/helpers/parse_link_destination.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/helpers/parse_link_title.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/renderer.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/parser_core.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/normalize.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/block.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/inline.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/linkify.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/replacements.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/smartquotes.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/text_join.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_core/state_core.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/parser_block.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/table.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/code.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/fence.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/blockquote.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/hr.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/list.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/reference.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/html_block.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/common/html_blocks.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/heading.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/lheading.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/paragraph.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_block/state_block.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/parser_inline.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/text.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/linkify.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/newline.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/escape.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/backticks.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/link.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/image.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/autolink.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/html_inline.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/entity.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/balance_pairs.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/fragments_join.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/state_inline.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/presets/default.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/presets/zero.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/presets/commonmark.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/uc.micro/categories/P/regex.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/mdurl/index.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/ruler.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/token.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/uc.micro/properties/Any/regex.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/uc.micro/categories/Cc/regex.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/uc.micro/categories/Z/regex.js","/home/chatwoot/chatwoot/node_modules/webpack/buildin/amd-options.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/common/entities.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/common/html_re.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/strikethrough.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/rules_inline/emphasis.js","/home/chatwoot/chatwoot/node_modules/babel-loader/lib/index.js??ref--6-0!/home/chatwoot/chatwoot/node_modules/markdown-it/lib/common/utils.js"],"names":[],"mappings":";;;;;;AAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sCAAsC;AACtC,CAAC;;;AAGD;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B;AAC9B;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,gXAAgX;;AAEhX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA,qBAAqB,mBAAO,CAAC,IAAU,iBAAiB;;;AAGxD;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,kEAAkE;AAClE;AACA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA;;AAEA;AACA,qCAAqC;;AAErC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG,EAAE;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG,EAAE;AACL;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;AACA;AACA,GAAG,0BAA0B;;AAE7B;AACA;AACA;AACA,mHAAmH;AACnH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,2BAA2B;;AAEtD;AACA,2BAA2B;;AAE3B;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uDAAuD;;AAEvD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA,GAAG;;;AAGH,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,2B;;;;;;;;AC3oBa;;AAEb,cAAc,mBAAO,CAAC,GAAwB;AAC9C,aAAa,mBAAO,CAAC,GAAuB;AAC5C,aAAa,mBAAO,CAAC,IAAuB;AAC5C,YAAY,mBAAO,CAAC,GAAsB;AAC1C,YAAY,mBAAO,CAAC,GAAsB,E;;;;;;;ACN1C,+GAAuB,2BAA2B,2EAA2E,kCAAkC,mBAAmB,GAAG,EAAE,OAAO,kCAAkC,8HAA8H,GAAG,EAAE,qBAAqB;;AAExX;AACA;;AAEA;AACA;AACA,qBAAqB,MAA8B,GAAG,SAAW;AACjE,oBAAoB,MAA6B,GAAG,SAAW;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,aAAa,SAAS;AACtB;AACA,eAAe,MAAM;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA,eAAe,MAAM;AACrB;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,MAAM;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,iCAAiC;AACjC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,MAAM;AACnB,eAAe,OAAO;AACtB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;AACA;AACA,UAAU;AACV;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,sCAAsC;AACtC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA,eAAe,WAAW;AAC1B;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,0BAA0B;;;AAG1B,2CAA2C,qBAAqB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,eAAe,OAAO;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB;;AAEhB,8BAA8B;;AAE9B,+BAA+B;;AAE/B;AACA;AACA,uBAAuB;;AAEvB,eAAe,iBAAiB;AAChC;;AAEA;AACA;AACA;AACA;;AAEA,iDAAiD;AACjD;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA,6BAA6B,iBAAiB;AAC9C;;AAEA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,eAAe,OAAO;AACtB;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA,eAAe,OAAO;AACtB;AACA;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAM,KAA2B,YAAY,wBAAU,iBAAiB,wBAAU;AAClF,IAAI,mCAAmB;AACvB;AACA,KAAK;AAAA,oGAAC;AACN,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC,Q;;;;;;;;;AC7iBY;;AAEb,iBAAiB,mBAAO,CAAC,IAAQ,E;;;;;;;;ACFpB;;AAEb;AACA;AACA,oBAAoB;;AAEpB,eAAe,mBAAO,CAAC,GAA+B;AACtD,cAAc,mBAAO,CAAC,GAA8B;AACpD,aAAa,mBAAO,CAAC,GAA6B;AAClD,aAAa,mBAAO,CAAC,GAA6B,SAAS,OAAO,WAAW;;AAE7E,0DAA0D,OAAO,MAAM;;AAEvE,+CAA+C;AAC/C;;AAEA,qCAAqC;AACrC;AACA,iCAAiC,SAAS;;AAE1C,iGAAiG;AACjG;AACA;;AAEA,8DAA8D,EAAE,wCAAwC;;AAExG;AACA,qCAAqC,EAAE,cAAc,EAAE,kCAAkC,IAAI;AAC7F;AACA,kGAAkG,WAAW,oGAAoG,2BAA2B,QAAQ;AACpP,OAAO,GAAG;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,wCAAwC;AAC5C;AACA,2DAA2D;AAC3D;;AAEA,4BAA4B,6BAA6B;AACzD,+BAA+B,KAAK,EAAE;AACtC;;AAEA;AACA,qDAAqD,KAAK;AAC1D,0JAA0J,KAAK;AAC/J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uGAAuG;AACvG;AACA;;AAEA,oDAAoD,IAAI;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;AC7EA;AACa;;AAEb,YAAY,mBAAO,CAAC,EAAgB;;AAEpC,cAAc,mBAAO,CAAC,IAAW;;AAEjC,eAAe,mBAAO,CAAC,IAAY;;AAEnC,iBAAiB,mBAAO,CAAC,IAAe;;AAExC,kBAAkB,mBAAO,CAAC,IAAgB;;AAE1C,mBAAmB,mBAAO,CAAC,IAAiB;;AAE5C,gBAAgB,mBAAO,CAAC,IAAY;;AAEpC,YAAY,mBAAO,CAAC,GAAO;;AAE3B,eAAe,mBAAO,CAAC,IAAU;;AAEjC;AACA,WAAW,mBAAO,CAAC,IAAmB;AACtC,QAAQ,mBAAO,CAAC,IAAgB;AAChC,cAAc,mBAAO,CAAC,IAAsB;AAC5C,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qDAAqD;;AAErD;AACA;AACA;AACA;AACA,CAAC;;;AAGD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uCAAuC;AAC9E,UAAU;AACV;AACA;AACA,iBAAiB;AACjB;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,uCAAuC;AAC9E;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6CAA6C;;AAE7C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B;AAChD,qBAAqB,oBAAoB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,4B;;;;;;;;;;;;;;;ACllBa;;AAEb,qBAAqB;AACrB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,SAAS;AACtB;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,gCAAgC,OAAO;AACvC;;AAEA;AACA;AACA;AACA,qBAAqB,EAAE;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wBAAwB;AACxB;AACA,wB;;;;;;;;ACvGa;AACb;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA;;AAEA;AACA,CAAC;AACD;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,OAAO;AACtC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA,wBAAwB;AACxB;AACA,wB;;;;;;;;AC5Ha;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,2CAA2C,KAAK;AAChD,0CAA0C,KAAK;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,4BAA4B;AAC3C;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA,eAAe,yBAAyB;AACxC;;AAEA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,+BAA+B;;AAE/B,yBAAyB;AACzB;;AAEA,wCAAwC;AACxC;;AAEA,mGAAmG;;AAEnG;AACA;;AAEA,uCAAuC,OAAO;AAC9C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,0CAA0C,OAAO;AACjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;AC/UA,yO;;;;;;;;ACAA;AACa;;AAEb,yBAAyB,mBAAO,CAAC,IAAoB;AACrD,+BAA+B,mBAAO,CAAC,IAA0B;AACjE,yBAAyB,mBAAO,CAAC,IAAoB,E;;;;;;;;ACLrD;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,E;;;;;;;;ACvDA;AACA;AACa;;AAEb,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA,KAAK,wBAAwB,OAAO;;;AAGpC;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;ACzHA;AACA;AACa;;AAEb,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,E;;;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,aAAa,mBAAO,CAAC,EAAgB;;AAErC,kBAAkB,mBAAO,CAAC,EAAgB;;AAE1C,iBAAiB,mBAAO,CAAC,EAAgB,aAAa;;;AAGtD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;;;AAGL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,cAAc;AACjE,mDAAmD,eAAe;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;;;AAGH,4DAA4D;;AAE5D,oCAAoC;;AAEpC;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA,sCAAsC,SAAS;AAC/C;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC,SAAS;AAC3C;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA,0B;;;;;;;;AC1UA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,GAAS;;AAE7B,4BAA4B,mBAAO,CAAC,IAAwB,cAAc,mBAAO,CAAC,IAAoB,eAAe,mBAAO,CAAC,IAAqB,gBAAgB,mBAAO,CAAC,IAAsB,qBAAqB,mBAAO,CAAC,IAA2B,oBAAoB,mBAAO,CAAC,IAA0B;AAC9S;AACA,cAAc,mBAAO,CAAC,IAAwB;AAC9C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA,+BAA+B,OAAO;AACtC;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,IAAyB;AACxD,sB;;;;;;;;AC9CA;AACa;;AAEb;AACA;;AAEA;AACA,UAAU;;AAEV,6CAA6C;;AAE7C;AACA;AACA,E;;;;;;;;ACba;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,E;;;;;;;;ACda;;AAEb;AACA;AACA;AACA;AACA,QAAQ;;AAER,gCAAgC,OAAO;AACvC;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;ACfA;AACA;AACA;AACA;AACa;;AAEb,qBAAqB,mBAAO,CAAC,EAAiB;;AAE9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;;AAEA;AACA,sBAAsB;AACtB;;AAEA,+BAA+B,QAAQ;AACvC,+BAA+B;;AAE/B;AACA;;AAEA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C;;AAE7C;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,mBAAmB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA,mCAAmC;AACnC;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;AACA;AACA,E;;;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACa;AACb;AACA;;AAEA,6CAA6C;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,QAAQ;AAC3C;;AAEA;AACA;AACA;AACA;AACA,qBAAqB,GAAG,qDAAqD,GAAG,yBAAyB,GAAG;AAC5G;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC,aAAa;AACrD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;ACnGA;AACA;AACa;;AAEb,mBAAmB,mBAAO,CAAC,EAAiB;;AAE5C,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,qBAAqB,mBAAO,CAAC,EAAiB;;AAE9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,mBAAmB;AAChC;AACA;;AAEA,8BAA8B,QAAQ;AACtC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP,uBAAuB,QAAQ;AAC/B,sFAAsF;;AAEtF,2CAA2C;;AAE3C;AACA;AACA;AACA,OAAO;AACP;AACA;;;AAGA;;AAEA;AACA;AACA,OAAO;AACP,uBAAuB,mBAAmB;AAC1C,sFAAsF;;AAEtF,2CAA2C;;AAE3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,kCAAkC,QAAQ;AAC1C;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wCAAwC,aAAa;AACrD;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;ACtNA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC,OAAO;AAC5C;AACA;AACA;;AAEA,kBAAkB,YAAY;AAC9B;AACA;AACA;AACA;;AAEA,yBAAyB,YAAY;AACrC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,E;;;;;;;;AC9CA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,GAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA,eAAe;AACf,CAAC;;;AAGD;AACA,2B;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,GAAS;;AAE7B;AACA;AACA,UAAU,mBAAO,CAAC,IAAqB,yCAAyC,mBAAO,CAAC,IAAoB,cAAc,mBAAO,CAAC,IAAqB,qEAAqE,mBAAO,CAAC,IAA0B,6DAA6D,mBAAO,CAAC,IAAkB,+DAA+D,mBAAO,CAAC,IAAoB,4DAA4D,mBAAO,CAAC,IAAyB,mBAAmB,mBAAO,CAAC,IAA0B,0DAA0D,mBAAO,CAAC,IAAuB,2DAA2D,mBAAO,CAAC,IAAwB,kBAAkB,mBAAO,CAAC,IAAyB;AACzyB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,mBAAmB;AACpC;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,eAAe,SAAS;AACxB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL,gEAAgE;AAChE;;AAEA,iCAAiC;;AAEjC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,8BAA8B,mBAAO,CAAC,IAA2B;AACjE,6B;;;;;;;;ACzHA;AACa;;AAEb,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sKAAsK;;AAEtK;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0EAA0E;AAC1E;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,oBAAoB;AACjC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,gCAAgC,oBAAoB;AACpD;AACA;AACA;;AAEA;;AAEA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,iBAAiB;AAChC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;AC1RA;AACa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;AClCA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,GAAG;;;AAGH;;AAEA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,uCAAuC;;AAEvC;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;ACpHA;AACa;;AAEb,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4BAA4B,oBAAoB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;;AAEA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,2CAA2C;AAC3C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,4BAA4B;AACpD;;AAEA,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;AChOA;AACa;;AAEb,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;ACzDA;AACa;;AAEb,cAAc,mBAAO,CAAC,EAAiB,UAAU;AACjD;;;AAGA;AACA;AACA;AACA;AACA,uCAAuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA,qEAAqE;AACrE;;AAEA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;;;AAGH,4DAA4D;;AAE5D;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA,qDAAqD;AACrD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;;;AAGA;AACA;AACA,KAAK;AACL;;;AAGA,yCAAyC;;AAEzC;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,uCAAuC;AACvC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;;AAEA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,mCAAmC;;AAEnC;AACA;AACA;;AAEA;AACA,E;;;;;;;;ACnYa;;AAEb,yBAAyB,mBAAO,CAAC,EAAiB;;AAElD,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0BAA0B;;AAE1B;AACA;AACA;;AAEA,QAAQ,gDAAgD;AACxD;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;;AAEA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAe,WAAW;AAC1B;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;;AAGA,0BAA0B,WAAW;AACrC;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB;;AAErB;AACA,wBAAwB;AACxB;;AAEA;;AAEA,QAAQ,WAAW;AACnB;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;AChQA;AACa;;AAEb,kBAAkB,mBAAO,CAAC,IAAuB;;AAEjD,6BAA6B,mBAAO,CAAC,GAAmB,yBAAyB;AACjF;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,2BAA2B;AACxC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B;AAC3B;;AAEA;AACA,UAAU,oBAAoB;AAC9B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;AC/EA;AACA;AACa;;AAEb,gjB;;;;;;;;ACJA;AACa;;AAEb,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;;AAEpC;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA,4CAA4C;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;AC/DA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE;;AAEnE;AACA;AACA;;AAEA;AACA,iCAAiC;AACjC;;AAEA,QAAQ,gDAAgD;AACxD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;;AAEA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;ACpGA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;;AAEjC,QAAQ,gDAAgD;AACxD;AACA;AACA;AACA;AACA,KAAK;;;AAGL;AACA;AACA,KAAK;;;AAGL;;AAEA,2CAA2C,OAAO;AAClD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;ACrDA;AACa;;AAEb,YAAY,mBAAO,CAAC,GAAU;;AAE9B,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA,iBAAiB;;AAEjB;AACA,iBAAiB;AACjB;AACA;;AAEA;AACA,mBAAmB;;AAEnB,mBAAmB;;AAEnB,mBAAmB;;AAEnB,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB;;AAEpB,qBAAqB;AACrB;;AAEA,gBAAgB;;AAEhB,mBAAmB;;AAEnB,qBAAqB;;AAErB,qBAAqB;;AAErB,uBAAuB;AACvB;AACA;;AAEA;AACA,iBAAiB;;AAEjB,mBAAmB;AACnB;;AAEA;AACA;;AAEA,yDAAyD,WAAW;AACpE;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,CAAC;AACD;;;AAGA;AACA;AACA;AACA,gCAAgC;;AAEhC;AACA,gCAAgC;;AAEhC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;;AAEA,iCAAiC,WAAW;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,aAAa,YAAY;AACzB;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,EAAE;;;AAGF;AACA,4B;;;;;;;;AC3PA;AACA;AACA;AACA;AACA;AACa;;AAEb,YAAY,mBAAO,CAAC,GAAS,EAAE;AAC/B;;;AAGA,uBAAuB,mBAAO,CAAC,IAAqB,gBAAgB,mBAAO,CAAC,IAAwB,gBAAgB,mBAAO,CAAC,IAAwB,eAAe,mBAAO,CAAC,IAAuB,kBAAkB,mBAAO,CAAC,IAA0B,sBAAsB,mBAAO,CAAC,GAA8B,0BAA0B,mBAAO,CAAC,GAAyB,sBAAsB,mBAAO,CAAC,IAAqB,cAAc,mBAAO,CAAC,IAAsB,iBAAiB,mBAAO,CAAC,IAAyB,oBAAoB,mBAAO,CAAC,IAA4B,eAAe,mBAAO,CAAC,IAAuB,IAAI;AACxmB;AACA;AACA;AACA;;AAEA,iCAAiC,mBAAO,CAAC,IAA8B,sBAAsB,mBAAO,CAAC,GAA8B,6BAA6B,mBAAO,CAAC,GAAyB;AACjM;AACA,mBAAmB,mBAAO,CAAC,IAA+B;AAC1D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,mBAAmB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA,CAAC;AACD;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;;AAEA,+BAA+B,mBAAO,CAAC,IAA6B;AACpE,8B;;;;;;;;AClLA;AACA;AACa;AACb,MAAM;AACN,oDAAoD,oCAAoC,MAAM;AAC9F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;;AAEA;AACA,kBAAkB,cAAc;;AAEhC;AACA;AACA,kBAAkB,uCAAuC;AACzD;AACA;AACA;;AAEA,gBAAgB,kDAAkD;;AAElE;;AAEA;AACA,EAAE,E;;;;;;;;ACnIF;AACa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA,+CAA+C;;AAE/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;AClDA;AACa;;AAEb,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,QAAQ;;AAER;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;ACpDA;AACa;;AAEb,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;;AAEA,eAAe,SAAS;AACxB;AACA;;AAEA,oBAAoB,WAAW,EAAE;AACjC;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;;AAER;AACA;;AAEA;AACA;AACA;AACA;;AAEA,UAAU;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;AC5EA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB;;AAEjB;AACA,8BAA8B;;AAE9B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA,E;;;;;;;;AC1EA;AACa;;AAEb,yBAAyB,mBAAO,CAAC,EAAiB;;AAElD,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEAAqE;;AAErE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;;AAEA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;;AAGA;;AAEA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA,SAAS;AACT;;;AAGA;;AAEA;AACA;AACA,wBAAwB;AACxB;;AAEA,gBAAgB,WAAW;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;ACrLA;AACa;;AAEb,yBAAyB,mBAAO,CAAC,EAAiB;;AAElD,cAAc,mBAAO,CAAC,EAAiB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,0EAA0E;;AAE1E;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;;AAGA;;AAEA,YAAY,WAAW;AACvB;;AAEA;AACA;AACA;AACA,OAAO;AACP;;;AAGA;;AAEA;AACA;AACA,sBAAsB;AACtB;;AAEA,cAAc,WAAW;AACzB;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,KAAK;AACL;;;AAGA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;ACvLA;AACa;AACb;;AAEA,6CAA6C,EAAE,gCAAgC,KAAK,6CAA6C,KAAK;AACtI,6CAA6C,KAAK;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,E;;;;;;;;ACrFA;AACa;;AAEb,kBAAkB,mBAAO,CAAC,GAAmB;;AAE7C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,E;;;;;;;;ACxEA,+BAA+B,QAAQ,QAAQ;AAClC;;AAEb,eAAe,mBAAO,CAAC,GAAoB;;AAE3C,UAAU,mBAAO,CAAC,EAAiB;;AAEnC,wBAAwB,mBAAO,CAAC,EAAiB;;AAEjD,oBAAoB,mBAAO,CAAC,EAAiB;;AAE7C,mCAAmC,IAAI,OAAO,IAAI,GAAG;AACrD,iCAAiC,KAAK,EAAE;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,E;;;;;;;;AC/DA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,mBAAmB;;AAEnB;AACA,wBAAwB;;AAExB;;AAEA,qBAAqB,iBAAiB;AACtC;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,UAAU,0BAA0B;AACpC;AACA;;AAEA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA,E;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA,uBAAuB,YAAY;AACnC;AACA;AACA,0CAA0C;;AAE1C;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,E;;;;;;;;ACxCA;AACa;;AAEb,YAAY,mBAAO,CAAC,GAAU;;AAE9B,mBAAmB,mBAAO,CAAC,EAAiB;;AAE5C,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,qBAAqB,mBAAO,CAAC,EAAiB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY,aAAa;AACjD;;AAEA,kBAAkB;;AAElB,uBAAuB;;AAEvB,6BAA6B;;AAE7B;AACA,gCAAgC;AAChC;;AAEA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;;AAE1C;;AAEA;AACA;AACA;;AAEA,sBAAsB;;AAEtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,EAAE;;;AAGF;AACA,6B;;;;;;;;AC1JA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;;AAEA,GAAG;AACH;AACA,YAAY;AACZ,aAAa;AACb;AACA;AACA,E;;;;;;;;ACxCA;AACA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,E;;;;;;;;AChDA;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,E;;;;;;;AC/CA,gCAAgC,WAAW,EAAE,y0D;;;;;;;;ACAhC;;AAEb,wBAAwB,mBAAO,CAAC,IAAU;AAC1C,wBAAwB,mBAAO,CAAC,IAAU;AAC1C,wBAAwB,mBAAO,CAAC,IAAU;AAC1C,uBAAuB,mBAAO,CAAC,IAAS,E;;;;;;;;ACLxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA,CAAC;AACD;AACA;AACA;;;AAGA;AACA,iBAAiB,2BAA2B;AAC5C;AACA;AACA;AACA;;AAEA;AACA,EAAE;AACF;;;AAGA;AACA;AACA,oBAAoB;;AAEpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,kBAAkB;;AAElB;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;;AAEA,uB;;;;;;;;ACtXA;AACa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8BAA8B,SAAS;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iCAAiC,SAAS;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,uB;;;;;;;AC7MA,oJ;;;;;;;ACAA,sC;;;;;;;ACAA,4E;;;;;;;ACAA;AACA;;;;;;;;;;ACDA,wBAAwB;AACxB;AACa;AACb;;AAEA,iBAAiB,mBAAO,CAAC,IAAiC,E;;;;;;;;ACL1D;AACa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+D;;;;;;;;AClBA;AACA;AACa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,aAAa,SAAS;AACtB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA,E;;;;;;;;ACtIA;AACA;AACa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,oBAAoB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,mBAAmB,QAAQ;AAC3B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;;AAGP;AACA;AACA;;AAEA,0CAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY;AAC5B;AACA;AACA;AACA;AACA,E;;;;;;;;AC5HA;AACA;AACa;;AAEb,uBAAuB,2BAA2B,2EAA2E,kCAAkC,mBAAmB,GAAG,EAAE,OAAO,kCAAkC,8HAA8H,GAAG,EAAE,qBAAqB;;AAExX;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA,CAAC;AACD;;;AAGA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,6CAA6C,cAAc,EAAE;AAC7D,kCAAkC,KAAK,EAAE;AACzC;AACA,8CAA8C,IAAI,OAAO,IAAI;;AAE7D,eAAe,mBAAO,CAAC,GAAY;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,YAAY;;AAEzC;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH,CAAC;;;AAGD;AACA;AACA;AACA,aAAa;AACb,YAAY;AACZ,YAAY;AACZ,cAAc;AACd;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD,wCAAwC;;AAExC;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;;AAGA,uBAAuB,mBAAO,CAAC,GAA6B,EAAE;;;AAG9D;AACA;AACA,CAAC;AACD;AACA,oDAAoD,oCAAoC,MAAM;AAC9F;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;;;AAGA;AACA;AACA;AACA,wCAAwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,2BAA2B,GAAG,EAAE,MAAM,KAAK;AACrD,UAAU,yBAAyB,GAAG,EAAE,MAAM,IAAI,MAAM;AACxD,UAAU,mBAAmB,GAAG,EAAE,EAAE,iBAAiB,EAAE,iCAAiC,MAAM;AAC9F,UAAU,2BAA2B,GAAG,EAAE,EAAE,iBAAiB,KAAK;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA,CAAC;AACD;AACA;AACA;AACA;;;AAGA;AACA,oBAAoB,mBAAO,CAAC,GAAO;AACnC,sBAAsB,mBAAO,CAAC,IAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD","file":"x","sourcesContent":["'use strict'; ////////////////////////////////////////////////////////////////////////////////\n// Helpers\n// Merge objects\n//\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n}\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nfunction isObject(obj) {\n  return _class(obj) === '[object Object]';\n}\n\nfunction isRegExp(obj) {\n  return _class(obj) === '[object RegExp]';\n}\n\nfunction isFunction(obj) {\n  return _class(obj) === '[object Function]';\n}\n\nfunction escapeRE(str) {\n  return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http = new RegExp('^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i');\n      }\n\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'https:': 'http:',\n  'ftp:': 'http:',\n  '//': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http = new RegExp('^' + self.re.src_auth + // Don't allow single-level domains, because of false positives like '//test'\n        // with code comments\n        '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' + self.re.src_port + self.re.src_host_terminator + self.re.src_path, 'i');\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') {\n          return 0;\n        }\n\n        if (pos >= 3 && text[pos - 3] === '/') {\n          return 0;\n        }\n\n        return tail.match(self.re.no_http)[0].length;\n      }\n\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function validate(text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto = new RegExp('^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i');\n      }\n\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n\n      return 0;\n    }\n  }\n};\n/*eslint-disable max-len*/\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\n\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]'; // DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\n\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n/*eslint-enable max-len*/\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__ = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n} // Schemas compiler. Build regexps.\n//\n\n\nfunction compile(self) {\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__); // Define dynamic patterns\n\n\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n\n  tlds.push(re.src_xn);\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) {\n    return tpl.replace('%TLDS%', re.src_tlds);\n  }\n\n  re.email_fuzzy = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test = RegExp(untpl(re.tpl_host_fuzzy_test), 'i'); //\n  // Compile each schema\n  //\n\n  var aliases = [];\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name]; // skip disabled methods\n\n    if (val === null) {\n      return;\n    }\n\n    var compiled = {\n      validate: null,\n      link: null\n    };\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  }); //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate = self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize = self.__compiled__[self.__schemas__[alias]].normalize;\n  }); //\n  // Fake record for guessed links\n  //\n\n  self.__compiled__[''] = {\n    validate: null,\n    normalize: createNormalizer()\n  }; //\n  // Build schema condition\n  //\n\n  var slist = Object.keys(self.__compiled__).filter(function (name) {\n    // Filter disabled & fake schemas\n    return name.length > 0 && self.__compiled__[name];\n  }).map(escapeRE).join('|'); // (?!_) cause 1.5x slowdown\n\n  self.re.schema_test = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp(\"(^|(?!_)(?:[><\\uFF5C]|\" + re.src_ZPCc + '))(' + slist + ')', 'ig');\n  self.re.schema_at_start = RegExp('^' + self.re.schema_search.source, 'i');\n  self.re.pretest = RegExp('(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@', 'i'); //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\n\n\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end = self.__last_index__,\n      text = self.__text_cache__.slice(start, end);\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n\n\n  this.schema = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n\n  this.index = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n\n  this.raw = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n\n  this.text = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n\n  this.url = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\n\n\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__ = assign({}, defaultOptions, options); // Cache last tested result. Used to skip repeating steps on next `match` call.\n\n  this.__index__ = -1;\n  this.__last_index__ = -1; // Next scan position\n\n  this.__schema__ = '';\n  this.__text_cache__ = '';\n  this.__schemas__ = assign({}, defaultSchemas, schemas);\n  this.__compiled__ = {};\n  this.__tlds__ = tlds_default;\n  this.__tlds_replaced__ = false;\n  this.re = {};\n  compile(this);\n}\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\n\n\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\n\n\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\n\n\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n\n  if (!text.length) {\n    return false;\n  }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos; // try to scan for link with schema - that's the most simple rule\n\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n\n      if (len) {\n        this.__schema__ = m[2];\n        this.__index__ = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__ = '';\n            this.__index__ = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n        shift = me.index + me[1].length;\n        next = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ || shift === this.__index__ && next > this.__last_index__) {\n          this.__schema__ = 'mailto:';\n          this.__index__ = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\n\n\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\n\n\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\n\n\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0,\n      result = []; // Try to take previous element from cache, if .test() called before\n\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  } // Cut head if cache was used\n\n\n  var tail = shift ? text.slice(shift) : text; // Scan string until end reached\n\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n/**\n * LinkifyIt#matchAtStart(text) -> Match|null\n *\n * Returns fully-formed (not fuzzy) link if it starts at the beginning\n * of the string, and null otherwise.\n **/\n\n\nLinkifyIt.prototype.matchAtStart = function matchAtStart(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__ = -1;\n  if (!text.length) return null;\n  var m = this.re.schema_at_start.exec(text);\n  if (!m) return null;\n  var len = this.testSchemaAt(text, m[2], m[0].length);\n  if (!len) return null;\n  this.__schema__ = m[2];\n  this.__index__ = m.index + m[1].length;\n  this.__last_index__ = m.index + m[0].length + len;\n  return createMatch(this, 0);\n};\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\n\n\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [list];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list).sort().filter(function (el, idx, arr) {\n    return el !== arr[idx - 1];\n  }).reverse();\n  compile(this);\n  return this;\n};\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\n\n\nLinkifyIt.prototype.normalize = function normalize(match) {\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n  if (!match.schema) {\n    match.url = 'http://' + match.url;\n  }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\n\n\nLinkifyIt.prototype.onCompile = function onCompile() {};\n\nmodule.exports = LinkifyIt;","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc = require('./categories/Cc/regex');\nexports.Cf = require('./categories/Cf/regex');\nexports.P = require('./categories/P/regex');\nexports.Z = require('./categories/Z/regex');","function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/*! https://mths.be/punycode v1.4.1 by @mathias */\n;\n\n(function (root) {\n  /** Detect free variables */\n  var freeExports = (typeof exports === \"undefined\" ? \"undefined\" : _typeof(exports)) == 'object' && exports && !exports.nodeType && exports;\n  var freeModule = (typeof module === \"undefined\" ? \"undefined\" : _typeof(module)) == 'object' && module && !module.nodeType && module;\n  var freeGlobal = (typeof global === \"undefined\" ? \"undefined\" : _typeof(global)) == 'object' && global;\n\n  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {\n    root = freeGlobal;\n  }\n  /**\n   * The `punycode` object.\n   * @name punycode\n   * @type Object\n   */\n\n\n  var punycode,\n\n  /** Highest positive signed 32-bit float value */\n  maxInt = 2147483647,\n      // aka. 0x7FFFFFFF or 2^31-1\n\n  /** Bootstring parameters */\n  base = 36,\n      tMin = 1,\n      tMax = 26,\n      skew = 38,\n      damp = 700,\n      initialBias = 72,\n      initialN = 128,\n      // 0x80\n  delimiter = '-',\n      // '\\x2D'\n\n  /** Regular expressions */\n  regexPunycode = /^xn--/,\n      regexNonASCII = /[^\\x20-\\x7E]/,\n      // unprintable ASCII chars + non-ASCII chars\n  regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g,\n      // RFC 3490 separators\n\n  /** Error messages */\n  errors = {\n    'overflow': 'Overflow: input needs wider integers to process',\n    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n    'invalid-input': 'Invalid input'\n  },\n\n  /** Convenience shortcuts */\n  baseMinusTMin = base - tMin,\n      floor = Math.floor,\n      stringFromCharCode = String.fromCharCode,\n\n  /** Temporary variable */\n  key;\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A generic error utility function.\n   * @private\n   * @param {String} type The error type.\n   * @returns {Error} Throws a `RangeError` with the applicable error message.\n   */\n\n  function error(type) {\n    throw new RangeError(errors[type]);\n  }\n  /**\n   * A generic `Array#map` utility function.\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} callback The function that gets called for every array\n   * item.\n   * @returns {Array} A new array of values returned by the callback function.\n   */\n\n\n  function map(array, fn) {\n    var length = array.length;\n    var result = [];\n\n    while (length--) {\n      result[length] = fn(array[length]);\n    }\n\n    return result;\n  }\n  /**\n   * A simple `Array#map`-like wrapper to work with domain name strings or email\n   * addresses.\n   * @private\n   * @param {String} domain The domain name or email address.\n   * @param {Function} callback The function that gets called for every\n   * character.\n   * @returns {Array} A new string of characters returned by the callback\n   * function.\n   */\n\n\n  function mapDomain(string, fn) {\n    var parts = string.split('@');\n    var result = '';\n\n    if (parts.length > 1) {\n      // In email addresses, only the domain name should be punycoded. Leave\n      // the local part (i.e. everything up to `@`) intact.\n      result = parts[0] + '@';\n      string = parts[1];\n    } // Avoid `split(regex)` for IE8 compatibility. See #17.\n\n\n    string = string.replace(regexSeparators, '\\x2E');\n    var labels = string.split('.');\n    var encoded = map(labels, fn).join('.');\n    return result + encoded;\n  }\n  /**\n   * Creates an array containing the numeric code points of each Unicode\n   * character in the string. While JavaScript uses UCS-2 internally,\n   * this function will convert a pair of surrogate halves (each of which\n   * UCS-2 exposes as separate characters) into a single code point,\n   * matching UTF-16.\n   * @see `punycode.ucs2.encode`\n   * @see <https://mathiasbynens.be/notes/javascript-encoding>\n   * @memberOf punycode.ucs2\n   * @name decode\n   * @param {String} string The Unicode input string (UCS-2).\n   * @returns {Array} The new array of code points.\n   */\n\n\n  function ucs2decode(string) {\n    var output = [],\n        counter = 0,\n        length = string.length,\n        value,\n        extra;\n\n    while (counter < length) {\n      value = string.charCodeAt(counter++);\n\n      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n        // high surrogate, and there is a next character\n        extra = string.charCodeAt(counter++);\n\n        if ((extra & 0xFC00) == 0xDC00) {\n          // low surrogate\n          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n        } else {\n          // unmatched surrogate; only append this code unit, in case the next\n          // code unit is the high surrogate of a surrogate pair\n          output.push(value);\n          counter--;\n        }\n      } else {\n        output.push(value);\n      }\n    }\n\n    return output;\n  }\n  /**\n   * Creates a string based on an array of numeric code points.\n   * @see `punycode.ucs2.decode`\n   * @memberOf punycode.ucs2\n   * @name encode\n   * @param {Array} codePoints The array of numeric code points.\n   * @returns {String} The new Unicode string (UCS-2).\n   */\n\n\n  function ucs2encode(array) {\n    return map(array, function (value) {\n      var output = '';\n\n      if (value > 0xFFFF) {\n        value -= 0x10000;\n        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n        value = 0xDC00 | value & 0x3FF;\n      }\n\n      output += stringFromCharCode(value);\n      return output;\n    }).join('');\n  }\n  /**\n   * Converts a basic code point into a digit/integer.\n   * @see `digitToBasic()`\n   * @private\n   * @param {Number} codePoint The basic numeric code point value.\n   * @returns {Number} The numeric value of a basic code point (for use in\n   * representing integers) in the range `0` to `base - 1`, or `base` if\n   * the code point does not represent a value.\n   */\n\n\n  function basicToDigit(codePoint) {\n    if (codePoint - 48 < 10) {\n      return codePoint - 22;\n    }\n\n    if (codePoint - 65 < 26) {\n      return codePoint - 65;\n    }\n\n    if (codePoint - 97 < 26) {\n      return codePoint - 97;\n    }\n\n    return base;\n  }\n  /**\n   * Converts a digit/integer into a basic code point.\n   * @see `basicToDigit()`\n   * @private\n   * @param {Number} digit The numeric value of a basic code point.\n   * @returns {Number} The basic code point whose value (when used for\n   * representing integers) is `digit`, which needs to be in the range\n   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n   * used; else, the lowercase form is used. The behavior is undefined\n   * if `flag` is non-zero and `digit` has no uppercase form.\n   */\n\n\n  function digitToBasic(digit, flag) {\n    //  0..25 map to ASCII a..z or A..Z\n    // 26..35 map to ASCII 0..9\n    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n  }\n  /**\n   * Bias adaptation function as per section 3.4 of RFC 3492.\n   * https://tools.ietf.org/html/rfc3492#section-3.4\n   * @private\n   */\n\n\n  function adapt(delta, numPoints, firstTime) {\n    var k = 0;\n    delta = firstTime ? floor(delta / damp) : delta >> 1;\n    delta += floor(delta / numPoints);\n\n    for (;\n    /* no initialization */\n    delta > baseMinusTMin * tMax >> 1; k += base) {\n      delta = floor(delta / baseMinusTMin);\n    }\n\n    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n  }\n  /**\n   * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n   * symbols.\n   * @memberOf punycode\n   * @param {String} input The Punycode string of ASCII-only symbols.\n   * @returns {String} The resulting string of Unicode symbols.\n   */\n\n\n  function decode(input) {\n    // Don't use UCS-2\n    var output = [],\n        inputLength = input.length,\n        out,\n        i = 0,\n        n = initialN,\n        bias = initialBias,\n        basic,\n        j,\n        index,\n        oldi,\n        w,\n        k,\n        digit,\n        t,\n\n    /** Cached calculation results */\n    baseMinusT; // Handle the basic code points: let `basic` be the number of input code\n    // points before the last delimiter, or `0` if there is none, then copy\n    // the first basic code points to the output.\n\n    basic = input.lastIndexOf(delimiter);\n\n    if (basic < 0) {\n      basic = 0;\n    }\n\n    for (j = 0; j < basic; ++j) {\n      // if it's not a basic code point\n      if (input.charCodeAt(j) >= 0x80) {\n        error('not-basic');\n      }\n\n      output.push(input.charCodeAt(j));\n    } // Main decoding loop: start just after the last delimiter if any basic code\n    // points were copied; start at the beginning otherwise.\n\n\n    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)\n    /* no final expression */\n    {\n      // `index` is the index of the next character to be consumed.\n      // Decode a generalized variable-length integer into `delta`,\n      // which gets added to `i`. The overflow checking is easier\n      // if we increase `i` as we go, then subtract off its starting\n      // value at the end to obtain `delta`.\n      for (oldi = i, w = 1, k = base;;\n      /* no condition */\n      k += base) {\n        if (index >= inputLength) {\n          error('invalid-input');\n        }\n\n        digit = basicToDigit(input.charCodeAt(index++));\n\n        if (digit >= base || digit > floor((maxInt - i) / w)) {\n          error('overflow');\n        }\n\n        i += digit * w;\n        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n        if (digit < t) {\n          break;\n        }\n\n        baseMinusT = base - t;\n\n        if (w > floor(maxInt / baseMinusT)) {\n          error('overflow');\n        }\n\n        w *= baseMinusT;\n      }\n\n      out = output.length + 1;\n      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,\n      // incrementing `n` each time, so we'll fix that now:\n\n      if (floor(i / out) > maxInt - n) {\n        error('overflow');\n      }\n\n      n += floor(i / out);\n      i %= out; // Insert `n` at position `i` of the output\n\n      output.splice(i++, 0, n);\n    }\n\n    return ucs2encode(output);\n  }\n  /**\n   * Converts a string of Unicode symbols (e.g. a domain name label) to a\n   * Punycode string of ASCII-only symbols.\n   * @memberOf punycode\n   * @param {String} input The string of Unicode symbols.\n   * @returns {String} The resulting Punycode string of ASCII-only symbols.\n   */\n\n\n  function encode(input) {\n    var n,\n        delta,\n        handledCPCount,\n        basicLength,\n        bias,\n        j,\n        m,\n        q,\n        k,\n        t,\n        currentValue,\n        output = [],\n\n    /** `inputLength` will hold the number of code points in `input`. */\n    inputLength,\n\n    /** Cached calculation results */\n    handledCPCountPlusOne,\n        baseMinusT,\n        qMinusT; // Convert the input in UCS-2 to Unicode\n\n    input = ucs2decode(input); // Cache the length\n\n    inputLength = input.length; // Initialize the state\n\n    n = initialN;\n    delta = 0;\n    bias = initialBias; // Handle the basic code points\n\n    for (j = 0; j < inputLength; ++j) {\n      currentValue = input[j];\n\n      if (currentValue < 0x80) {\n        output.push(stringFromCharCode(currentValue));\n      }\n    }\n\n    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;\n    // `basicLength` is the number of basic code points.\n    // Finish the basic string - if it is not empty - with a delimiter\n\n    if (basicLength) {\n      output.push(delimiter);\n    } // Main encoding loop:\n\n\n    while (handledCPCount < inputLength) {\n      // All non-basic code points < n have been handled already. Find the next\n      // larger one:\n      for (m = maxInt, j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue >= n && currentValue < m) {\n          m = currentValue;\n        }\n      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n      // but guard against overflow\n\n\n      handledCPCountPlusOne = handledCPCount + 1;\n\n      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n        error('overflow');\n      }\n\n      delta += (m - n) * handledCPCountPlusOne;\n      n = m;\n\n      for (j = 0; j < inputLength; ++j) {\n        currentValue = input[j];\n\n        if (currentValue < n && ++delta > maxInt) {\n          error('overflow');\n        }\n\n        if (currentValue == n) {\n          // Represent delta as a generalized variable-length integer\n          for (q = delta, k = base;;\n          /* no condition */\n          k += base) {\n            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n            if (q < t) {\n              break;\n            }\n\n            qMinusT = q - t;\n            baseMinusT = base - t;\n            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));\n            q = floor(qMinusT / baseMinusT);\n          }\n\n          output.push(stringFromCharCode(digitToBasic(q, 0)));\n          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n          delta = 0;\n          ++handledCPCount;\n        }\n      }\n\n      ++delta;\n      ++n;\n    }\n\n    return output.join('');\n  }\n  /**\n   * Converts a Punycode string representing a domain name or an email address\n   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n   * it doesn't matter if you call it on a string that has already been\n   * converted to Unicode.\n   * @memberOf punycode\n   * @param {String} input The Punycoded domain name or email address to\n   * convert to Unicode.\n   * @returns {String} The Unicode representation of the given Punycode\n   * string.\n   */\n\n\n  function toUnicode(input) {\n    return mapDomain(input, function (string) {\n      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;\n    });\n  }\n  /**\n   * Converts a Unicode string representing a domain name or an email address to\n   * Punycode. Only the non-ASCII parts of the domain name will be converted,\n   * i.e. it doesn't matter if you call it with a domain that's already in\n   * ASCII.\n   * @memberOf punycode\n   * @param {String} input The domain name or email address to convert, as a\n   * Unicode string.\n   * @returns {String} The Punycode representation of the given domain name or\n   * email address.\n   */\n\n\n  function toASCII(input) {\n    return mapDomain(input, function (string) {\n      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;\n    });\n  }\n  /*--------------------------------------------------------------------------*/\n\n  /** Define the public API */\n\n\n  punycode = {\n    /**\n     * A string representing the current Punycode.js version number.\n     * @memberOf punycode\n     * @type String\n     */\n    'version': '1.4.1',\n\n    /**\n     * An object of methods to convert from JavaScript's internal character\n     * representation (UCS-2) to Unicode code points, and back.\n     * @see <https://mathiasbynens.be/notes/javascript-encoding>\n     * @memberOf punycode\n     * @type Object\n     */\n    'ucs2': {\n      'decode': ucs2decode,\n      'encode': ucs2encode\n    },\n    'decode': decode,\n    'encode': encode,\n    'toASCII': toASCII,\n    'toUnicode': toUnicode\n  };\n  /** Expose `punycode` */\n  // Some AMD build optimizers, like r.js, check for specific condition patterns\n  // like the following:\n\n  if (typeof define == 'function' && _typeof(define.amd) == 'object' && define.amd) {\n    define('punycode', function () {\n      return punycode;\n    });\n  } else if (freeExports && freeModule) {\n    if (module.exports == freeExports) {\n      // in Node.js, io.js, or RingoJS v0.8.0+\n      freeModule.exports = punycode;\n    } else {\n      // in Narwhal or RingoJS v0.7.0-\n      for (key in punycode) {\n        punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n      }\n    }\n  } else {\n    // in Rhino or a web browser\n    root.punycode = punycode;\n  }\n})(this);","'use strict';\n\nmodule.exports = require('./lib/');","'use strict';\n\nmodule.exports = function (opts) {\n  var re = {};\n  opts = opts || {}; // Use direct extract instead of `regenerate` to reduse browserified size\n\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z = require('uc.micro/categories/Z/regex').source;\n  re.src_P = require('uc.micro/categories/P/regex').source; // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n\n  re.src_ZPCc = [re.src_Z, re.src_P, re.src_Cc].join('|'); // \\p{\\Z\\Cc} (white spaces + control)\n\n  re.src_ZCc = [re.src_Z, re.src_Cc].join('|'); // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n\n  var text_separators = \"[><\\uFF5C]\"; // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n\n  re.src_pseudo_letter = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')'; // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 = '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)'; // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n\n  re.src_auth = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n  re.src_port = '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n  re.src_host_terminator = '(?=$|' + text_separators + '|' + re.src_ZPCc + ')' + '(?!' + (opts['---'] ? '-(?!--)|' : '-|') + '_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n  re.src_path = '(?:' + '[/?#]' + '(?:' + '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-;]).|' + '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' + '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' + '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' + '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' + \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" + \"\\\\'(?=\" + re.src_pseudo_letter + '|[-])|' + // allow `I'm_king` if no pair found\n  '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n  // github has ... in commit range links,\n  // Restrict to\n  // - english\n  // - percent-encoded\n  // - parts of file path\n  // - params separator\n  // until more examples found.\n  '\\\\.(?!' + re.src_ZCc + '|[.]|$)|' + (opts['---'] ? '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n  : '\\\\-+|') + ',(?!' + re.src_ZCc + '|$)|' + // allow `,,,` in paths\n  ';(?!' + re.src_ZCc + '|$)|' + // allow `;` if not followed by space-like char\n  '\\\\!+(?!' + re.src_ZCc + '|[!]|$)|' + // allow `!!!` in paths, but not at the end\n  '\\\\?(?!' + re.src_ZCc + '|[?]|$)' + ')+' + '|\\\\/' + ')?'; // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n\n  re.src_email_name = '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n  re.src_xn = 'xn--[a-z0-9\\\\-]{1,59}'; // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root = // Allow letters & digits (http://test1)\n  '(?:' + re.src_xn + '|' + re.src_pseudo_letter + '{1,63}' + ')';\n  re.src_domain = '(?:' + re.src_xn + '|' + '(?:' + re.src_pseudo_letter + ')' + '|' + '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' + ')';\n  re.src_host = '(?:' + // Don't need IP check, because digits are already allowed in normal domain names\n  //   src_ip4 +\n  // '|' +\n  '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain\n  /*_root*/\n  + ')' + ')';\n  re.tpl_host_fuzzy = '(?:' + re.src_ip4 + '|' + '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' + ')';\n  re.tpl_host_no_ip_fuzzy = '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n  re.src_host_strict = re.src_host + re.src_host_terminator;\n  re.tpl_host_fuzzy_strict = re.tpl_host_fuzzy + re.src_host_terminator;\n  re.src_host_port_strict = re.src_host + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_fuzzy_strict = re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n  re.tpl_host_port_no_ip_fuzzy_strict = re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator; ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n  // Rude test fuzzy links by host, for quick deny\n\n  re.tpl_host_fuzzy_test = 'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n  re.tpl_email_fuzzy = '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' + '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n  re.tpl_link_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n  re.tpl_link_no_ip_fuzzy = // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n  // but can start with > (markdown blockquote)\n  \"(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uFF5C]|\" + re.src_ZPCc + '))' + \"((?![$+<=>^`|\\uFF5C])\" + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n  return re;\n};","// Main parser class\n'use strict';\n\nvar utils = require('./common/utils');\n\nvar helpers = require('./helpers');\n\nvar Renderer = require('./renderer');\n\nvar ParserCore = require('./parser_core');\n\nvar ParserBlock = require('./parser_block');\n\nvar ParserInline = require('./parser_inline');\n\nvar LinkifyIt = require('linkify-it');\n\nvar mdurl = require('mdurl');\n\nvar punycode = require('punycode');\n\nvar config = {\n  default: require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n}; ////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n  return BAD_PROTO_RE.test(str) ? GOOD_DATA_RE.test(str) ? true : false : true;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = ['http:', 'https:', 'mailto:'];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) {\n        /**/\n      }\n    }\n  } // add '%' to exclude list because of https://github.com/markdown-it/markdown-it/issues/720\n\n\n  return mdurl.decode(mdurl.format(parsed), mdurl.decode.defaultChars + '%');\n}\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(str, { language: lang, ignoreIllegals: true }).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(str, { language: lang, ignoreIllegals: true }).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\n\n\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n\n  this.inline = new ParserInline();\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.block = new ParserBlock();\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n\n  this.core = new ParserCore();\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n\n  this.renderer = new Renderer();\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n\n  this.linkify = new LinkifyIt();\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n\n  this.validateLink = validateLink;\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n\n  this.normalizeLink = normalizeLink;\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n\n  this.normalizeLinkText = normalizeLinkText; // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n\n  this.utils = utils;\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n\n  this.helpers = utils.assign({}, helpers);\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) {\n    this.set(options);\n  }\n}\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\n\n\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\n\n\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this,\n      presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n\n    if (!presets) {\n      throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name');\n    }\n  }\n\n  if (!presets) {\n    throw new Error('Wrong `markdown-it` preset, can\\'t be empty');\n  }\n\n  if (presets.options) {\n    self.set(presets.options);\n  }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\n\n\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.enable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\n\n\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  ['core', 'block', 'inline'].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n  result = result.concat(this.inline.ruler2.disable(list, true));\n  var missed = list.filter(function (name) {\n    return result.indexOf(name) < 0;\n  });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\n\n\nMarkdownIt.prototype.use = function (plugin\n/*, params, ... */\n) {\n  var args = [this].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\n\n\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\n\n\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\n\n\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n  state.inlineMode = true;\n  this.core.process(state);\n  return state.tokens;\n};\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\n\n\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\nmodule.exports = MarkdownIt;","'use strict';\n\nvar encodeCache = {}; // Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\n\nfunction getEncodeCache(exclude) {\n  var i,\n      ch,\n      cache = encodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n} // Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\n\n\nfunction encode(string, exclude, keepEscaped) {\n  var i,\n      l,\n      code,\n      nextCode,\n      cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25\n    /* % */\n    && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\nmodule.exports = encode;","'use strict';\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i,\n      ch,\n      cache = decodeCache[exclude];\n\n  if (cache) {\n    return cache;\n  }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n} // Decode percent-encoded string.\n//\n\n\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n  return string.replace(/(%[a-f0-9]{2})+/gi, function (seq) {\n    var i,\n        l,\n        b1,\n        b2,\n        b3,\n        b4,\n        chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && i + 3 < l) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = b1 << 6 & 0x7C0 | b2 & 0x3F;\n\n          if (chr < 0x80) {\n            result += \"\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && i + 6 < l) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = b1 << 12 & 0xF000 | b2 << 6 & 0xFC0 | b3 & 0x3F;\n\n          if (chr < 0x800 || chr >= 0xD800 && chr <= 0xDFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && i + 9 < l) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = b1 << 18 & 0x1C0000 | b2 << 12 & 0x3F000 | b3 << 6 & 0xFC0 | b4 & 0x3F;\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += \"\\uFFFD\\uFFFD\\uFFFD\\uFFFD\";\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += \"\\uFFFD\";\n    }\n\n    return result;\n  });\n}\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\nmodule.exports = decode;","'use strict';\n\nmodule.exports = function format(url) {\n  var result = '';\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n  return result;\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict'; //\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n} // Reference: RFC 3986, RFC 1808, RFC 2396\n// define these here so at least they only have to be\n// compiled once on the first module load.\n\n\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n    // Special case for a simple path URL\nsimplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n    // RFC 2396: characters reserved for delimiting URLs.\n// We actually just auto-escape these.\ndelims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n    // RFC 2396: characters not allowed for various reasons.\nunwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\nautoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n// Note that any invalid chars are also handled, but these\n// are the ones that are *expected* to be seen, so we fast-path\n// them.\nnonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n\n/* eslint-disable no-script-url */\n// protocols that never have a hostname.\nhostlessProtocol = {\n  'javascript': true,\n  'javascript:': true\n},\n    // protocols that always contain a // bit.\nslashedProtocol = {\n  'http': true,\n  'https': true,\n  'ftp': true,\n  'gopher': true,\n  'file': true,\n  'http:': true,\n  'https:': true,\n  'ftp:': true,\n  'gopher:': true,\n  'file:': true\n};\n/* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) {\n    return url;\n  }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function (url, slashesDenoteHost) {\n  var i,\n      l,\n      lowerProto,\n      hec,\n      slashes,\n      rest = url; // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n\n    if (simplePath) {\n      this.pathname = simplePath[1];\n\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  } // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n\n\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n\n\n    var auth, atSign;\n\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    } // Now we have a portion which is definitely the auth.\n    // Pull that off.\n\n\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    } // the host is the remaining to the left of the first non-host char\n\n\n    hostEnd = -1;\n\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    } // if we still have not hit it, then the entire thing is a host.\n\n\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') {\n      hostEnd--;\n    }\n\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd); // pull out port.\n\n    this.parseHost(host); // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n\n    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n\n    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.\n\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n\n        if (!part) {\n          continue;\n        }\n\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          } // we test again with ASCII char only\n\n\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } // strip [ and ] from the hostname\n    // the host field still retains them, though\n\n\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  } // chop off from the tail first.\n\n\n  var hash = rest.indexOf('#');\n\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n\n  var qm = rest.indexOf('?');\n\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n\n  if (rest) {\n    this.pathname = rest;\n  }\n\n  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function (host) {\n  var port = portPattern.exec(host);\n\n  if (port) {\n    port = port[0];\n\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n\n    host = host.substr(0, host.length - port.length);\n  }\n\n  if (host) {\n    this.hostname = host;\n  }\n};\n\nmodule.exports = urlParse;","module.exports = /[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/;","// Just a shortcut for bulk export\n'use strict';\n\nexports.parseLinkLabel = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle = require('./parse_link_title');","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level,\n      found,\n      marker,\n      prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n\n    if (marker === 0x5D\n    /* ] */\n    ) {\n        level--;\n\n        if (level === 0) {\n          found = true;\n          break;\n        }\n      }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n\n    if (marker === 0x5B\n    /* [ */\n    ) {\n        if (prevPos === state.pos - 1) {\n          // increase level if we find text `[`, which is not a part of any token\n          level++;\n        } else if (disableNested) {\n          state.pos = oldPos;\n          return -1;\n        }\n      }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  } // restore old state\n\n\n  state.pos = oldPos;\n  return labelEnd;\n};","// Parse link destination\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkDestination(str, start, max) {\n  var code,\n      level,\n      pos = start,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (str.charCodeAt(pos) === 0x3C\n  /* < */\n  ) {\n      pos++;\n\n      while (pos < max) {\n        code = str.charCodeAt(pos);\n\n        if (code === 0x0A\n        /* \\n */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3C\n        /* < */\n        ) {\n            return result;\n          }\n\n        if (code === 0x3E\n        /* > */\n        ) {\n            result.pos = pos + 1;\n            result.str = unescapeAll(str.slice(start + 1, pos));\n            result.ok = true;\n            return result;\n          }\n\n        if (code === 0x5C\n        /* \\ */\n        && pos + 1 < max) {\n          pos += 2;\n          continue;\n        }\n\n        pos++;\n      } // no closing '>'\n\n\n      return result;\n    } // this should be ... } else { ... branch\n\n\n  level = 0;\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) {\n      break;\n    } // ascii control characters\n\n\n    if (code < 0x20 || code === 0x7F) {\n      break;\n    }\n\n    if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      if (str.charCodeAt(pos + 1) === 0x20) {\n        break;\n      }\n\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28\n    /* ( */\n    ) {\n        level++;\n\n        if (level > 32) {\n          return result;\n        }\n      }\n\n    if (code === 0x29\n    /* ) */\n    ) {\n        if (level === 0) {\n          break;\n        }\n\n        level--;\n      }\n\n    pos++;\n  }\n\n  if (start === pos) {\n    return result;\n  }\n\n  if (level !== 0) {\n    return result;\n  }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};","// Parse link title\n//\n'use strict';\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\nmodule.exports = function parseLinkTitle(str, start, max) {\n  var code,\n      marker,\n      lines = 0,\n      pos = start,\n      result = {\n    ok: false,\n    pos: 0,\n    lines: 0,\n    str: ''\n  };\n\n  if (pos >= max) {\n    return result;\n  }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22\n  /* \" */\n  && marker !== 0x27\n  /* ' */\n  && marker !== 0x28\n  /* ( */\n  ) {\n      return result;\n    }\n\n  pos++; // if opening marker is \"(\", switch it to closing marker \")\"\n\n  if (marker === 0x28) {\n    marker = 0x29;\n  }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x28\n    /* ( */\n    && marker === 0x29\n    /* ) */\n    ) {\n        return result;\n      } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C\n    /* \\ */\n    && pos + 1 < max) {\n      pos++;\n\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\nvar assign = require('./common/utils').assign;\n\nvar unescapeAll = require('./common/utils').unescapeAll;\n\nvar escapeHtml = require('./common/utils').escapeHtml; ////////////////////////////////////////////////////////////////////////////////\n\n\nvar default_rules = {};\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<code' + slf.renderAttrs(token) + '>' + escapeHtml(token.content) + '</code>';\n};\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n  return '<pre' + slf.renderAttrs(token) + '><code>' + escapeHtml(tokens[idx].content) + '</code></pre>\\n';\n};\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      langAttrs = '',\n      highlighted,\n      i,\n      arr,\n      tmpAttrs,\n      tmpToken;\n\n  if (info) {\n    arr = info.split(/(\\s+)/g);\n    langName = arr[0];\n    langAttrs = arr.slice(2).join('');\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName, langAttrs) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  } // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .deepClone() for token and simplify this part, but\n  // now we prefer to keep things local.\n\n\n  if (info) {\n    i = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push(['class', options.langPrefix + langName]);\n    } else {\n      tmpAttrs[i] = tmpAttrs[i].slice();\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    } // Fake token just to render attributes\n\n\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n    return '<pre><code' + slf.renderAttrs(tmpToken) + '>' + highlighted + '</code></pre>\\n';\n  }\n\n  return '<pre><code' + slf.renderAttrs(token) + '>' + highlighted + '</code></pre>\\n';\n};\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx]; // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] = slf.renderInlineAsText(token.children, options, env);\n  return slf.renderToken(tokens, idx, options);\n};\n\ndefault_rules.hardbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\n\ndefault_rules.softbreak = function (tokens, idx, options\n/*, env */\n) {\n  return options.breaks ? options.xhtmlOut ? '<br />\\n' : '<br>\\n' : '\\n';\n};\n\ndefault_rules.text = function (tokens, idx\n/*, options, env */\n) {\n  return escapeHtml(tokens[idx].content);\n};\n\ndefault_rules.html_block = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n\ndefault_rules.html_inline = function (tokens, idx\n/*, options, env */\n) {\n  return tokens[idx].content;\n};\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\n\n\nfunction Renderer() {\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\n\n\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) {\n    return '';\n  }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\n\n\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx]; // Tight list paragraphs\n\n  if (token.hidden) {\n    return '';\n  } // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n\n\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  } // Add token name, e.g. `<img`\n\n\n  result += (token.nesting === -1 ? '</' : '<') + token.tag; // Encode attributes, e.g. `<img src=\"foo\"`\n\n  result += this.renderAttrs(token); // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  } // Check if we need to add a newline after this tag\n\n\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n  return result;\n};\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\n\n\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\n\n\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    } else if (tokens[i].type === 'softbreak') {\n      result += '\\n';\n    }\n  }\n\n  return result;\n};\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to render\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\n\n\nRenderer.prototype.render = function (tokens, options, env) {\n  var i,\n      len,\n      type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [['normalize', require('./rules_core/normalize')], ['block', require('./rules_core/block')], ['inline', require('./rules_core/inline')], ['linkify', require('./rules_core/linkify')], ['replacements', require('./rules_core/replacements')], ['smartquotes', require('./rules_core/smartquotes')], // `text_join` finds `text_special` tokens (for escape sequences)\n// and joins them with the rest of the text\n['text_join', require('./rules_core/text_join')]];\n/**\n * new Core()\n **/\n\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\n\n\nCore.prototype.process = function (state) {\n  var i, l, rules;\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\nmodule.exports = Core;","// Normalize input string\n'use strict'; // https://spec.commonmark.org/0.29/#line-ending\n\nvar NEWLINES_RE = /\\r\\n?|\\n/g;\nvar NULL_RE = /\\0/g;\n\nmodule.exports = function normalize(state) {\n  var str; // Normalize newlines\n\n  str = state.src.replace(NEWLINES_RE, '\\n'); // Replace NULL characters\n\n  str = str.replace(NULL_RE, \"\\uFFFD\");\n  state.src = str;\n};","'use strict';\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token = new state.Token('inline', '', 0);\n    token.content = state.src;\n    token.map = [0, 1];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens,\n      tok,\n      i,\n      l; // Parse inlines\n\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nmodule.exports = function linkify(state) {\n  var i,\n      j,\n      l,\n      tokens,\n      token,\n      currentToken,\n      nodes,\n      ln,\n      text,\n      pos,\n      lastPos,\n      level,\n      htmlLinkLevel,\n      url,\n      fullUrl,\n      urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) {\n    return;\n  }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' || !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n    htmlLinkLevel = 0; // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i]; // Skip content of markdown links\n\n      if (currentToken.type === 'link_close') {\n        i--;\n\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n\n        continue;\n      } // Skip content of html tag links\n\n\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n\n      if (htmlLinkLevel > 0) {\n        continue;\n      }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n        text = currentToken.content;\n        links = state.md.linkify.match(text); // Now split string to nodes\n\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0; // forbid escape sequence at the start of the string,\n        // this avoids http\\://example.com/ from being linkified as\n        // http:<a href=\"//example.com/\">//example.com/</a>\n\n        if (links.length > 0 && links[0].index === 0 && i > 0 && tokens[i - 1].type === 'text_special') {\n          links = links.slice(1);\n        }\n\n        for (ln = 0; ln < links.length; ln++) {\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n\n          if (!state.md.validateLink(fullUrl)) {\n            continue;\n          }\n\n          urlText = links[ln].text; // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level = level;\n            nodes.push(token);\n          }\n\n          token = new state.Token('link_open', 'a', 1);\n          token.attrs = [['href', fullUrl]];\n          token.level = level++;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          token = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level = level;\n          nodes.push(token);\n          token = new state.Token('link_close', 'a', -1);\n          token.level = --level;\n          token.markup = 'linkify';\n          token.info = 'auto';\n          nodes.push(token);\n          lastPos = links[ln].lastIndex;\n        }\n\n        if (lastPos < text.length) {\n          token = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level = level;\n          nodes.push(token);\n        } // replace current node\n\n\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict'; // TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - multiplications 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/; // Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\n\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r)\\)/i;\nvar SCOPED_ABBR_RE = /\\((c|tm|r)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i,\n      token,\n      inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content.replace(/\\+-/g, '±') // .., ..., ....... -> …\n        // but ?..... & !..... -> ?.. & !..\n        .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..').replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',') // em-dash\n        .replace(/(^|[^-])---(?=[^-]|$)/mg, \"$1\\u2014\") // en-dash\n        .replace(/(^|\\s)--(?=\\s|$)/mg, \"$1\\u2013\").replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, \"$1\\u2013\");\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline') {\n      continue;\n    }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n  }\n};","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = \"\\u2019\";\n/* ’ */\n\nfunction replaceAt(str, index, ch) {\n  return str.slice(0, index) + ch + str.slice(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar, isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace, canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) {\n        break;\n      }\n    }\n\n    stack.length = j + 1;\n\n    if (token.type !== 'text') {\n      continue;\n    }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n    /*eslint no-labels:0,block-scoped-var:0*/\n\n    OUTER: while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n\n      if (!t) {\n        break;\n      }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = t[0] === \"'\"; // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      } // Find next character,\n      // default to space if it's the end of the line\n      //\n\n\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n\n          if (!tokens[j].content) continue; // should skip all tokens except 'text', 'html_inline' or 'code_inline'\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22\n      /* \" */\n      && t[0] === '\"') {\n        if (lastChar >= 0x30\n        /* 0 */\n        && lastChar <= 0x39\n        /* 9 */\n        ) {\n            // special case: 1\"\" - count first quote as an inch\n            canClose = canOpen = false;\n          }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n\n          if (stack[j].level < thisLevel) {\n            break;\n          }\n\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            } // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n\n\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(tokens[item.token].content, item.pos, openQuote);\n            pos += closeQuote.length - 1;\n\n            if (item.token === i) {\n              pos += openQuote.length - 1;\n            }\n\n            text = token.content;\n            max = text.length;\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) {\n    return;\n  }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n    if (state.tokens[blkIdx].type !== 'inline' || !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};","// Join raw text tokens with the rest of the text\n//\n// This is set as a separate rule to provide an opportunity for plugins\n// to run text replacements after text join, but before escape join.\n//\n// For example, `\\:)` shouldn't be replaced with an emoji.\n//\n'use strict';\n\nmodule.exports = function text_join(state) {\n  var j,\n      l,\n      tokens,\n      curr,\n      max,\n      last,\n      blockTokens = state.tokens;\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline') continue;\n    tokens = blockTokens[j].children;\n    max = tokens.length;\n\n    for (curr = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text_special') {\n        tokens[curr].type = 'text';\n      }\n    }\n\n    for (curr = last = 0; curr < max; curr++) {\n      if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n        // collapse two adjacent text nodes\n        tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n      } else {\n        if (curr !== last) {\n          tokens[last] = tokens[curr];\n        }\n\n        last++;\n      }\n    }\n\n    if (curr !== last) {\n      tokens.length = last;\n    }\n  }\n};","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n} // re-export Token class to use in core rules\n\n\nStateCore.prototype.Token = Token;\nmodule.exports = StateCore;","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\nvar Ruler = require('./ruler');\n\nvar _rules = [// First 2 params - rule name & source. Secondary array - list of rules,\n// which can be terminated by this one.\n['table', require('./rules_block/table'), ['paragraph', 'reference']], ['code', require('./rules_block/code')], ['fence', require('./rules_block/fence'), ['paragraph', 'reference', 'blockquote', 'list']], ['blockquote', require('./rules_block/blockquote'), ['paragraph', 'reference', 'blockquote', 'list']], ['hr', require('./rules_block/hr'), ['paragraph', 'reference', 'blockquote', 'list']], ['list', require('./rules_block/list'), ['paragraph', 'reference', 'blockquote']], ['reference', require('./rules_block/reference')], ['html_block', require('./rules_block/html_block'), ['paragraph', 'reference', 'blockquote']], ['heading', require('./rules_block/heading'), ['paragraph', 'reference', 'blockquote']], ['lheading', require('./rules_block/lheading')], ['paragraph', require('./rules_block/paragraph')]];\n/**\n * new ParserBlock()\n **/\n\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], {\n      alt: (_rules[i][2] || []).slice()\n    });\n  }\n} // Generate tokens for input range\n//\n\n\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok,\n      i,\n      prevLine,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n\n    if (line >= endLine) {\n      break;\n    } // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n\n\n    if (state.sCount[line] < state.blkIndent) {\n      break;\n    } // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n\n\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    } // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n\n    prevLine = state.line;\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n\n      if (ok) {\n        if (prevLine >= state.line) {\n          throw new Error(\"block rule didn't increment state.line\");\n        }\n\n        break;\n      }\n    } // this can only happen if user disables paragraph rule\n\n\n    if (!ok) throw new Error('none of the block rules matched'); // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n\n    state.tight = !hasEmptyLines; // paragraph might \"eat\" one newline after it in nested lists\n\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\n\n\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) {\n    return;\n  }\n\n  state = new this.State(src, md, env, outTokens);\n  this.tokenize(state, state.line, state.lineMax);\n};\n\nParserBlock.prototype.State = require('./rules_block/state_block');\nmodule.exports = ParserBlock;","// GFM table, https://github.github.com/gfm/#tables-extension-\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.tShift[line],\n      max = state.eMarks[line];\n  return state.src.slice(pos, max);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      isEscaped = false,\n      lastPos = 0,\n      current = '';\n  ch = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x7c\n    /* | */\n    ) {\n        if (!isEscaped) {\n          // pipe separating cells, '|'\n          result.push(current + str.substring(lastPos, pos));\n          current = '';\n          lastPos = pos + 1;\n        } else {\n          // escaped pipe, '\\|'\n          current += str.substring(lastPos, pos - 1);\n          lastPos = pos;\n        }\n      }\n\n    isEscaped = ch === 0x5c\n    /* \\ */\n    ;\n    pos++;\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(current + str.substring(lastPos));\n  return result;\n}\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, l, nextLine, columns, columnCount, token, aligns, t, tableLines, tbodyLines, oldParentType, terminate, terminatorRules, firstCh, secondCh; // should have at least two lines\n\n  if (startLine + 2 > endLine) {\n    return false;\n  }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // if it's indented more than 3 spaces, it should be a code block\n\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  firstCh = state.src.charCodeAt(pos++);\n\n  if (firstCh !== 0x7C\n  /* | */\n  && firstCh !== 0x2D\n  /* - */\n  && firstCh !== 0x3A\n  /* : */\n  ) {\n      return false;\n    }\n\n  if (pos >= state.eMarks[nextLine]) {\n    return false;\n  }\n\n  secondCh = state.src.charCodeAt(pos++);\n\n  if (secondCh !== 0x7C\n  /* | */\n  && secondCh !== 0x2D\n  /* - */\n  && secondCh !== 0x3A\n  /* : */\n  && !isSpace(secondCh)) {\n    return false;\n  } // if first character is '-', then second character must not be a space\n  // (due to parsing ambiguity with list)\n\n\n  if (firstCh === 0x2D\n  /* - */\n  && isSpace(secondCh)) {\n    return false;\n  }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C\n    /* | */\n    && ch !== 0x2D\n    /* - */\n    && ch !== 0x3A\n    /* : */\n    && !isSpace(ch)) {\n      return false;\n    }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n  columns = lineText.split('|');\n  aligns = [];\n\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) {\n      return false;\n    }\n\n    if (t.charCodeAt(t.length - 1) === 0x3A\n    /* : */\n    ) {\n        aligns.push(t.charCodeAt(0) === 0x3A\n        /* : */\n        ? 'center' : 'right');\n      } else if (t.charCodeAt(0) === 0x3A\n    /* : */\n    ) {\n        aligns.push('left');\n      } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n\n  if (lineText.indexOf('|') === -1) {\n    return false;\n  }\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  columns = escapedSplit(lineText);\n  if (columns.length && columns[0] === '') columns.shift();\n  if (columns.length && columns[columns.length - 1] === '') columns.pop(); // header row will define an amount of columns in the entire table,\n  // and align row should be exactly the same (the rest of the rows can differ)\n\n  columnCount = columns.length;\n\n  if (columnCount === 0 || columnCount !== aligns.length) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'table'; // use 'blockquote' lists for termination because it's\n  // the most similar to tables\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  token = state.push('table_open', 'table', 1);\n  token.map = tableLines = [startLine, 0];\n  token = state.push('thead_open', 'thead', 1);\n  token.map = [startLine, startLine + 1];\n  token = state.push('tr_open', 'tr', 1);\n  token.map = [startLine, startLine + 1];\n\n  for (i = 0; i < columns.length; i++) {\n    token = state.push('th_open', 'th', 1);\n\n    if (aligns[i]) {\n      token.attrs = [['style', 'text-align:' + aligns[i]]];\n    }\n\n    token = state.push('inline', '', 0);\n    token.content = columns[i].trim();\n    token.children = [];\n    token = state.push('th_close', 'th', -1);\n  }\n\n  token = state.push('tr_close', 'tr', -1);\n  token = state.push('thead_close', 'thead', -1);\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    }\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n\n    lineText = getLine(state, nextLine).trim();\n\n    if (!lineText) {\n      break;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    }\n\n    columns = escapedSplit(lineText);\n    if (columns.length && columns[0] === '') columns.shift();\n    if (columns.length && columns[columns.length - 1] === '') columns.pop();\n\n    if (nextLine === startLine + 2) {\n      token = state.push('tbody_open', 'tbody', 1);\n      token.map = tbodyLines = [startLine + 2, 0];\n    }\n\n    token = state.push('tr_open', 'tr', 1);\n    token.map = [nextLine, nextLine + 1];\n\n    for (i = 0; i < columnCount; i++) {\n      token = state.push('td_open', 'td', 1);\n\n      if (aligns[i]) {\n        token.attrs = [['style', 'text-align:' + aligns[i]]];\n      }\n\n      token = state.push('inline', '', 0);\n      token.content = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n      token = state.push('td_close', 'td', -1);\n    }\n\n    token = state.push('tr_close', 'tr', -1);\n  }\n\n  if (tbodyLines) {\n    token = state.push('tbody_close', 'tbody', -1);\n    tbodyLines[1] = nextLine;\n  }\n\n  token = state.push('table_close', 'table', -1);\n  tableLines[1] = nextLine;\n  state.parentType = oldParentType;\n  state.line = nextLine;\n  return true;\n};","// Code block (4 spaces padded)\n'use strict';\n\nmodule.exports = function code(state, startLine, endLine\n/*, silent*/\n) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) {\n    return false;\n  }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n\n    break;\n  }\n\n  state.line = last;\n  token = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, false) + '\\n';\n  token.map = [startLine, state.line];\n  return true;\n};","// fences (``` lang, ~~~ lang)\n'use strict';\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker,\n      len,\n      params,\n      nextLine,\n      mem,\n      token,\n      markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (pos + 3 > max) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E\n  /* ~ */\n  && marker !== 0x60\n  /* ` */\n  ) {\n      return false;\n    } // scan marker length\n\n\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n  len = pos - mem;\n\n  if (len < 3) {\n    return false;\n  }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60\n  /* ` */\n  ) {\n      if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n        return false;\n      }\n    } // Since start is found, we can report success here in validation mode\n\n\n  if (silent) {\n    return true;\n  } // search end of block\n\n\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) {\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker); // closing code fence must be at least as long as the opening one\n\n    if (pos - mem < len) {\n      continue;\n    } // make sure tail has spaces only\n\n\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) {\n      continue;\n    }\n\n    haveEndMarker = true; // found!\n\n    break;\n  } // If a fence has heading spaces, they should be removed from its inner block\n\n\n  len = state.sCount[startLine];\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n  token = state.push('fence', 'code', 0);\n  token.info = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup = markup;\n  token.map = [startLine, state.line];\n  return true;\n};","// Block quotes\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      isOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  } // check the block quote marker\n\n\n  if (state.src.charCodeAt(pos) !== 0x3E\n  /* > */\n  ) {\n      return false;\n    } // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n\n\n  if (silent) {\n    return true;\n  }\n\n  oldBMarks = [];\n  oldBSCount = [];\n  oldSCount = [];\n  oldTShift = [];\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote'; // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n\n  for (nextLine = startLine; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    isOutdented = state.sCount[nextLine] < state.blkIndent;\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E\n    /* > */\n    && !isOutdented) {\n      // This line is inside the blockquote.\n      // set offset past spaces and \">\"\n      initial = state.sCount[nextLine] + 1; // skip one optional space after '>'\n\n      if (state.src.charCodeAt(pos) === 0x20\n      /* space */\n      ) {\n          // ' >   test '\n          //     ^ -- position start of line here:\n          pos++;\n          initial++;\n          adjustTab = false;\n          spaceAfterMarker = true;\n        } else if (state.src.charCodeAt(pos) === 0x09\n      /* tab */\n      ) {\n          spaceAfterMarker = true;\n\n          if ((state.bsCount[nextLine] + initial) % 4 === 3) {\n            // '  >\\t  test '\n            //       ^ -- position start of line here (tab has width===1)\n            pos++;\n            initial++;\n            adjustTab = false;\n          } else {\n            // ' >\\t  test '\n            //    ^ -- position start of line here + shift bsCount slightly\n            //         to make extra space appear\n            adjustTab = true;\n          }\n        } else {\n        spaceAfterMarker = false;\n      }\n\n      offset = initial;\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    } // Case 2: line is not inside the blockquote, and the last line was empty.\n\n\n    if (lastLineEmpty) {\n      break;\n    } // Case 3: another tag found.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]); // A negative indentation means that this is a paragraph continuation\n    //\n\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n  token = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map = lines = [startLine, 0];\n  state.md.block.tokenize(state, startLine, nextLine);\n  token = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line; // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n\n  state.blkIndent = oldIndent;\n  return true;\n};","// Horizontal rule\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker,\n      cnt,\n      ch,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  marker = state.src.charCodeAt(pos++); // Check hr marker\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x5F\n  /* _ */\n  ) {\n      return false;\n    } // markers can be mixed with spaces, but there should be at least 3 of them\n\n\n  cnt = 1;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch !== marker && !isSpace(ch)) {\n      return false;\n    }\n\n    if (ch === marker) {\n      cnt++;\n    }\n  }\n\n  if (cnt < 3) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('hr', 'hr', 0);\n  token.map = [startLine, state.line];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n  return true;\n};","// Lists\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace; // Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n  marker = state.src.charCodeAt(pos++); // Check bullet\n\n  if (marker !== 0x2A\n  /* * */\n  && marker !== 0x2D\n  /* - */\n  && marker !== 0x2B\n  /* + */\n  ) {\n      return -1;\n    }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n} // Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\n\n\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine]; // List marker should have at least 2 chars (digit + dot)\n\n  if (pos + 1 >= max) {\n    return -1;\n  }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30\n  /* 0 */\n  || ch > 0x39\n  /* 9 */\n  ) {\n      return -1;\n    }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) {\n      return -1;\n    }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30\n    /* 0 */\n    && ch <= 0x39\n    /* 9 */\n    ) {\n        // List marker should have no more than 9 digits\n        // (prevents integer overflow in browsers)\n        if (pos - start >= 10) {\n          return -1;\n        }\n\n        continue;\n      } // found valid marker\n\n\n    if (ch === 0x29\n    /* ) */\n    || ch === 0x2e\n    /* . */\n    ) {\n        break;\n      }\n\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i,\n      l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      nextLine = startLine,\n      isTerminatingParagraph = false,\n      tight = true; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[nextLine] - state.blkIndent >= 4) {\n    return false;\n  } // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n\n\n  if (state.listIndent >= 0 && state.sCount[nextLine] - state.listIndent >= 4 && state.sCount[nextLine] < state.blkIndent) {\n    return false;\n  } // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n\n\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  } // Detect list type and position after marker\n\n\n  if ((posAfterMarker = skipOrderedListMarker(state, nextLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[nextLine] + state.tShift[nextLine];\n    markerValue = Number(state.src.slice(start, posAfterMarker - 1)); // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n  } else if ((posAfterMarker = skipBulletListMarker(state, nextLine)) >= 0) {\n    isOrdered = false;\n  } else {\n    return false;\n  } // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n\n\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[nextLine]) return false;\n  } // For validation mode we can terminate immediately\n\n\n  if (silent) {\n    return true;\n  } // We should terminate list on style change. Remember first one to compare.\n\n\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1); // Start list\n\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token = state.push('ordered_list_open', 'ol', 1);\n\n    if (markerValue !== 1) {\n      token.attrs = [['start', markerValue]];\n    }\n  } else {\n    token = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map = listLines = [nextLine, 0];\n  token.markup = String.fromCharCode(markerCharCode); //\n  // Iterate list items\n  //\n\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    } // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n\n\n    if (indentAfterMarker > 4) {\n      indentAfterMarker = 1;\n    } // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n\n\n    indent = initial + indentAfterMarker; // Run subparser & write tokens\n\n    token = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map = itemLines = [nextLine, 0];\n\n    if (isOrdered) {\n      token.info = state.src.slice(start, posAfterMarker - 1);\n    } // change current state, then restore it after parser subcall\n\n\n    oldTight = state.tight;\n    oldTShift = state.tShift[nextLine];\n    oldSCount = state.sCount[nextLine]; //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n    state.tight = true;\n    state.tShift[nextLine] = contentStart - state.bMarks[nextLine];\n    state.sCount[nextLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(nextLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, nextLine, endLine, true);\n    } // If any of list item is tight, mark list as tight\n\n\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    } // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n\n\n    prevEmptyEnd = state.line - nextLine > 1 && state.isEmpty(state.line - 1);\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[nextLine] = oldTShift;\n    state.sCount[nextLine] = oldSCount;\n    state.tight = oldTight;\n    token = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n    nextLine = state.line;\n    itemLines[1] = nextLine;\n\n    if (nextLine >= endLine) {\n      break;\n    } //\n    // Try to check if list is terminated or continued.\n    //\n\n\n    if (state.sCount[nextLine] < state.blkIndent) {\n      break;\n    } // if it's indented more than 3 spaces, it should be a code block\n\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      break;\n    } // fail if terminating block found\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    } // fail if list has another type\n\n\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n\n      start = state.bMarks[nextLine] + state.tShift[nextLine];\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n\n      if (posAfterMarker < 0) {\n        break;\n      }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) {\n      break;\n    }\n  } // Finalize list\n\n\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n\n  token.markup = String.fromCharCode(markerCharCode);\n  listLines[1] = nextLine;\n  state.line = nextLine;\n  state.parentType = oldParentType; // mark paragraphs tight if needed\n\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};","'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    } // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n\n\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D\n    /* ] */\n    && state.src.charCodeAt(pos - 1) !== 0x5C\n    /* \\ */\n    ) {\n        if (pos + 1 === max) {\n          return false;\n        }\n\n        if (state.src.charCodeAt(pos + 1) !== 0x3A\n        /* : */\n        ) {\n            return false;\n          }\n\n        break;\n      }\n  }\n\n  endLine = state.lineMax; // jump line-by-line until empty one or EOF\n\n  terminatorRules = state.md.block.ruler.getRules('reference');\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x5B\n    /* [ */\n    ) {\n        return false;\n      } else if (ch === 0x5D\n    /* ] */\n    ) {\n        labelEnd = pos;\n        break;\n      } else if (ch === 0x0A\n    /* \\n */\n    ) {\n        lines++;\n      } else if (ch === 0x5C\n    /* \\ */\n    ) {\n        pos++;\n\n        if (pos < max && str.charCodeAt(pos) === 0x0A) {\n          lines++;\n        }\n      }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A\n  /* : */\n  ) {\n      return false;\n    } // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n\n\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n\n  if (!res.ok) {\n    return false;\n  }\n\n  href = state.md.normalizeLink(res.str);\n\n  if (!state.md.validateLink(href)) {\n    return false;\n  }\n\n  pos = res.pos;\n  lines += res.lines; // save cursor state, we could require to rollback later\n\n  destEndPos = pos;\n  destEndLineNo = lines; // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n\n  start = pos;\n\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  } // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n\n\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  } // skip trailing spaces until the rest of the line\n\n\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n\n        if (!isSpace(ch)) {\n          break;\n        }\n\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  } // Reference can not terminate anything. This check is for safety only.\n\n  /*istanbul ignore if*/\n\n\n  if (silent) {\n    return true;\n  }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = {\n      title: title,\n      href: href\n    };\n  }\n\n  state.parentType = oldParentType;\n  state.line = startLine + lines + 1;\n  return true;\n};","// HTML block\n'use strict';\n\nvar block_names = require('../common/html_blocks');\n\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE; // An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\n\n\nvar HTML_SEQUENCES = [[/^<(script|pre|style|textarea)(?=(\\s|>|$))/i, /<\\/(script|pre|style|textarea)>/i, true], [/^<!--/, /-->/, true], [/^<\\?/, /\\?>/, true], [/^<![A-Z]/, />/, true], [/^<!\\[CDATA\\[/, /\\]\\]>/, true], [new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true], [new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'), /^$/, false]];\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i,\n      nextLine,\n      token,\n      lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  if (!state.md.options.html) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) {\n      break;\n    }\n  }\n\n  if (i === HTML_SEQUENCES.length) {\n    return false;\n  }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1; // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) {\n        break;\n      }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) {\n          nextLine++;\n        }\n\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n  token = state.push('html_block', '', 0);\n  token.map = [startLine, nextLine];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n  return true;\n};","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n'use strict';\n\nmodule.exports = ['address', 'article', 'aside', 'base', 'basefont', 'blockquote', 'body', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dialog', 'dir', 'div', 'dl', 'dt', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'iframe', 'legend', 'li', 'link', 'main', 'menu', 'menuitem', 'nav', 'noframes', 'ol', 'optgroup', 'option', 'p', 'param', 'section', 'source', 'summary', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul'];","// heading (#, ##, ...)\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch,\n      level,\n      tmp,\n      token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine]; // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23\n  /* # */\n  || pos >= max) {\n    return false;\n  } // count heading level\n\n\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n\n  while (ch === 0x23\n  /* # */\n  && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || pos < max && !isSpace(ch)) {\n    return false;\n  }\n\n  if (silent) {\n    return true;\n  } // Let's cut tails like '    ###  ' from the end of string\n\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = state.src.slice(pos, max).trim();\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n  return true;\n};","// lheading (---, ===)\n'use strict';\n\nmodule.exports = function lheading(state, startLine, endLine\n/*, silent*/\n) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      pos,\n      max,\n      level,\n      marker,\n      nextLine = startLine + 1,\n      oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'); // if it's indented more than 3 spaces, it should be a code block\n\n  if (state.sCount[startLine] - state.blkIndent >= 4) {\n    return false;\n  }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n  // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } //\n    // Check for underline in setext header\n    //\n\n\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D\n        /* - */\n        || marker === 0x3D\n        /* = */\n        ) {\n            pos = state.skipChars(pos, marker);\n            pos = state.skipSpaces(pos);\n\n            if (pos >= max) {\n              level = marker === 0x3D\n              /* = */\n              ? 1 : 2;\n              break;\n            }\n          }\n      }\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine + 1;\n  token = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = String.fromCharCode(marker);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line - 1];\n  token.children = [];\n  token = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = String.fromCharCode(marker);\n  state.parentType = oldParentType;\n  return true;\n};","// Paragraph\n'use strict';\n\nmodule.exports = function paragraph(state, startLine, endLine) {\n  var content,\n      terminate,\n      i,\n      l,\n      token,\n      oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // jump line-by-line until empty one or EOF\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) {\n      continue;\n    } // quirk for blockquotes, this line should already be checked by that rule\n\n\n    if (state.sCount[nextLine] < 0) {\n      continue;\n    } // Some tags can terminate paragraph without empty line.\n\n\n    terminate = false;\n\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      break;\n    }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  state.line = nextLine;\n  token = state.push('paragraph_open', 'p', 1);\n  token.map = [startLine, state.line];\n  token = state.push('inline', '', 0);\n  token.content = content;\n  token.map = [startLine, state.line];\n  token.children = [];\n  token = state.push('paragraph_close', 'p', -1);\n  state.parentType = oldParentType;\n  return true;\n};","// Parser state class\n'use strict';\n\nvar Token = require('../token');\n\nvar isSpace = require('../common/utils').isSpace;\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n  this.src = src; // link to parser instance\n\n  this.md = md;\n  this.env = env; //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n  this.bMarks = []; // line begin offsets for fast jumps\n\n  this.eMarks = []; // line end offsets for fast jumps\n\n  this.tShift = []; // offsets of the first non-space characters (tabs not expanded)\n\n  this.sCount = []; // indents for each line (tabs expanded)\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n\n  this.bsCount = []; // block parser variables\n\n  this.blkIndent = 0; // required block content indent (for example, if we are\n  // inside a list, it would be positioned after list marker)\n\n  this.line = 0; // line index in src\n\n  this.lineMax = 0; // lines count\n\n  this.tight = false; // loose/tight mode for lists\n\n  this.ddIndent = -1; // indent of the current dd block (-1 if there isn't any)\n\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n\n  this.parentType = 'root';\n  this.level = 0; // renderer\n\n  this.result = ''; // Create caches\n  // Generate markers.\n\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) {\n        pos++;\n      }\n\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  } // Push fake entry to simplify cache bounds checks\n\n\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n} // Push new token to \"stream\".\n//\n\n\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n  if (nesting < 0) this.level--; // closing tag\n\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n\n  return from;\n}; // Skip spaces from given position.\n\n\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip spaces from given position in reverse.\n\n\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // Skip char codes from given position\n\n\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) {\n      break;\n    }\n  }\n\n  return pos;\n}; // Skip char codes reverse from given position - 1\n\n\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) {\n    return pos;\n  }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) {\n      return pos + 1;\n    }\n  }\n\n  return pos;\n}; // cut lines range from source.\n\n\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i,\n      lineIndent,\n      ch,\n      first,\n      last,\n      queue,\n      lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n}; // re-export Token class to use in block rules\n\n\nStateBlock.prototype.Token = Token;\nmodule.exports = StateBlock;","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\nvar Ruler = require('./ruler'); ////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\n\nvar _rules = [['text', require('./rules_inline/text')], ['linkify', require('./rules_inline/linkify')], ['newline', require('./rules_inline/newline')], ['escape', require('./rules_inline/escape')], ['backticks', require('./rules_inline/backticks')], ['strikethrough', require('./rules_inline/strikethrough').tokenize], ['emphasis', require('./rules_inline/emphasis').tokenize], ['link', require('./rules_inline/link')], ['image', require('./rules_inline/image')], ['autolink', require('./rules_inline/autolink')], ['html_inline', require('./rules_inline/html_inline')], ['entity', require('./rules_inline/entity')]]; // `rule2` ruleset was created specifically for emphasis/strikethrough\n// post-processing and may be changed in the future.\n//\n// Don't use this for anything except pairs (plugins working with `balance_pairs`).\n//\n\nvar _rules2 = [['balance_pairs', require('./rules_inline/balance_pairs')], ['strikethrough', require('./rules_inline/strikethrough').postProcess], ['emphasis', require('./rules_inline/emphasis').postProcess], // rules for pairs separate '**' into its own text tokens, which may be left unused,\n// rule below merges unused segments back with the rest of the text\n['fragments_join', require('./rules_inline/fragments_join')]];\n/**\n * new ParserInline()\n **/\n\nfunction ParserInline() {\n  var i;\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n\n\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n} // Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\n\n\nParserInline.prototype.skipToken = function (state) {\n  var ok,\n      i,\n      pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) {\n        if (pos >= state.pos) {\n          throw new Error(\"inline rule didn't increment state.pos\");\n        }\n\n        break;\n      }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) {\n    state.pos++;\n  }\n\n  cache[pos] = state.pos;\n}; // Generate tokens for input range\n//\n\n\nParserInline.prototype.tokenize = function (state) {\n  var ok,\n      i,\n      prevPos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n    prevPos = state.pos;\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n\n        if (ok) {\n          if (prevPos >= state.pos) {\n            throw new Error(\"inline rule didn't increment state.pos\");\n          }\n\n          break;\n        }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) {\n        break;\n      }\n\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\n\n\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n  this.tokenize(state);\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\nmodule.exports = ParserInline;","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n'use strict'; // Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A\n    /* \\n */\n    :\n    case 0x21\n    /* ! */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) {\n    return false;\n  }\n\n  if (!silent) {\n    state.pending += state.src.slice(state.pos, pos);\n  }\n\n  state.pos = pos;\n  return true;\n}; // Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/","// Process links like https://example.org/\n'use strict'; // RFC3986: scheme = ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\nvar SCHEME_RE = /(?:^|[^a-z0-9.+-])([a-z][a-z0-9.+-]*)$/i;\n\nmodule.exports = function linkify(state, silent) {\n  var pos, max, match, proto, link, url, fullUrl, token;\n  if (!state.md.options.linkify) return false;\n  if (state.linkLevel > 0) return false;\n  pos = state.pos;\n  max = state.posMax;\n  if (pos + 3 > max) return false;\n  if (state.src.charCodeAt(pos) !== 0x3A\n  /* : */\n  ) return false;\n  if (state.src.charCodeAt(pos + 1) !== 0x2F\n  /* / */\n  ) return false;\n  if (state.src.charCodeAt(pos + 2) !== 0x2F\n  /* / */\n  ) return false;\n  match = state.pending.match(SCHEME_RE);\n  if (!match) return false;\n  proto = match[1];\n  link = state.md.linkify.matchAtStart(state.src.slice(pos - proto.length));\n  if (!link) return false;\n  url = link.url; // invalid link, but still detected by linkify somehow;\n  // need to check to prevent infinite loop below\n\n  if (url.length <= proto.length) return false; // disallow '*' at the end of the link (conflicts with emphasis)\n\n  url = url.replace(/\\*+$/, '');\n  fullUrl = state.md.normalizeLink(url);\n  if (!state.md.validateLink(fullUrl)) return false;\n\n  if (!silent) {\n    state.pending = state.pending.slice(0, -proto.length);\n    token = state.push('link_open', 'a', 1);\n    token.attrs = [['href', fullUrl]];\n    token.markup = 'linkify';\n    token.info = 'auto';\n    token = state.push('text', '', 0);\n    token.content = state.md.normalizeLinkText(url);\n    token = state.push('link_close', 'a', -1);\n    token.markup = 'linkify';\n    token.info = 'auto';\n  }\n\n  state.pos += url.length - proto.length;\n  return true;\n};","// Proceess '\\n'\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function newline(state, silent) {\n  var pmax,\n      max,\n      ws,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax; // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        // Find whitespaces tail of pending chars.\n        ws = pmax - 1;\n\n        while (ws >= 1 && state.pending.charCodeAt(ws - 1) === 0x20) {\n          ws--;\n        }\n\n        state.pending = state.pending.slice(0, ws);\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++; // skip heading spaces for next line\n\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  state.pos = pos;\n  return true;\n};","// Process escaped chars and hardbreaks\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) {\n  ESCAPED.push(0);\n}\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'.split('').forEach(function (ch) {\n  ESCAPED[ch.charCodeAt(0)] = 1;\n});\n\nmodule.exports = function escape(state, silent) {\n  var ch1,\n      ch2,\n      origStr,\n      escapedStr,\n      token,\n      pos = state.pos,\n      max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x5C\n  /* \\ */\n  ) return false;\n  pos++; // '\\' at the end of the inline block\n\n  if (pos >= max) return false;\n  ch1 = state.src.charCodeAt(pos);\n\n  if (ch1 === 0x0A) {\n    if (!silent) {\n      state.push('hardbreak', 'br', 0);\n    }\n\n    pos++; // skip leading whitespaces from next line\n\n    while (pos < max) {\n      ch1 = state.src.charCodeAt(pos);\n      if (!isSpace(ch1)) break;\n      pos++;\n    }\n\n    state.pos = pos;\n    return true;\n  }\n\n  escapedStr = state.src[pos];\n\n  if (ch1 >= 0xD800 && ch1 <= 0xDBFF && pos + 1 < max) {\n    ch2 = state.src.charCodeAt(pos + 1);\n\n    if (ch2 >= 0xDC00 && ch2 <= 0xDFFF) {\n      escapedStr += state.src[pos + 1];\n      pos++;\n    }\n  }\n\n  origStr = '\\\\' + escapedStr;\n\n  if (!silent) {\n    token = state.push('text_special', '', 0);\n\n    if (ch1 < 256 && ESCAPED[ch1] !== 0) {\n      token.content = escapedStr;\n    } else {\n      token.content = origStr;\n    }\n\n    token.markup = origStr;\n    token.info = 'escape';\n  }\n\n  state.pos = pos + 1;\n  return true;\n};","// Parse backticks\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start,\n      max,\n      marker,\n      token,\n      matchStart,\n      matchEnd,\n      openerLength,\n      closerLength,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60\n  /* ` */\n  ) {\n      return false;\n    }\n\n  start = pos;\n  pos++;\n  max = state.posMax; // scan marker length\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60\n  /* ` */\n  ) {\n    pos++;\n  }\n\n  marker = state.src.slice(start, pos);\n  openerLength = marker.length;\n\n  if (state.backticksScanned && (state.backticks[openerLength] || 0) <= start) {\n    if (!silent) state.pending += marker;\n    state.pos += openerLength;\n    return true;\n  }\n\n  matchEnd = pos; // Nothing found in the cache, scan until the end of the line (or until marker is found)\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1; // scan marker length\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60\n    /* ` */\n    ) {\n      matchEnd++;\n    }\n\n    closerLength = matchEnd - matchStart;\n\n    if (closerLength === openerLength) {\n      // Found matching closer length.\n      if (!silent) {\n        token = state.push('code_inline', 'code', 0);\n        token.markup = marker;\n        token.content = state.src.slice(pos, matchStart).replace(/\\n/g, ' ').replace(/^ (.+) $/, '$1');\n      }\n\n      state.pos = matchEnd;\n      return true;\n    } // Some different length found, put it in cache as upper limit of where closer can be found\n\n\n    state.backticks[closerLength] = matchStart;\n  } // Scanned through the end, didn't find anything\n\n\n  state.backticksScanned = true;\n  if (!silent) state.pending += marker;\n  state.pos += openerLength;\n  return true;\n};","// Process [link](<to> \"stuff\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      token,\n      href = '',\n      title = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // might have found a valid shortcut link, disable reference parsing\n      parseReference = false; // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        } // [link](  <href>  \"title\"  )\n        //                ^^ skipping these spaces\n\n\n        start = pos;\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        } // [link](  <href>  \"title\"  )\n        //                  ^^^^^^^ parsing link title\n\n\n        res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n        if (pos < max && start !== pos && res.ok) {\n          title = res.str;\n          pos = res.pos; // [link](  <href>  \"title\"  )\n          //                         ^^ skipping these spaces\n\n          for (; pos < max; pos++) {\n            code = state.src.charCodeAt(pos);\n\n            if (!isSpace(code) && code !== 0x0A) {\n              break;\n            }\n          }\n        }\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          // parsing a valid shortcut link failed, fallback to reference\n          parseReference = true;\n        }\n\n      pos++;\n    }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n    token = state.push('link_open', 'a', 1);\n    token.attrs = attrs = [['href', href]];\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n\n    state.linkLevel++;\n    state.md.inline.tokenize(state);\n    state.linkLevel--;\n    token = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process ![image](<src> \"title\")\n'use strict';\n\nvar normalizeReference = require('../common/utils').normalizeReference;\n\nvar isSpace = require('../common/utils').isSpace;\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21\n  /* ! */\n  ) {\n      return false;\n    }\n\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B\n  /* [ */\n  ) {\n      return false;\n    }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false); // parser failed to find ']', so it's not a valid link\n\n  if (labelEnd < 0) {\n    return false;\n  }\n\n  pos = labelEnd + 1;\n\n  if (pos < max && state.src.charCodeAt(pos) === 0x28\n  /* ( */\n  ) {\n      //\n      // Inline link\n      //\n      // [link](  <href>  \"title\"  )\n      //        ^^ skipping these spaces\n      pos++;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      }\n\n      if (pos >= max) {\n        return false;\n      } // [link](  <href>  \"title\"  )\n      //          ^^^^^^ parsing link destination\n\n\n      start = pos;\n      res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n\n      if (res.ok) {\n        href = state.md.normalizeLink(res.str);\n\n        if (state.md.validateLink(href)) {\n          pos = res.pos;\n        } else {\n          href = '';\n        }\n      } // [link](  <href>  \"title\"  )\n      //                ^^ skipping these spaces\n\n\n      start = pos;\n\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n\n        if (!isSpace(code) && code !== 0x0A) {\n          break;\n        }\n      } // [link](  <href>  \"title\"  )\n      //                  ^^^^^^^ parsing link title\n\n\n      res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n\n      if (pos < max && start !== pos && res.ok) {\n        title = res.str;\n        pos = res.pos; // [link](  <href>  \"title\"  )\n        //                         ^^ skipping these spaces\n\n        for (; pos < max; pos++) {\n          code = state.src.charCodeAt(pos);\n\n          if (!isSpace(code) && code !== 0x0A) {\n            break;\n          }\n        }\n      } else {\n        title = '';\n      }\n\n      if (pos >= max || state.src.charCodeAt(pos) !== 0x29\n      /* ) */\n      ) {\n          state.pos = oldPos;\n          return false;\n        }\n\n      pos++;\n    } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') {\n      return false;\n    }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B\n    /* [ */\n    ) {\n        start = pos + 1;\n        pos = state.md.helpers.parseLinkLabel(state, pos);\n\n        if (pos >= 0) {\n          label = state.src.slice(start, pos++);\n        } else {\n          pos = labelEnd + 1;\n        }\n      } else {\n      pos = labelEnd + 1;\n    } // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n\n\n    if (!label) {\n      label = state.src.slice(labelStart, labelEnd);\n    }\n\n    ref = state.env.references[normalizeReference(label)];\n\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n\n    href = ref.href;\n    title = ref.title;\n  } //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n\n\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n    state.md.inline.parse(content, state.md, state.env, tokens = []);\n    token = state.push('image', 'img', 0);\n    token.attrs = attrs = [['src', href], ['alt', '']];\n    token.children = tokens;\n    token.content = content;\n\n    if (title) {\n      attrs.push(['title', title]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};","// Process autolinks '<protocol:...>'\n'use strict';\n/*eslint max-len:0*/\n\nvar EMAIL_RE = /^([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)$/;\nvar AUTOLINK_RE = /^([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)$/;\n\nmodule.exports = function autolink(state, silent) {\n  var url,\n      fullUrl,\n      token,\n      ch,\n      start,\n      max,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  ) {\n      return false;\n    }\n\n  start = state.pos;\n  max = state.posMax;\n\n  for (;;) {\n    if (++pos >= max) return false;\n    ch = state.src.charCodeAt(pos);\n    if (ch === 0x3C\n    /* < */\n    ) return false;\n    if (ch === 0x3E\n    /* > */\n    ) break;\n  }\n\n  url = state.src.slice(start + 1, pos);\n\n  if (AUTOLINK_RE.test(url)) {\n    fullUrl = state.md.normalizeLink(url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  if (EMAIL_RE.test(url)) {\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n\n    if (!state.md.validateLink(fullUrl)) {\n      return false;\n    }\n\n    if (!silent) {\n      token = state.push('link_open', 'a', 1);\n      token.attrs = [['href', fullUrl]];\n      token.markup = 'autolink';\n      token.info = 'auto';\n      token = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n      token = state.push('link_close', 'a', -1);\n      token.markup = 'autolink';\n      token.info = 'auto';\n    }\n\n    state.pos += url.length + 2;\n    return true;\n  }\n\n  return false;\n};","// Process html tags\n'use strict';\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\n\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n\n  return lc >= 0x61\n  /* a */\n  && lc <= 0x7a\n  /* z */\n  ;\n}\n\nmodule.exports = function html_inline(state, silent) {\n  var ch,\n      match,\n      max,\n      token,\n      pos = state.pos;\n\n  if (!state.md.options.html) {\n    return false;\n  } // Check start\n\n\n  max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x3C\n  /* < */\n  || pos + 2 >= max) {\n    return false;\n  } // Quick fail on second char\n\n\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch !== 0x21\n  /* ! */\n  && ch !== 0x3F\n  /* ? */\n  && ch !== 0x2F\n  /* / */\n  && !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n\n  if (!match) {\n    return false;\n  }\n\n  if (!silent) {\n    token = state.push('html_inline', '', 0);\n    token.content = match[0];\n    if (isLinkOpen(token.content)) state.linkLevel++;\n    if (isLinkClose(token.content)) state.linkLevel--;\n  }\n\n  state.pos += match[0].length;\n  return true;\n};","// Process html entity - &#123;, &#xAF;, &quot;, ...\n'use strict';\n\nvar entities = require('../common/entities');\n\nvar has = require('../common/utils').has;\n\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\n\nvar fromCodePoint = require('../common/utils').fromCodePoint;\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE = /^&([a-z][a-z0-9]{1,31});/i;\n\nmodule.exports = function entity(state, silent) {\n  var ch,\n      code,\n      match,\n      token,\n      pos = state.pos,\n      max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x26\n  /* & */\n  ) return false;\n  if (pos + 1 >= max) return false;\n  ch = state.src.charCodeAt(pos + 1);\n\n  if (ch === 0x23\n  /* # */\n  ) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          token = state.push('text_special', '', 0);\n          token.content = isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n    match = state.src.slice(pos).match(NAMED_RE);\n\n    if (match) {\n      if (has(entities, match[1])) {\n        if (!silent) {\n          token = state.push('text_special', '', 0);\n          token.content = entities[match[1]];\n          token.markup = match[0];\n          token.info = 'entity';\n        }\n\n        state.pos += match[0].length;\n        return true;\n      }\n    }\n  }\n\n  return false;\n};","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\nfunction processDelimiters(delimiters) {\n  var closerIdx,\n      openerIdx,\n      closer,\n      opener,\n      minOpenerIdx,\n      newMinOpenerIdx,\n      isOddMatch,\n      lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n  if (!max) return; // headerIdx is the first delimiter of the current (where closer is) delimiter run\n\n  var headerIdx = 0;\n  var lastTokenIdx = -2; // needs any value lower than -1\n\n  var jumps = [];\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n    jumps.push(0); // markers belong to same delimiter run if:\n    //  - they have adjacent tokens\n    //  - AND markers are the same\n    //\n\n    if (delimiters[headerIdx].marker !== closer.marker || lastTokenIdx !== closer.token - 1) {\n      headerIdx = closerIdx;\n    }\n\n    lastTokenIdx = closer.token; // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n\n    closer.length = closer.length || 0;\n    if (!closer.close) continue; // Previously calculated lower bounds (previous fails)\n    // for each marker, each delimiter length modulo 3,\n    // and for whether this closer can be an opener;\n    // https://github.com/commonmark/cmark/commit/34250e12ccebdc6372b8b49c44fab57c72443460\n\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [-1, -1, -1, -1, -1, -1];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][(closer.open ? 3 : 0) + closer.length % 3];\n    openerIdx = headerIdx - jumps[headerIdx] - 1;\n    newMinOpenerIdx = openerIdx;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= jumps[openerIdx] + 1) {\n      opener = delimiters[openerIdx];\n      if (opener.marker !== closer.marker) continue;\n\n      if (opener.open && opener.end < 0) {\n        isOddMatch = false; // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ? jumps[openerIdx - 1] + 1 : 0;\n          jumps[closerIdx] = closerIdx - openerIdx + lastJump;\n          jumps[openerIdx] = lastJump;\n          closer.open = false;\n          opener.end = closerIdx;\n          opener.close = false;\n          newMinOpenerIdx = -1; // treat next token as start of run,\n          // it optimizes skips in **<...>**a**<...>** pathological case\n\n          lastTokenIdx = -2;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.open ? 3 : 0) + (closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  processDelimiters(state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(tokens_meta[curr].delimiters);\n    }\n  }\n};","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\nmodule.exports = function fragments_join(state) {\n  var curr,\n      last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' && curr + 1 < max && tokens[curr + 1].type === 'text') {\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) {\n        tokens[last] = tokens[curr];\n      }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};","// Inline parser state\n'use strict';\n\nvar Token = require('../token');\n\nvar isWhiteSpace = require('../common/utils').isWhiteSpace;\n\nvar isPunctChar = require('../common/utils').isPunctChar;\n\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0; // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n\n  this.cache = {}; // List of emphasis-like delimiters for current tag\n\n  this.delimiters = []; // Stack of delimiter lists for upper level tags\n\n  this._prev_delimiters = []; // backtick length => last seen position\n\n  this.backticks = {};\n  this.backticksScanned = false; // Counter used to disable inline linkify-it execution\n  // inside <a> and markdown links\n\n  this.linkLevel = 0;\n} // Flush pending text\n//\n\n\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n}; // Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\n\n\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n\n    this._prev_delimiters.push(this.delimiters);\n\n    this.delimiters = [];\n    token_meta = {\n      delimiters: this.delimiters\n    };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n}; // Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\n\n\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start,\n      lastChar,\n      nextChar,\n      count,\n      can_open,\n      can_close,\n      isLastWhiteSpace,\n      isLastPunctChar,\n      isNextWhiteSpace,\n      isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start); // treat beginning of the line as a whitespace\n\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) {\n    pos++;\n  }\n\n  count = pos - start; // treat end of the line as a whitespace\n\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open = left_flanking && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking || isNextPunctChar);\n  } else {\n    can_open = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open: can_open,\n    can_close: can_close,\n    length: count\n  };\n}; // re-export Token class to use in block rules\n\n\nStateInline.prototype.Token = Token;\nmodule.exports = StateInline;","// markdown-it default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 100 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {},\n    block: {},\n    inline: {}\n  }\n};","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'fragments_join']\n    }\n  }\n};","// Commonmark default options\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: true,\n    // Enable HTML tags in source\n    xhtmlOut: true,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: \"\\u201C\\u201D\\u2018\\u2019\",\n\n    /* “”‘’ */\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n\n  },\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['blockquote', 'code', 'fence', 'heading', 'hr', 'html_block', 'lheading', 'list', 'reference', 'paragraph']\n    },\n    inline: {\n      rules: ['autolink', 'backticks', 'emphasis', 'entity', 'escape', 'html_inline', 'image', 'link', 'newline', 'text'],\n      rules2: ['balance_pairs', 'emphasis', 'fragments_join']\n    }\n  }\n};","module.exports = /[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/;","'use strict';\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse = require('./parse');","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n/**\n * new Ruler()\n **/\n\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = []; // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n\n  this.__cache__ = null;\n} ////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n// Find rule index by name\n//\n\n\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n\n  return -1;\n}; // Build rules lookup cache\n//\n\n\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = ['']; // collect unique names\n\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) {\n      return;\n    }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) {\n        return;\n      }\n\n      if (chain && rule.alt.indexOf(chain) < 0) {\n        return;\n      }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + name);\n  }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + beforeName);\n  }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n\n  var opt = options || {};\n\n  if (index === -1) {\n    throw new Error('Parser rule not found: ' + afterName);\n  }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\n\n\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and enable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\n\n\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  this.__rules__.forEach(function (rule) {\n    rule.enabled = false;\n  });\n\n  this.enable(list, ignoreInvalid);\n};\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\n\n\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) {\n    list = [list];\n  }\n\n  var result = []; // Search by name and disable\n\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) {\n        return;\n      }\n\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n  this.__cache__ = null;\n  return result;\n};\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\n\n\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  } // Chain can be empty, if rules disabled. But we still have to return Array.\n\n\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;","// Token class\n'use strict';\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\n\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type = type;\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n\n  this.tag = tag;\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n\n  this.attrs = null;\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n\n  this.map = null;\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n\n  this.nesting = nesting;\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n\n  this.level = 0;\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n\n  this.children = null;\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n\n  this.content = '';\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n\n  this.markup = '';\n  /**\n   * Token#info -> String\n   *\n   * Additional information:\n   *\n   * - Info string for \"fence\" tokens\n   * - The value \"auto\" for autolink \"link_open\" and \"link_close\" tokens\n   * - The string value of the item marker for ordered-list \"list_item_open\" tokens\n   **/\n\n  this.info = '';\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n\n  this.meta = null;\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n\n  this.block = false;\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n\n  this.hidden = false;\n}\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\n\n\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) {\n    return -1;\n  }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\n\n\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [attrData];\n  }\n};\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\n\n\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [name, value];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\n\n\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name),\n      value = null;\n\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n\n  return value;\n};\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\n\n\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([name, value]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\nmodule.exports = Token;","module.exports = /[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;","module.exports = /[\\0-\\x1F\\x7F-\\x9F]/;","module.exports = /[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/;","/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n/*eslint quotes:0*/\n\nmodule.exports = require('entities/lib/maps/entities.json');","// Regexps to match html elements\n'use strict';\n\nvar attr_name = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar unquoted = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\nvar attr_value = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\nvar attribute = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\nvar open_tag = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\nvar close_tag = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing = '<[?][\\\\s\\\\S]*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment + '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;","// ~~strike through~~\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i,\n      scanned,\n      token,\n      len,\n      ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x7E\n  /* ~ */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) {\n    return false;\n  }\n\n  if (len % 2) {\n    token = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token = state.push('text', '', 0);\n    token.content = ch + ch;\n    state.delimiters.push({\n      marker: marker,\n      length: 0,\n      // disable \"rule of 3\" length checks meant for emphasis\n      token: state.tokens.length - 1,\n      end: -1,\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E\n    /* ~ */\n    ) {\n        continue;\n      }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n    token = state.tokens[startDelim.token];\n    token.type = 's_open';\n    token.tag = 's';\n    token.nesting = 1;\n    token.markup = '~~';\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = 's_close';\n    token.tag = 's';\n    token.nesting = -1;\n    token.markup = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' && state.tokens[endDelim.token - 1].content === '~') {\n      loneMarkers.push(endDelim.token - 1);\n    }\n  } // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n\n\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Process *this* and _that_\n//\n'use strict'; // Insert each marker as a separate text token, and add it to delimiter list\n//\n\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i,\n      scanned,\n      token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) {\n    return false;\n  }\n\n  if (marker !== 0x5F\n  /* _ */\n  && marker !== 0x2A\n  /* * */\n  ) {\n      return false;\n    }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n      // A position of the token this delimiter corresponds to.\n      //\n      token: state.tokens.length - 1,\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end: -1,\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open: scanned.can_open,\n      close: scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n  return true;\n};\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F\n    /* _ */\n    && startDelim.marker !== 0x2A\n    /* * */\n    ) {\n        continue;\n      } // Process only opening markers\n\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end]; // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n\n    isStrong = i > 0 && delimiters[i - 1].end === startDelim.end + 1 && // check that first two markers match and adjacent\n    delimiters[i - 1].marker === startDelim.marker && delimiters[i - 1].token === startDelim.token - 1 && // check that last two markers are adjacent (we can safely assume they match)\n    delimiters[startDelim.end + 1].token === endDelim.token + 1;\n    ch = String.fromCharCode(startDelim.marker);\n    token = state.tokens[startDelim.token];\n    token.type = isStrong ? 'strong_open' : 'em_open';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n    token = state.tokens[endDelim.token];\n    token.type = isStrong ? 'strong_close' : 'em_close';\n    token.tag = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n} // Walk through delimiter list and replace text tokens with tags\n//\n\n\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};","// Utilities\n//\n'use strict';\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _class(obj) {\n  return Object.prototype.toString.call(obj);\n}\n\nfunction isString(obj) {\n  return _class(obj) === '[object String]';\n}\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n} // Merge objects\n//\n\n\nfunction assign(obj\n/*from1, from2, from3, ...*/\n) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    if (_typeof(source) !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n  return obj;\n} // Remove element from array and put another array at those position.\n// Useful for some operations with tokens\n\n\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) {\n    return false;\n  } // never used\n\n\n  if (c >= 0xFDD0 && c <= 0xFDEF) {\n    return false;\n  }\n\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) {\n    return false;\n  } // control codes\n\n\n  if (c >= 0x00 && c <= 0x08) {\n    return false;\n  }\n\n  if (c === 0x0B) {\n    return false;\n  }\n\n  if (c >= 0x0E && c <= 0x1F) {\n    return false;\n  }\n\n  if (c >= 0x7F && c <= 0x9F) {\n    return false;\n  } // out of range\n\n\n  if (c > 0x10FFFF) {\n    return false;\n  }\n\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n\n  return String.fromCharCode(c);\n}\n\nvar UNESCAPE_MD_RE = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))$/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23\n  /* # */\n  && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ? parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) {\n    return str;\n  }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) {\n      return escaped;\n    }\n\n    return replaceEntityPattern(match, entity);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n\n  return str;\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n\n  return false;\n} // Zs (unicode class) || [\\t\\f\\v\\r\\n]\n\n\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) {\n    return true;\n  }\n\n  switch (code) {\n    case 0x09: // \\t\n\n    case 0x0A: // \\n\n\n    case 0x0B: // \\v\n\n    case 0x0C: // \\f\n\n    case 0x0D: // \\r\n\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n\n  return false;\n} ////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\n\n\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex'); // Currently without astral characters support.\n\n\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n} // Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\n\n\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21\n    /* ! */\n    :\n    case 0x22\n    /* \" */\n    :\n    case 0x23\n    /* # */\n    :\n    case 0x24\n    /* $ */\n    :\n    case 0x25\n    /* % */\n    :\n    case 0x26\n    /* & */\n    :\n    case 0x27\n    /* ' */\n    :\n    case 0x28\n    /* ( */\n    :\n    case 0x29\n    /* ) */\n    :\n    case 0x2A\n    /* * */\n    :\n    case 0x2B\n    /* + */\n    :\n    case 0x2C\n    /* , */\n    :\n    case 0x2D\n    /* - */\n    :\n    case 0x2E\n    /* . */\n    :\n    case 0x2F\n    /* / */\n    :\n    case 0x3A\n    /* : */\n    :\n    case 0x3B\n    /* ; */\n    :\n    case 0x3C\n    /* < */\n    :\n    case 0x3D\n    /* = */\n    :\n    case 0x3E\n    /* > */\n    :\n    case 0x3F\n    /* ? */\n    :\n    case 0x40\n    /* @ */\n    :\n    case 0x5B\n    /* [ */\n    :\n    case 0x5C\n    /* \\ */\n    :\n    case 0x5D\n    /* ] */\n    :\n    case 0x5E\n    /* ^ */\n    :\n    case 0x5F\n    /* _ */\n    :\n    case 0x60\n    /* ` */\n    :\n    case 0x7B\n    /* { */\n    :\n    case 0x7C\n    /* | */\n    :\n    case 0x7D\n    /* } */\n    :\n    case 0x7E\n    /* ~ */\n    :\n      return true;\n\n    default:\n      return false;\n  }\n} // Hepler to unify [reference labels].\n//\n\n\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' '); // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  } // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n\n\n  return str.toLowerCase().toUpperCase();\n} ////////////////////////////////////////////////////////////////////////////////\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\n\n\nexports.lib = {};\nexports.lib.mdurl = require('mdurl');\nexports.lib.ucmicro = require('uc.micro');\nexports.assign = assign;\nexports.isString = isString;\nexports.has = has;\nexports.unescapeMd = unescapeMd;\nexports.unescapeAll = unescapeAll;\nexports.isValidEntityCode = isValidEntityCode;\nexports.fromCodePoint = fromCodePoint; // exports.replaceEntities     = replaceEntities;\n\nexports.escapeHtml = escapeHtml;\nexports.arrayReplaceAt = arrayReplaceAt;\nexports.isSpace = isSpace;\nexports.isWhiteSpace = isWhiteSpace;\nexports.isMdAsciiPunct = isMdAsciiPunct;\nexports.isPunctChar = isPunctChar;\nexports.escapeRE = escapeRE;\nexports.normalizeReference = normalizeReference;"]},"banner":"For license information please see 4-7f19284728f19a9fdf5a.chunk.js.LICENSE.txt","extractedComments":"/*! https://mths.be/punycode v1.4.1 by @mathias */\n","commentsFilename":"js/4-7f19284728f19a9fdf5a.chunk.js.LICENSE.txt"}